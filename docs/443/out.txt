List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack74 = new java.io.BufferedReader,142,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, specialinvoke $stack74.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack75), 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reader#7 = $stack74,143,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reader#7 = $stack74, 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,virtualinvoke reader#7.<java.io.BufferedReader: void close()>(),207,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, virtualinvoke reader#7.<java.io.BufferedReader: void close()>(), 207)))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack74 = new java.io.BufferedReader,142,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, specialinvoke $stack74.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack75), 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reader#7 = $stack74,143,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reader#7 = $stack74, 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if reader#7 == null goto $stack17 = virtualinvoke this.<org.datasift.streamconsumer.HttpMultiThread: int getConsumerState()>(),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reader#7 = $stack74,143,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reader#7 = $stack74, 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,virtualinvoke reader#7.<java.io.BufferedReader: void close()>(),207,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, virtualinvoke reader#7.<java.io.BufferedReader: void close()>(), 207)))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reader#7 = $stack74,143,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reader#7 = $stack74, 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if reader#7 == null goto $stack17 = virtualinvoke this.<org.datasift.streamconsumer.HttpMultiThread: int getConsumerState()>(),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if statusCode < 400 goto (branch),138,SourceNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if statusCode >= 500 goto (branch),186,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if statusCode == 420 goto (branch),162,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reader#7 = $stack74,143,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reader#7 = $stack74, 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,virtualinvoke reader#7.<java.io.BufferedReader: void close()>(),207,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, virtualinvoke reader#7.<java.io.BufferedReader: void close()>(), 207)))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection refused: "),152,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Connection refused: '), 152)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(statusCode),152,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(statusCode), 152)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" "),152,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' '), 152)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack87 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack86),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack87 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack86), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reason = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = "Connection failed due to a network error",200,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack16 = virtualinvoke reason.<java.lang.String: int length()>(),190,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack16 != 0 goto (branch),190,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack27 != 2 goto (branch),191,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>,205,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>, 205)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack29 == 0 goto (branch),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack74 = new java.io.BufferedReader,142,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, specialinvoke $stack74.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack75), 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reader#7 = $stack74,143,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reader#7 = $stack74, 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if reader#7 == null goto $stack17 = virtualinvoke this.<org.datasift.streamconsumer.HttpMultiThread: int getConsumerState()>(),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack85 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(),155,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack85 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(), 155)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack86 = interfaceinvoke $stack85.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>(),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack86 = interfaceinvoke $stack85.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>(), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" "),152,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' '), 152)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack87 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack86),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack87 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack86), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reason = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = "Connection failed due to a network error",200,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack16 = virtualinvoke reason.<java.lang.String: int length()>(),190,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack16 != 0 goto (branch),190,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack27 != 2 goto (branch),191,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>,205,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>, 205)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack29 == 0 goto (branch),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reader#7 = $stack74,143,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reader#7 = $stack74, 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,virtualinvoke reader#7.<java.io.BufferedReader: void close()>(),207,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, virtualinvoke reader#7.<java.io.BufferedReader: void close()>(), 207)))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack74 = new java.io.BufferedReader,142,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, specialinvoke $stack74.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack75), 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reader#7 = $stack74,143,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reader#7 = $stack74, 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,virtualinvoke reader#7.<java.io.BufferedReader: void close()>(),207,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, virtualinvoke reader#7.<java.io.BufferedReader: void close()>(), 207)))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reader#7 = $stack74,143,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reader#7 = $stack74, 143)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if reader#7 == null goto $stack17 = virtualinvoke this.<org.datasift.streamconsumer.HttpMultiThread: int getConsumerState()>(),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,data = $stack79,148,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, data = $stack79, 148)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = virtualinvoke data.<org.datasift.JSONdn: java.lang.String getStringVal(java.lang.String)>("message"),150,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reason = virtualinvoke data.<org.datasift.JSONdn: java.lang.String getStringVal(java.lang.String)>('message'), 150)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = "Connection failed due to a network error",200,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack16 = virtualinvoke reason.<java.lang.String: int length()>(),190,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack16 != 0 goto (branch),190,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack27 != 2 goto (branch),191,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>,205,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>, 205)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack29 == 0 goto (branch),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack80 = virtualinvoke data.<org.datasift.JSONdn: boolean has(java.lang.String)>("message"),149,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack80 = virtualinvoke data.<org.datasift.JSONdn: boolean has(java.lang.String)>('message'), 149)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack80 == 0 goto $stack81 = new java.lang.StringBuilder,149,SourceNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" "),152,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' '), 152)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack87 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack86),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack87 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack86), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reason = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = "Connection failed due to a network error",200,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack16 = virtualinvoke reason.<java.lang.String: int length()>(),190,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack16 != 0 goto (branch),190,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack27 != 2 goto (branch),191,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>,205,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>, 205)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack29 == 0 goto (branch),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = virtualinvoke data.<org.datasift.JSONdn: java.lang.String getStringVal(java.lang.String)>("message"),150,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reason = virtualinvoke data.<org.datasift.JSONdn: java.lang.String getStringVal(java.lang.String)>('message'), 150)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = "Connection failed due to a network error",200,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack16 = virtualinvoke reason.<java.lang.String: int length()>(),190,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack16 != 0 goto (branch),190,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack27 != 2 goto (branch),191,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>,205,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>, 205)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack29 == 0 goto (branch),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if statusCode < 400 goto (branch),138,SourceNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if statusCode >= 500 goto (branch),186,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if statusCode == 420 goto (branch),162,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,data = $stack79,148,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, data = $stack79, 148)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = virtualinvoke data.<org.datasift.JSONdn: java.lang.String getStringVal(java.lang.String)>("message"),150,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reason = virtualinvoke data.<org.datasift.JSONdn: java.lang.String getStringVal(java.lang.String)>('message'), 150)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = "Connection failed due to a network error",200,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack16 = virtualinvoke reason.<java.lang.String: int length()>(),190,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack16 != 0 goto (branch),190,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack27 != 2 goto (branch),191,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>,205,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>, 205)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack29 == 0 goto (branch),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack86 = interfaceinvoke $stack85.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>(),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack86 = interfaceinvoke $stack85.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>(), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" "),152,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' '), 152)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack87 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack86),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack87 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack86), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>(),156,SourceNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, reason = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>(), 156)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reason = "Connection failed due to a network error",200,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack16 = virtualinvoke reason.<java.lang.String: int length()>(),190,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack16 = virtualinvoke reason.<java.lang.String: int length()>(), 190)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack16 != 0 goto (branch),190,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack27 != 2 goto (branch),191,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,$stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>,205,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack29 = this.<org.datasift.streamconsumer.HttpMultiThread: boolean _auto_reconnect>, 205)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack29 == 0 goto (branch),205,SinkNode, path: ))

List(Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if $stack29 == 0 goto (branch),205,SourceNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if reconnect_delay != 0 goto (branch),195,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if reconnect_delay >= 16 goto reason = "Connection failed due to a network error",197,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reconnect_delay = reconnect_delay + 1,198,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack105 = reconnect_delay * 1000, 103)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reconnect_delay = reconnect_delay * 2,165,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack105 = reconnect_delay * 1000, 103)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reconnect_delay = 1,196,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack105 = reconnect_delay * 1000, 103)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if reconnect_delay != 0 goto (branch),162,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,reconnect_delay = 10,163,SimpleNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, $stack105 = reconnect_delay * 1000, 103)) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,if reconnect_delay >= 240 goto $stack61 = new java.lang.StringBuilder,164,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpMultiThread: void run()>,virtualinvoke this.<org.datasift.streamconsumer.HttpMultiThread: void stopConsumer()>(),172,SinkNode, path: (<org.datasift.streamconsumer.HttpMultiThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpMultiThread: void stopConsumer()>(), 172)))

