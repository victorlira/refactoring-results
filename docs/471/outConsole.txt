Running soot scenario geoserver-manager;it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder;add(Element, String, String);352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,54700
Time to perform Confluence 1 Inter 0,56700
Configure Soot Confluence 2 Inter 0,18100
Time to perform Confluence 2 Inter 0,08700
Visited methods: 18
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack8 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack9 = lengthof $stack8,1969,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack9 = lengthof $stack8, 1969))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack8 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack6 = l0.<java.lang.String: char[] value>,1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack6 = l0.<java.lang.String: char[] value>, 1933)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack20 = l0[l10],1784,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack20 = l0[l10], 1784))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack20 = l0[l10],1784,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack20 = l0[l10], 1784)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack7.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1931,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack7.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1931))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack7.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1931,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack7.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1931)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: ), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack27 = l0[l9],1776,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack27 = l0[l9], 1776))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack27 = l0[l9],1776,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack27 = l0[l9], 1776)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack14 = l0[l9],1771,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack14 = l0[l9], 1771))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack14 = l0[l9],1771,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack14 = l0[l9], 1771)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack3 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack3 = l0.<java.lang.String: char[] value>, 1718))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack3 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack3 = l0.<java.lang.String: char[] value>, 1718)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack20 = l0[l10],1784,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack20 = l0[l10], 1784))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack20 = l0[l10],1784,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack20 = l0[l10], 1784)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack5 = lengthof $stack4,1962,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack5 = lengthof $stack4, 1962)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack3 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack3 = l0.<java.lang.String: char[] value>, 1718))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack3 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack3 = l0.<java.lang.String: char[] value>, 1718)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack6 = l0.<java.lang.String: char[] value>,1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack6 = l0.<java.lang.String: char[] value>, 1933)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack6 = l0.<java.lang.String: char[] value>,1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack6 = l0.<java.lang.String: char[] value>, 1933)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9),205,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9), 205))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: void <init>(char[],int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),192,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 192))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: void <init>(char[],int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),192,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 192)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack7.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1931,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack7.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1931))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack7.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1931,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack7.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1931)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: ), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack6 = l0.<java.lang.String: char[] value>,1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack6 = l0.<java.lang.String: char[] value>, 1933)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack6 = l0.<java.lang.String: char[] value>,1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack6 = l0.<java.lang.String: char[] value>, 1933)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack6 = l0.<java.lang.String: char[] value>,1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack6 = l0.<java.lang.String: char[] value>, 1933)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: ), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack8 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack9 = lengthof $stack8,1969,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack9 = lengthof $stack8, 1969))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack8 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack27 = l0[l9],1776,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack27 = l0[l9], 1776))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack27 = l0[l9],1776,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack27 = l0[l9], 1776)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: void <init>(char[],int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),192,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 192))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: void <init>(char[],int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),192,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 192)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1),1927,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1), 1927))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1),1927,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1), 1927)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack5 = lengthof $stack4,1962,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack5 = lengthof $stack4, 1962)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9),205,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9), 205))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: boolean contains(java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack14 = l0[l9],1771,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack14 = l0[l9], 1771))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698)) => Node(<java.lang.String: int indexOf(java.lang.String,int)>,$stack8 = l0.<java.lang.String: char[] value>,1718,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,l0 := @parameter0: char[],-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718)) => Node(<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>,$stack14 = l0[l9],1771,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack14 = l0[l9], 1771)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1),1927,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1), 1927))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: int indexOf(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<java.lang.String: int indexOf(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0),1698,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1),1927,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1), 1927)), SOURCE=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))]
Confluence interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Confluence flows from execution of lines 99 and 101 to line 100, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and used in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969)
Confluence interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Confluence flows from execution of lines 99 and 99 to line 100, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and used in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204)
Confluence interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Confluence flows from execution of lines 101 and 101 to line 98, defined in newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and used in $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>("/")
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 98 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98) => (<java.lang.String: boolean contains(java.lang.CharSequence)>, $stack3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>($stack2), 2133) => (<java.lang.String: int indexOf(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String,int)>(l1, 0), 1698) => (<java.lang.String: int indexOf(java.lang.String,int)>, $stack9 = staticinvoke <java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>($stack8, 0, $stack7, $stack6, 0, $stack5, l2), 1718) => (<java.lang.String: int indexOf(char[],int,int,char[],int,int,int)>, $stack20 = l0[l10], 1784)
Confluence interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Confluence flows from execution of lines 99 and 101 to line 101, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and used in newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack7.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1931)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,51200
Runtime: 0.007s
Time to perform OA Inter 0,55100
OA Inter Visited methods: 1
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,52700
Time to perform DFP Inter 0,42100
Depth limit: 5
CONFLICTS: []
Visited methods: 9
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,52800
Time to perform DFP Inter 0,55700
Depth limit: 5
CONFLICTS: DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 101 to 103, defined in newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and propagated in child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 103 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 106, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 106 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 100 to 112, defined in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i) and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 112, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 101 to 112, defined in newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and propagated in specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 100 to 106, defined in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i) and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)
Caused by line 106 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 109, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 100 to 105, defined in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i) and propagated in specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 103, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 103 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 101 to 109, defined in newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 98, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>("/")
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 98 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 101 to 98, defined in newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and propagated in $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>("/")
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 98 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 105, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 101 to 106, defined in newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 106 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 100 to 103, defined in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i) and propagated in child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)
Caused by line 103 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 100 to 109, defined in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i) and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 101 to 105, defined in newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14) and propagated in specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>("/"),98,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>("/"),98,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)))]
Visited methods: 9
 Analysis results
----------------------------
 Number of conflicts: 20
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,52200
Time to perform PDG 0,35400
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,36800
Time to perform PDG 0,38900
CONFLICTS: [List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = $stack17,105,SimpleNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = $stack17, 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)))]
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
