SOURCE=>BASE: Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack16[1] = $stack40,75,SourceNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16), 49)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16),49,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16), 49))
SINK=>BASE: Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack8 = virtualinvoke $stack7.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>("${WORKSPACE}/dependency-check-report.xml"),54,SourceNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack8 = virtualinvoke $stack7.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>('${WORKSPACE}/dependency-check-report.xml'), 54)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack9 = virtualinvoke $stack8.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition build()>(),55,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack9 = virtualinvoke $stack8.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition build()>(), 55)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16),49,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16), 49))

SOURCE=>BASE: Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack16[1] = $stack40,75,SourceNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16), 49)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16),49,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16), 49))
SINK=>BASE: Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack14 = virtualinvoke $stack13.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>("${WORKSPACE}/dependency-check-report.html"),60,SourceNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack14 = virtualinvoke $stack13.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>('${WORKSPACE}/dependency-check-report.html'), 60)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack15 = virtualinvoke $stack14.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition build()>(),61,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack15 = virtualinvoke $stack14.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition build()>(), 61)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16),49,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, virtualinvoke context.<org.sonar.api.Plugin$Context: org.sonar.api.Plugin$Context addExtensions(java.lang.Object,java.lang.Object,java.lang.Object[])>($stack9, $stack15, $stack16), 49))

List(Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack37 = virtualinvoke $stack33.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>($stack36),73,SourceNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack37 = virtualinvoke $stack33.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>($stack36), 73)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack39 = virtualinvoke $stack37.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder type(org.sonar.api.PropertyType)>($stack38),74,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack39 = virtualinvoke $stack37.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder type(org.sonar.api.PropertyType)>($stack38), 74)))

List(Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack37 = virtualinvoke $stack33.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>($stack36),73,SourceNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack37 = virtualinvoke $stack33.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>($stack36), 73)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack39 = virtualinvoke $stack37.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder type(org.sonar.api.PropertyType)>($stack38),74,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack39 = virtualinvoke $stack37.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder type(org.sonar.api.PropertyType)>($stack38), 74)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack40 = virtualinvoke $stack39.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition build()>(),75,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack40 = virtualinvoke $stack39.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition build()>(), 75)))

List(Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack37 = virtualinvoke $stack33.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>($stack36),73,SourceNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack37 = virtualinvoke $stack33.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>($stack36), 73)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack39 = virtualinvoke $stack37.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder type(org.sonar.api.PropertyType)>($stack38),74,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack39 = virtualinvoke $stack37.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder type(org.sonar.api.PropertyType)>($stack38), 74)))

List(Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack37 = virtualinvoke $stack33.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>($stack36),73,SourceNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack37 = virtualinvoke $stack33.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String)>($stack36), 73)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack39 = virtualinvoke $stack37.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder type(org.sonar.api.PropertyType)>($stack38),74,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack39 = virtualinvoke $stack37.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition$Builder type(org.sonar.api.PropertyType)>($stack38), 74)) => Node(<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>,$stack40 = virtualinvoke $stack39.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition build()>(),75,SinkNode, path: (<org.sonar.dependencycheck.DependencyCheckPlugin: void define(org.sonar.api.Plugin$Context)>, $stack40 = virtualinvoke $stack39.<org.sonar.api.config.PropertyDefinition$Builder: org.sonar.api.config.PropertyDefinition build()>(), 75)))

