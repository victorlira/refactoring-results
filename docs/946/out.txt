List(Node(<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,if oldSchema != null goto $stack6 = virtualinvoke oldSchema.<cz.startnet.utils.pgdiff.schema.PgSchema: java.util.List getTables()>(),482,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,$stack6 = virtualinvoke oldSchema.<cz.startnet.utils.pgdiff.schema.PgSchema: java.util.List getTables()>(),486,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, $stack6 = virtualinvoke oldSchema.<cz.startnet.utils.pgdiff.schema.PgSchema: java.util.List getTables()>(), 486)) => Node(<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,l4 = interfaceinvoke $stack6.<java.util.List: java.util.Iterator iterator()>(),486,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, l4 = interfaceinvoke $stack6.<java.util.List: java.util.Iterator iterator()>(), 486)) => Node(<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,$stack9 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),493,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, $stack9 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 493)) => Node(<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,table = (cz.startnet.utils.pgdiff.schema.PgTable) $stack9,493,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, table = (cz.startnet.utils.pgdiff.schema.PgTable) $stack9, 493)) => Node(<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,$stack10 = virtualinvoke table.<cz.startnet.utils.pgdiff.schema.PgTable: java.lang.String getName()>(),487,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, $stack10 = virtualinvoke table.<cz.startnet.utils.pgdiff.schema.PgTable: java.lang.String getName()>(), 487)) => Node(<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,$stack11 = virtualinvoke newSchema.<cz.startnet.utils.pgdiff.schema.PgSchema: boolean containsTable(java.lang.String)>($stack10),487,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, $stack11 = virtualinvoke newSchema.<cz.startnet.utils.pgdiff.schema.PgSchema: boolean containsTable(java.lang.String)>($stack10), 487)) => Node(<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,if $stack11 != 0 goto (branch),487,SimpleNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,virtualinvoke searchPathHelper.<cz.startnet.utils.pgdiff.SearchPathHelper: void outputSearchPath(java.io.PrintWriter)>(writer),488,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffTables: void dropTables(java.io.PrintWriter,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, virtualinvoke searchPathHelper.<cz.startnet.utils.pgdiff.SearchPathHelper: void outputSearchPath(java.io.PrintWriter)>(writer), 488)))

