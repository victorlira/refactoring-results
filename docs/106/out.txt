source(de.slackspace.openkeepass.crypto.Sha256, hash, 33, $stack6 = new java.lang.IllegalArgumentException, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73), at de.slackspace.openkeepass.crypto.Sha256.hash(Sha256.java:33)]) => sink(de.slackspace.openkeepass.crypto.Sha256, hash, 33, $stack6 = new java.lang.IllegalArgumentException, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73), at de.slackspace.openkeepass.crypto.Sha256.hash(Sha256.java:33)])

source(de.slackspace.openkeepass.crypto.Sha256, hash, 40, md#2 = $stack7, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73), at de.slackspace.openkeepass.crypto.Sha256.hash(Sha256.java:40)]) => sink(de.slackspace.openkeepass.crypto.Sha256, hash, 40, md#2 = $stack7, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73), at de.slackspace.openkeepass.crypto.Sha256.hash(Sha256.java:40)])

source(de.slackspace.openkeepass.crypto.Sha256, hash, 41, $stack8 = new java.lang.UnsupportedOperationException, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73), at de.slackspace.openkeepass.crypto.Sha256.hash(Sha256.java:41)]) => sink(de.slackspace.openkeepass.crypto.Sha256, hash, 41, $stack8 = new java.lang.UnsupportedOperationException, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73), at de.slackspace.openkeepass.crypto.Sha256.hash(Sha256.java:41)])

source(de.slackspace.openkeepass.stream.HashedBlockOutputStream, writeHashedBlock, 73, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73)]) => sink(de.slackspace.openkeepass.stream.HashedBlockOutputStream, writeHashedBlock, 73, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73)])

source(de.slackspace.openkeepass.stream.HashedBlockOutputStream, writeHashedBlock, 73, $stack13 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: int bufferPos>, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73)]) => sink(de.slackspace.openkeepass.stream.HashedBlockOutputStream, writeHashedBlock, 73, $stack13 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: int bufferPos>, [at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73)])

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack6 = new java.lang.IllegalArgumentException,33,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bytes must not be null"),33,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md#2 = $stack7,40,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md#2 = $stack7, 40)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2),41,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,buf = newarray (byte)[8],128,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf),131,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,bytes := @parameter0: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,if bytes != null goto md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),32,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack8 = new java.lang.UnsupportedOperationException,41,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2),41,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,bytes := @parameter0: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length),38,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack13 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: int bufferPos>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack13 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: int bufferPos>, 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13),73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash),74,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74)))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13),73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash),74,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,buf = newarray (byte)[8],128,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0),130,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,return $stack5,39,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,$stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>,131,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, $stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>, 131)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf),131,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131)))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,return $stack5,39,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13),73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash),74,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74)))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length),38,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack6 = new java.lang.IllegalArgumentException,33,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bytes must not be null"),33,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md#2 = $stack7,40,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md#2 = $stack7, 40)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2),41,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,buf = newarray (byte)[8],128,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf),131,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,bytes := @parameter0: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,if bytes != null goto md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),32,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack8 = new java.lang.UnsupportedOperationException,41,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2),41,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,bytes := @parameter0: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length),38,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,buf = newarray (byte)[8],128,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0),130,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,return $stack5,39,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,$stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>,131,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, $stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>, 131)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf),131,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131)))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,return $stack5,39,SinkNode, path: ))

List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length),38,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)))

List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13),73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash),74,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74)))

