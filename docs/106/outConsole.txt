Running soot scenario openkeepass;de.slackspace.openkeepass.stream.HashedBlockOutputStream;writeHashedBlock();3dc44ae983c2022ca0544609982fcac1ec1bff0c
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openkeepass/3dc44ae983c2022ca0544609982fcac1ec1bff0c/original-without-dependencies/openkeepass-0.6.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,40900
Time to perform Confluence 1 Inter 0,55700
Configure Soot Confluence 2 Inter 0,21100
Time to perform Confluence 2 Inter 0,06800
Visited methods: 18
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openkeepass/3dc44ae983c2022ca0544609982fcac1ec1bff0c/original-without-dependencies/openkeepass-0.6.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,52300
Runtime: 0.008s
OA interference in class HashedBlockOutputStream, method void writeHashedBlock(), execution of line 73 overrides 73, assigning to variable md#2, 
Caused by line 73 flow:
at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73)
at de.slackspace.openkeepass.crypto.Sha256.hash(Sha256.java:40)
And line 73 flow:
at de.slackspace.openkeepass.stream.HashedBlockOutputStream.writeHashedBlock(HashedBlockOutputStream.java:73)
at de.slackspace.openkeepass.crypto.Sha256.hash(Sha256.java:40)
 
Time to perform OA Inter 0,57600
OA Inter Visited methods: 4
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openkeepass/3dc44ae983c2022ca0544609982fcac1ec1bff0c/original-without-dependencies/openkeepass-0.6.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,43800
Time to perform DFP Inter 0,50100
Depth limit: 5
CONFLICTS: DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in md#2 = $stack7 and propagated in specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md#2 = $stack7, 40)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer> and propagated in virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in $stack6 = new java.lang.IllegalArgumentException and propagated in specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bytes must not be null")
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256") and propagated in virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 77 to 77, defined in buf = newarray (byte)[8] and propagated in virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 74, defined in md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256") and propagated in virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)
Caused by line 74 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 77 to 77, defined in $stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream> and propagated in virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, $stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>, 131)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 74, defined in $stack13 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: int bufferPos> and propagated in virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack13 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: int bufferPos>, 73)
Caused by line 74 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in $stack8 = new java.lang.UnsupportedOperationException and propagated in specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 74, defined in $stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>() and propagated in virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)
Caused by line 74 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 77 to 77, defined in buf = newarray (byte)[8] and propagated in virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131)
[List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack6 = new java.lang.IllegalArgumentException,33,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bytes must not be null"),33,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33))), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md#2 = $stack7,40,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md#2 = $stack7, 40)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2),41,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41))), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,buf = newarray (byte)[8],128,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf),131,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131))), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,bytes := @parameter0: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,if bytes != null goto md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),32,SinkNode, path: )), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack8 = new java.lang.UnsupportedOperationException,41,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2),41,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41))), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,bytes := @parameter0: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length),38,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38))), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack13 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: int bufferPos>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack13 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: int bufferPos>, 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13),73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash),74,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74))), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13),73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash),74,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74))), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,buf = newarray (byte)[8],128,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0),130,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130))), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,return $stack5,39,SinkNode, path: )), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,$stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>,131,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, $stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>, 131)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf),131,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131))), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,return $stack5,39,SinkNode, path: )), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13),73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash),74,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74))), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length),38,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)))]
Visited methods: 9
 Analysis results
----------------------------
 Number of conflicts: 14
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openkeepass/3dc44ae983c2022ca0544609982fcac1ec1bff0c/original-without-dependencies/openkeepass-0.6.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,38600
Time to perform DFP Inter 0,47600
Depth limit: 5
CONFLICTS: DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in md#2 = $stack7 and propagated in specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md#2 = $stack7, 40)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer> and propagated in virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in $stack6 = new java.lang.IllegalArgumentException and propagated in specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bytes must not be null")
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256") and propagated in virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 73 to 73, defined in $stack8 = new java.lang.UnsupportedOperationException and propagated in specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)
Caused by line 73 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 77 to 77, defined in buf = newarray (byte)[8] and propagated in virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 77 to 77, defined in $stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream> and propagated in virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, $stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>, 131)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131)
DF interference in <de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>
Data flows from execution of line 77 to 77, defined in buf = newarray (byte)[8] and propagated in virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)
Caused by line 77 flow: path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131)
[List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack6 = new java.lang.IllegalArgumentException,33,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bytes must not be null"),33,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>('Bytes must not be null'), 33))), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md#2 = $stack7,40,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md#2 = $stack7, 40)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2),41,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41))), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,buf = newarray (byte)[8],128,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf),131,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131))), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,bytes := @parameter0: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,if bytes != null goto md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),32,SinkNode, path: )), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack8 = new java.lang.UnsupportedOperationException,41,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>("The algorithm \'SHA-256\' is not supported", md#2),41,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>('The algorithm \'SHA-256\' is not supported', md#2), 41))), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,$stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>,73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, $stack14 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: byte[] buffer>, 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,bytes := @parameter0: byte[],-1,SimpleNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length),38,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38))), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,buf = newarray (byte)[8],128,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0),130,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long,byte[],int)>(val, buf, 0), 130))), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,return $stack5,39,SinkNode, path: )), List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,$stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>,131,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, $stack4 = this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: java.io.OutputStream baseStream>, 131)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>,virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf),131,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, specialinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>(), 77) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeZeroBits()>, virtualinvoke this.<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>(0L), 91) => (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeLong(long)>, virtualinvoke $stack4.<java.io.OutputStream: void write(byte[])>(buf), 131))), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,$stack5 = virtualinvoke md.<java.security.MessageDigest: byte[] digest()>(),39,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,return $stack5,39,SinkNode, path: )), List(Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256"),37,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, md = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>('SHA-256'), 37)) => Node(<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>,virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length),38,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73) => (<de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>, virtualinvoke md.<java.security.MessageDigest: void update(byte[],int,int)>(bytes, offset, length), 38)))]
Visited methods: 9
 Analysis results
----------------------------
 Number of conflicts: 11
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openkeepass/3dc44ae983c2022ca0544609982fcac1ec1bff0c/original-without-dependencies/openkeepass-0.6.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,53400
Time to perform PDG 0,41400
CONFLICTS: [List(Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13),73,SourceNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, hash = staticinvoke <de.slackspace.openkeepass.crypto.Sha256: byte[] hash(byte[],int,int)>($stack14, 0, $stack13), 73)) => Node(<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>,virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash),74,SinkNode, path: (<de.slackspace.openkeepass.stream.HashedBlockOutputStream: void writeHashedBlock()>, virtualinvoke $stack16.<java.io.OutputStream: void write(byte[])>(hash), 74)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openkeepass/3dc44ae983c2022ca0544609982fcac1ec1bff0c/original-without-dependencies/openkeepass-0.6.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,37700
Time to perform PDG 0,27300
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
