Running soot scenario cloudconductor-server;de.cinovo.cloudconductor.server.impl.rest.AgentImpl;notifyPackageState(String, String, PackageState);ebfad18ac0eb756cccc7e244f741b92d57f2fef8
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/ebfad18ac0eb756cccc7e244f741b92d57f2fef8/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,62600
Time to perform Confluence 1 Inter 1,43500
Configure Soot Confluence 2 Inter 0,17400
Time to perform Confluence 2 Inter 1,18000
Visited methods: 116
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>,$stack4 = new de.cinovo.cloudconductor.server.model.EHost,176,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template), 124) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>, specialinvoke $stack4.<de.cinovo.cloudconductor.server.model.EHost: void <init>()>(), 176)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>,host = $stack4,176,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template), 124) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>, host = $stack4, 176)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>,$stack6 = interfaceinvoke $stack5.<de.cinovo.cloudconductor.server.dao.IHostDAO: de.taimos.dao.IEntity save(de.taimos.dao.IEntity)>(host),179,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template), 124) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>, $stack6 = interfaceinvoke $stack5.<de.cinovo.cloudconductor.server.dao.IHostDAO: de.taimos.dao.IEntity save(de.taimos.dao.IEntity)>(host), 179)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>,host = (de.cinovo.cloudconductor.server.model.EHost) $stack6,179,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template), 124)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template),124,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template), 124)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,host := @parameter0: de.cinovo.cloudconductor.server.model.EHost,-1,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack9 = virtualinvoke host.<de.cinovo.cloudconductor.server.model.EHost: java.util.List getPackages()>(),243,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack9 = virtualinvoke host.<de.cinovo.cloudconductor.server.model.EHost: java.util.List getPackages()>(), 243)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,l4 = interfaceinvoke $stack9.<java.util.List: java.util.Iterator iterator()>(),243,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, l4 = interfaceinvoke $stack9.<java.util.List: java.util.Iterator iterator()>(), 243)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack12 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),261,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack12 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 261)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,state = (de.cinovo.cloudconductor.server.model.EPackageState) $stack12,261,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, state = (de.cinovo.cloudconductor.server.model.EPackageState) $stack12, 261)) => Node(<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>,this := @this: de.cinovo.cloudconductor.server.model.EPackageState,-1,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack13 = virtualinvoke state.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>(), 244)) => Node(<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>,$stack1 = this.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion version>,86,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack13 = virtualinvoke state.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>(), 244)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack31 = virtualinvoke state.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>(),252,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack31 = virtualinvoke state.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>(), 252)) => Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>,this := @this: de.cinovo.cloudconductor.server.model.EPackageVersion,-1,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack14 = virtualinvoke $stack13.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 244)) => Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>,$stack1 = this.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage pkg>,79,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack14 = virtualinvoke $stack13.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 244)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack32 = virtualinvoke $stack31.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(),252,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack32 = virtualinvoke $stack31.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 252)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,virtualinvoke rpm.<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>($stack32),252,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, virtualinvoke rpm.<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>($stack32), 252))
SINK=>BASE: Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>,$stack1 = this.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage pkg>,79,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack14 = virtualinvoke $stack13.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 244)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack32 = virtualinvoke $stack31.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(),252,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack32 = virtualinvoke $stack31.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 252)), SOURCE=>BASE: Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>,host = (de.cinovo.cloudconductor.server.model.EHost) $stack6,179,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template), 124)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template),124,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template), 124)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,host := @parameter0: de.cinovo.cloudconductor.server.model.EHost,-1,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack9 = virtualinvoke host.<de.cinovo.cloudconductor.server.model.EHost: java.util.List getPackages()>(),243,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack9 = virtualinvoke host.<de.cinovo.cloudconductor.server.model.EHost: java.util.List getPackages()>(), 243)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,l4 = interfaceinvoke $stack9.<java.util.List: java.util.Iterator iterator()>(),243,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, l4 = interfaceinvoke $stack9.<java.util.List: java.util.Iterator iterator()>(), 243)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack12 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(),261,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack12 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>(), 261)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,state = (de.cinovo.cloudconductor.server.model.EPackageState) $stack12,261,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, state = (de.cinovo.cloudconductor.server.model.EPackageState) $stack12, 261)) => Node(<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>,this := @this: de.cinovo.cloudconductor.server.model.EPackageState,-1,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack13 = virtualinvoke state.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>(), 244)) => Node(<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>,$stack1 = this.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion version>,86,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack13 = virtualinvoke state.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>(), 244)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack31 = virtualinvoke state.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>(),252,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack31 = virtualinvoke state.<de.cinovo.cloudconductor.server.model.EPackageState: de.cinovo.cloudconductor.server.model.EPackageVersion getVersion()>(), 252)) => Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>,this := @this: de.cinovo.cloudconductor.server.model.EPackageVersion,-1,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack14 = virtualinvoke $stack13.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 244)) => Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>,$stack1 = this.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage pkg>,79,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack14 = virtualinvoke $stack13.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 244)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack32 = virtualinvoke $stack31.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(),252,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack32 = virtualinvoke $stack31.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 252)) => Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>,pkg := @parameter0: de.cinovo.cloudconductor.server.model.EPackage,-1,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, virtualinvoke rpm.<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>($stack32), 252)) => Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>,this.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage pkg> = pkg,86,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, virtualinvoke rpm.<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>($stack32), 252) => (<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>, this.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage pkg> = pkg, 86))
SINK=>BASE: Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>,$stack1 = this.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage pkg>,79,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack14 = virtualinvoke $stack13.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 244)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>,$stack32 = virtualinvoke $stack31.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(),252,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack32 = virtualinvoke $stack31.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 252)) => Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>,pkg := @parameter0: de.cinovo.cloudconductor.server.model.EPackage,-1,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, virtualinvoke rpm.<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>($stack32), 252)) => Node(<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>,this.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage pkg> = pkg,86,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, virtualinvoke rpm.<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>($stack32), 252) => (<de.cinovo.cloudconductor.server.model.EPackageVersion: void setPkg(de.cinovo.cloudconductor.server.model.EPackage)>, this.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage pkg> = pkg, 86))]
Confluence interference in <de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>
Confluence flows from execution of lines 124 and 141 to line 141, defined in host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template) and state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm) and used in state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm)
Caused by line 124 flow: path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template), 124) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>, specialinvoke $stack4.<de.cinovo.cloudconductor.server.model.EHost: void <init>()>(), 176)
Caused by line 141 flow: path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack14 = virtualinvoke $stack13.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 244)
Caused by line 141 flow: path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, state#12 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>(host, irpm), 141) => (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EPackageState updateExistingState(de.cinovo.cloudconductor.server.model.EHost,de.cinovo.cloudconductor.api.model.PackageVersion)>, $stack32 = virtualinvoke $stack31.<de.cinovo.cloudconductor.server.model.EPackageVersion: de.cinovo.cloudconductor.server.model.EPackage getPkg()>(), 252)
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/ebfad18ac0eb756cccc7e244f741b92d57f2fef8/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,59100
soot.SootMethodRefImpl$ClassResolutionFailedException: Class de.cinovo.cloudconductor.server.dao.IPackageStateDAO doesn't have method delete([de.taimos.dao.IEntity]) : void; failed to resolve in superclasses and interfacesLooking in de.cinovo.cloudconductor.server.dao.IPackageStateDAO which has methods []
Looking in java.lang.Object which has methods [<java.lang.Object: void <init>()>, <java.lang.Object: void registerNatives()>, <java.lang.Object: java.lang.Class getClass()>, <java.lang.Object: int hashCode()>, <java.lang.Object: boolean equals(java.lang.Object)>, <java.lang.Object: java.lang.Object clone()>, <java.lang.Object: java.lang.String toString()>, <java.lang.Object: void notify()>, <java.lang.Object: void notifyAll()>, <java.lang.Object: void wait(long)>, <java.lang.Object: void wait(long,int)>, <java.lang.Object: void wait()>, <java.lang.Object: void finalize()>, <java.lang.Object: void <clinit>()>]
Looking in de.taimos.dao.IEntityDAO which has methods []

	at soot.SootMethodRefImpl.resolve(SootMethodRefImpl.java:283)
	at soot.SootMethodRefImpl.resolve(SootMethodRefImpl.java:183)
	at soot.jimple.internal.AbstractInvokeExpr.getMethod(AbstractInvokeExpr.java:56)
	at br.unb.cic.analysis.oa.OverrideAssignment.runAnalysis(OverrideAssignment.java:177)
	at br.unb.cic.analysis.oa.OverrideAssignment.traverse(OverrideAssignment.java:113)
	at br.unb.cic.analysis.oa.OverrideAssignment.lambda$internalTransform$0(OverrideAssignment.java:72)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at br.unb.cic.analysis.oa.OverrideAssignment.internalTransform(OverrideAssignment.java:72)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at br.unb.cic.analysis.SootWrapper.lambda$applyPackages$0(SootWrapper.java:108)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at br.unb.cic.analysis.SootWrapper.applyPackages(SootWrapper.java:107)
	at br.unb.cic.analysis.Main.runOverrideAssignmentAnalysis(Main.java:369)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:252)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/ebfad18ac0eb756cccc7e244f741b92d57f2fef8/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,67700
Time to perform DFP Inter 1,27600
Depth limit: 5
CONFLICTS: []
Visited methods: 58
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/ebfad18ac0eb756cccc7e244f741b92d57f2fef8/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,60200
Time to perform DFP Inter 1,20500
Depth limit: 5
CONFLICTS: []
Visited methods: 58
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/ebfad18ac0eb756cccc7e244f741b92d57f2fef8/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,48800
Time to perform PDG 0,59000
CONFLICTS: [List(Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template),124,SourceNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.server.model.EHost createNewHost(java.lang.String,de.cinovo.cloudconductor.server.model.ETemplate)>(hname, template), 124)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,$stack31 = interfaceinvoke $stack30.<de.cinovo.cloudconductor.server.dao.IHostDAO: de.taimos.dao.IEntity save(de.taimos.dao.IEntity)>(host),154,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, $stack31 = interfaceinvoke $stack30.<de.cinovo.cloudconductor.server.dao.IHostDAO: de.taimos.dao.IEntity save(de.taimos.dao.IEntity)>(host), 154)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,host = (de.cinovo.cloudconductor.server.model.EHost) $stack31,154,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, host = (de.cinovo.cloudconductor.server.model.EHost) $stack31, 154)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,$stack32 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: boolean sendPackageChanges(de.cinovo.cloudconductor.server.model.ETemplate,de.cinovo.cloudconductor.server.model.EHost)>(template, host),157,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, $stack32 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: boolean sendPackageChanges(de.cinovo.cloudconductor.server.model.ETemplate,de.cinovo.cloudconductor.server.model.EHost)>(template, host), 157)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,if $stack32 == 0 goto $stack33 = new de.cinovo.cloudconductor.api.model.PackageStateChanges,157,SimpleNode, path: ) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,$stack37 = new java.util.HashSet,161,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, specialinvoke $stack37.<java.util.HashSet: void <init>()>(), 161)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,actual#16 = $stack37,161,SimpleNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, actual#16 = $stack37, 161)) => Node(<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>,irpm#19 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: com.google.common.collect.ArrayListMultimap computePackageDiff(java.util.Collection,java.util.Collection)>($stack41, actual#16),165,SinkNode, path: (<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: de.cinovo.cloudconductor.api.model.PackageStateChanges notifyPackageState(java.lang.String,java.lang.String,de.cinovo.cloudconductor.api.model.PackageState)>, irpm#19 = specialinvoke this.<de.cinovo.cloudconductor.server.impl.rest.AgentImpl: com.google.common.collect.ArrayListMultimap computePackageDiff(java.util.Collection,java.util.Collection)>($stack41, actual#16), 165)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/ebfad18ac0eb756cccc7e244f741b92d57f2fef8/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,64600
Time to perform PDG 0,58600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
