List(Node(<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,lookupswitch($stack6) {     case 1: goto $stack8 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();     case 7: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseRootElement(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder);     default: goto $stack13 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },226,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack7 = interfaceinvoke specBuilder.<org.jboss.modules.ModuleSpec$Builder: org.jboss.modules.ModuleSpec create()>(),229,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack7 = interfaceinvoke specBuilder.<org.jboss.modules.ModuleSpec$Builder: org.jboss.modules.ModuleSpec create()>(), 229)))

List(Node(<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,lookupswitch($stack6) {     case 1: goto $stack8 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();     case 7: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseRootElement(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder);     default: goto $stack13 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },226,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,staticinvoke <org.jboss.modules.ModuleXmlParser: void parseRootElement(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder),228,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, staticinvoke <org.jboss.modules.ModuleXmlParser: void parseRootElement(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder), 228)))

List(Node(<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,lookupswitch($stack6) {     case 1: goto $stack8 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();     case 7: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseRootElement(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder);     default: goto $stack13 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },226,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack10 = <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element MODULE>,232,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack9 == $stack10 goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder),232,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,staticinvoke <org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder),235,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: org.jboss.modules.ModuleSpec parseDocument(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, staticinvoke <org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder), 235)))

