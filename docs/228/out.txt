List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,if $stack6 != 0 goto $stack10 = 1,1219,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,if $stack7 != 0 goto $stack10 = 1,1220,SinkNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,if $stack8 != 0 goto $stack10 = 1,1221,SinkNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,$stack9 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.NavigableSet<"),1222,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>, $stack9 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.NavigableSet<'), 1222)) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,if $stack9 == 0 goto $stack10 = 0,1222,SinkNode, path: ))

List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,if $stack6 != 0 goto $stack10 = 1,1219,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,if $stack7 != 0 goto $stack10 = 1,1220,SinkNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,$stack8 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.SortedSet<"),1221,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>, $stack8 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.SortedSet<'), 1221)))

List(Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,if $stack6 != 0 goto $stack10 = 1,1219,SourceNode, path: ) => Node(<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>,$stack7 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.Set<"),1220,SinkNode, path: (<io.norberg.automatter.processor.AutoMatterProcessor: boolean isCollection(javax.lang.model.element.ExecutableElement)>, $stack7 = virtualinvoke returnType.<java.lang.String: boolean startsWith(java.lang.String)>('java.util.Set<'), 1220)))

