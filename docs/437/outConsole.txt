Running soot scenario podam;uk.co.jemos.podam.api.PodamFactoryImpl;manufacturePojoInternal(Class<T>, Map<Class<?>,Integer>, Type);738f766483f1779ebb144f9ae1950e6780c62c53
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/podam/738f766483f1779ebb144f9ae1950e6780c62c53/original-without-dependencies/podam-4.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,87900
Time to perform Confluence 1 Inter 12,21500
Configure Soot Confluence 2 Inter 0,20200
Time to perform Confluence 2 Inter 11,59300
Visited methods: 266
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/podam/738f766483f1779ebb144f9ae1950e6780c62c53/original-without-dependencies/podam-4.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,63800
Runtime: 0.024s
Time to perform OA Inter 0,74400
OA Inter Visited methods: 62
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/podam/738f766483f1779ebb144f9ae1950e6780c62c53/original-without-dependencies/podam-4.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,57700
Time to perform DFP Inter 7,47100
Depth limit: 5
CONFLICTS: []
Visited methods: 133
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/podam/738f766483f1779ebb144f9ae1950e6780c62c53/original-without-dependencies/podam-4.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,69000
Time to perform DFP Inter 7,54600
Depth limit: 5
CONFLICTS: []
Visited methods: 133
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/podam/738f766483f1779ebb144f9ae1950e6780c62c53/original-without-dependencies/podam-4.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,60700
Time to perform PDG 0,66800
CONFLICTS: [List(Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if objectToReuse == null goto $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1401,SourceNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1406,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(), 1406)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack22 == 0 goto $stack23 = virtualinvoke pojoClass.<java.lang.Class: boolean isInterface()>(),1406,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack23 != 0 goto $stack24 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: uk.co.jemos.podam.api.DataProviderStrategy strategy>,1414,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack149 == 0 goto $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1415,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>, 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30),1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30), 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(),1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(), 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,setter = (java.lang.reflect.Method) $stack48,1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, setter = (java.lang.reflect.Method) $stack48, 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter),1515,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter), 1515)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments),1586,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments), 1586)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if parameterValuesForConstructor#20 == null goto $stack63 = <uk.co.jemos.podam.api.PodamFactoryImpl: org.slf4j.Logger LOG>,1591,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack66 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(attributeStrategy#56),1595,SinkNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack66 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(attributeStrategy#56), 1595))), List(Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if objectToReuse == null goto $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1401,SourceNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1406,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(), 1406)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack22 == 0 goto $stack23 = virtualinvoke pojoClass.<java.lang.Class: boolean isInterface()>(),1406,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack23 != 0 goto $stack24 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: uk.co.jemos.podam.api.DataProviderStrategy strategy>,1414,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack149 == 0 goto $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1415,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>, 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30),1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30), 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(),1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(), 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,setter = (java.lang.reflect.Method) $stack48,1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, setter = (java.lang.reflect.Method) $stack48, 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter),1515,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter), 1515)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments),1586,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments), 1586)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if parameterValuesForConstructor#20 == null goto $stack63 = <uk.co.jemos.podam.api.PodamFactoryImpl: org.slf4j.Logger LOG>,1591,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,attributeStrategy#56 = virtualinvoke setter.<java.lang.reflect.Method: int getModifiers()>(),1594,SinkNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, attributeStrategy#56 = virtualinvoke setter.<java.lang.reflect.Method: int getModifiers()>(), 1594))), List(Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack161 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.Map memoizationTable>,1400,SourceNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack161 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.Map memoizationTable>, 1400)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,objectToReuse = interfaceinvoke $stack161.<java.util.Map: java.lang.Object get(java.lang.Object)>(pojoClass),1400,SourceNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, objectToReuse = interfaceinvoke $stack161.<java.util.Map: java.lang.Object get(java.lang.Object)>(pojoClass), 1400)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if objectToReuse == null goto $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1401,SourceNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1406,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(), 1406)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack22 == 0 goto $stack23 = virtualinvoke pojoClass.<java.lang.Class: boolean isInterface()>(),1406,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack23 != 0 goto $stack24 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: uk.co.jemos.podam.api.DataProviderStrategy strategy>,1414,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack149 == 0 goto $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1415,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>, 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30),1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30), 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(),1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(), 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,setter = (java.lang.reflect.Method) $stack48,1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, setter = (java.lang.reflect.Method) $stack48, 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter),1515,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter), 1515)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments),1586,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments), 1586)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if parameterValuesForConstructor#20 == null goto $stack63 = <uk.co.jemos.podam.api.PodamFactoryImpl: org.slf4j.Logger LOG>,1591,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack66 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(attributeStrategy#56),1595,SinkNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack66 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(attributeStrategy#56), 1595))), List(Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack161 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.Map memoizationTable>,1400,SourceNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack161 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.Map memoizationTable>, 1400)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,objectToReuse = interfaceinvoke $stack161.<java.util.Map: java.lang.Object get(java.lang.Object)>(pojoClass),1400,SourceNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, objectToReuse = interfaceinvoke $stack161.<java.util.Map: java.lang.Object get(java.lang.Object)>(pojoClass), 1400)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if objectToReuse == null goto $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1401,SourceNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1406,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(), 1406)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack22 == 0 goto $stack23 = virtualinvoke pojoClass.<java.lang.Class: boolean isInterface()>(),1406,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack23 != 0 goto $stack24 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: uk.co.jemos.podam.api.DataProviderStrategy strategy>,1414,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack149 == 0 goto $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1415,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>, 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30),1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30), 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(),1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(), 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,setter = (java.lang.reflect.Method) $stack48,1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, setter = (java.lang.reflect.Method) $stack48, 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter),1515,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter), 1515)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments),1586,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments), 1586)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if parameterValuesForConstructor#20 == null goto $stack63 = <uk.co.jemos.podam.api.PodamFactoryImpl: org.slf4j.Logger LOG>,1591,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,attributeStrategy#56 = virtualinvoke setter.<java.lang.reflect.Method: int getModifiers()>(),1594,SinkNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, attributeStrategy#56 = virtualinvoke setter.<java.lang.reflect.Method: int getModifiers()>(), 1594))), List(Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack21 = interfaceinvoke $stack20.<uk.co.jemos.podam.api.DataProviderStrategy: boolean isMemoizationEnabled()>(),1399,SourceNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack21 = interfaceinvoke $stack20.<uk.co.jemos.podam.api.DataProviderStrategy: boolean isMemoizationEnabled()>(), 1399)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack21 == 0 goto $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1399,SourceNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if objectToReuse == null goto $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1401,SourceNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1406,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(), 1406)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack22 == 0 goto $stack23 = virtualinvoke pojoClass.<java.lang.Class: boolean isInterface()>(),1406,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack23 != 0 goto $stack24 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: uk.co.jemos.podam.api.DataProviderStrategy strategy>,1414,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack149 == 0 goto $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1415,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>, 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30),1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30), 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(),1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(), 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,setter = (java.lang.reflect.Method) $stack48,1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, setter = (java.lang.reflect.Method) $stack48, 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter),1515,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter), 1515)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments),1586,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments), 1586)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if parameterValuesForConstructor#20 == null goto $stack63 = <uk.co.jemos.podam.api.PodamFactoryImpl: org.slf4j.Logger LOG>,1591,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,attributeStrategy#56 = virtualinvoke setter.<java.lang.reflect.Method: int getModifiers()>(),1594,SinkNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, attributeStrategy#56 = virtualinvoke setter.<java.lang.reflect.Method: int getModifiers()>(), 1594))), List(Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack21 = interfaceinvoke $stack20.<uk.co.jemos.podam.api.DataProviderStrategy: boolean isMemoizationEnabled()>(),1399,SourceNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack21 = interfaceinvoke $stack20.<uk.co.jemos.podam.api.DataProviderStrategy: boolean isMemoizationEnabled()>(), 1399)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack21 == 0 goto $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1399,SourceNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if objectToReuse == null goto $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1401,SourceNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(),1406,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack22 = virtualinvoke pojoClass.<java.lang.Class: boolean isPrimitive()>(), 1406)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack22 == 0 goto $stack23 = virtualinvoke pojoClass.<java.lang.Class: boolean isInterface()>(),1406,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack23 != 0 goto $stack24 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: uk.co.jemos.podam.api.DataProviderStrategy strategy>,1414,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if $stack149 == 0 goto $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1415,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>,1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack30 = this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.util.List excludeAnnotations>, 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30),1432,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, objectToReuse#6 = staticinvoke <uk.co.jemos.podam.api.PodamUtils: uk.co.jemos.podam.api.ClassInfo getClassInfo(java.lang.Class,java.util.List)>(pojoClass, $stack30), 1432)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack45 = virtualinvoke objectToReuse#6.<uk.co.jemos.podam.api.ClassInfo: java.util.Set getClassSetters()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(),1509,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, l9 = interfaceinvoke $stack45.<java.util.Set: java.util.Iterator iterator()>(), 1509)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(),1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack48 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>(), 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,setter = (java.lang.reflect.Method) $stack48,1612,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, setter = (java.lang.reflect.Method) $stack48, 1612)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter),1515,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, attributeName = staticinvoke <uk.co.jemos.podam.api.PodamUtils: java.lang.String extractFieldNameFromSetterMethod(java.lang.reflect.Method)>(setter), 1515)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments),1586,SimpleNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, parameterValuesForConstructor#20 = specialinvoke this.<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufactureAttributeValue(java.lang.Class,java.util.Map,java.lang.Class,java.util.List,java.lang.String,java.util.Map,java.lang.reflect.Type[])>(pojoClass, pojos, defaultConstructor#18, pojoAttributeAnnotations, attributeName, attributeStrategy#21, typeArguments), 1586)) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,if parameterValuesForConstructor#20 == null goto $stack63 = <uk.co.jemos.podam.api.PodamFactoryImpl: org.slf4j.Logger LOG>,1591,SimpleNode, path: ) => Node(<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>,$stack66 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(attributeStrategy#56),1595,SinkNode, path: (<uk.co.jemos.podam.api.PodamFactoryImpl: java.lang.Object manufacturePojoInternal(java.lang.Class,java.util.Map,java.lang.reflect.Type[])>, $stack66 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(attributeStrategy#56), 1595)))]
 Analysis results
----------------------------
 Number of conflicts: 6
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/podam/738f766483f1779ebb144f9ae1950e6780c62c53/original-without-dependencies/podam-4.1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,63300
Time to perform PDG 0,68600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
