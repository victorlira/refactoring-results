Running soot scenario jira-client;net.rcarz.jiraclient.Field;toJson(String, Object, JSONObject);b0d7ee7a420adb7016118809e1fc4aeb1d27565e
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/b0d7ee7a420adb7016118809e1fc4aeb1d27565e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,53400
Time to perform Confluence 1 Inter 0,95000
Configure Soot Confluence 2 Inter 0,27400
Time to perform Confluence 2 Inter 0,58300
Visited methods: 46
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/b0d7ee7a420adb7016118809e1fc4aeb1d27565e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,56500
Runtime: 0.02s
Time to perform OA Inter 0,65200
OA Inter Visited methods: 27
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/b0d7ee7a420adb7016118809e1fc4aeb1d27565e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,49700
Time to perform DFP Inter 0,84000
Depth limit: 5
CONFLICTS: []
Visited methods: 23
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/b0d7ee7a420adb7016118809e1fc4aeb1d27565e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,51500
Time to perform DFP Inter 0,78300
Depth limit: 5
CONFLICTS: []
Visited methods: 23
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/b0d7ee7a420adb7016118809e1fc4aeb1d27565e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,60700
Time to perform PDG 0,71700
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/b0d7ee7a420adb7016118809e1fc4aeb1d27565e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,53500
Time to perform PDG 0,74900
CONFLICTS: [List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,689,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 != 0 goto $stack16 = new net.sf.json.JSONObject,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 == 0 goto $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>("project"),701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>('project'), 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack39 != 0 goto $stack40 = new net.sf.json.JSONObject,701,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),705,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 705)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,705,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("string"),713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('string'), 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack94 = staticinvoke <net.sf.json.JSONNull: net.sf.json.JSONNull getInstance()>(),733,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack94 = staticinvoke <net.sf.json.JSONNull: net.sf.json.JSONNull getInstance()>(), 733))), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,689,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 != 0 goto $stack16 = new net.sf.json.JSONObject,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 == 0 goto $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>("project"),701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>('project'), 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack39 != 0 goto $stack40 = new net.sf.json.JSONObject,701,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),705,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 705)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,705,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("string"),713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('string'), 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack83 = value instanceof java.lang.Integer,734,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack83 = value instanceof java.lang.Integer, 734))), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: )), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,689,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 != 0 goto $stack16 = new net.sf.json.JSONObject,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 == 0 goto $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>("project"),701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>('project'), 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack39 != 0 goto $stack40 = new net.sf.json.JSONObject,701,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),705,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 705)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,705,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("string"),713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('string'), 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: )), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack94 = staticinvoke <net.sf.json.JSONNull: net.sf.json.JSONNull getInstance()>(),733,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack94 = staticinvoke <net.sf.json.JSONNull: net.sf.json.JSONNull getInstance()>(), 733))), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack83 = value instanceof java.lang.Integer,734,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack83 = value instanceof java.lang.Integer, 734)))]
 Analysis results
----------------------------
 Number of conflicts: 6
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
