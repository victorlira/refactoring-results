List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,689,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 != 0 goto $stack16 = new net.sf.json.JSONObject,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 == 0 goto $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>("project"),701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>('project'), 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack39 != 0 goto $stack40 = new net.sf.json.JSONObject,701,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),705,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 705)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,705,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("string"),713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('string'), 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack94 = staticinvoke <net.sf.json.JSONNull: net.sf.json.JSONNull getInstance()>(),733,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack94 = staticinvoke <net.sf.json.JSONNull: net.sf.json.JSONNull getInstance()>(), 733)))

List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,689,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 != 0 goto $stack16 = new net.sf.json.JSONObject,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 == 0 goto $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>("project"),701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>('project'), 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack39 != 0 goto $stack40 = new net.sf.json.JSONObject,701,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),705,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 705)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,705,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("string"),713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('string'), 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack83 = value instanceof java.lang.Integer,734,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack83 = value instanceof java.lang.Integer, 734)))

List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ))

List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,689,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 != 0 goto $stack16 = new net.sf.json.JSONObject,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),692,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 == 0 goto $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>("project"),701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>('project'), 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack39 != 0 goto $stack40 = new net.sf.json.JSONObject,701,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),705,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 705)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,705,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("string"),713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('string'), 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ))

List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack94 = staticinvoke <net.sf.json.JSONNull: net.sf.json.JSONNull getInstance()>(),733,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack94 = staticinvoke <net.sf.json.JSONNull: net.sf.json.JSONNull getInstance()>(), 733)))

List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack72 == 0 goto $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack76 == 0 goto $stack77 = new java.lang.UnsupportedOperationException,731,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if value != null goto $stack83 = value instanceof java.lang.Integer,732,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack83 = value instanceof java.lang.Integer,734,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack83 = value instanceof java.lang.Integer, 734)))

