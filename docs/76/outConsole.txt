Running soot scenario jira-client;net.rcarz.jiraclient.Field;toJson(String, Object, JSONObject);3bc59bcee2e94a0905d0325aa037ecf68133ca64
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/3bc59bcee2e94a0905d0325aa037ecf68133ca64/original-without-dependencies/jira-client-0.5-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,48100
Time to perform Confluence 1 Inter 0,95900
Configure Soot Confluence 2 Inter 0,16000
Time to perform Confluence 2 Inter 0,39900
Visited methods: 44
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack70 = new net.rcarz.jiraclient.JiraException,611,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack70.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Numeric value'), 611)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack70 = new net.rcarz.jiraclient.JiraException,611,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack70.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Numeric value'), 611)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Object: void <init>()>(),264,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 264))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Object: void <init>()>(),264,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 264)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack70 = new net.rcarz.jiraclient.JiraException,611,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack70.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Numeric value'), 611)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack70 = new net.rcarz.jiraclient.JiraException,611,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack70.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Numeric value'), 611)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),265,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),265,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,577,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 577)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>("project"),577,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>('project'), 577)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 != 0 goto $stack38 = new net.sf.json.JSONObject,577,SinkNode, path: )
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,565,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 565)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,568,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 568)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,577,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 577)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>("project"),577,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>('project'), 577)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,577,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 577)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,577,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 577)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("string"),589,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('string'), 589))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("string"),589,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('string'), 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SinkNode, path: ), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack70 = new net.rcarz.jiraclient.JiraException,611,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack70.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Numeric value'), 611)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = l1,266,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = l1,266,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,564,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack29 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,569,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack29 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 569)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,565,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 565))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,565,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 565)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,564,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("issuetype"),564,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>('issuetype'), 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack15 != 0 goto $stack16 = new net.sf.json.JSONObject,564,SinkNode, path: )
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,564,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("issuetype"),564,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>('issuetype'), 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack15 != 0 goto $stack16 = new net.sf.json.JSONObject,564,SinkNode, path: ), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,577,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 577)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack61 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,616,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack61 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 616)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack61),616,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack61), 616)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a supported field type"),616,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' is not a supported field type'), 616)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>(),616,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>(), 616))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack61 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,616,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack61 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 616)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack61),616,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack61), 616)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a supported field type"),616,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' is not a supported field type'), 616)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,564,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack29 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,569,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack29 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 569)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>("priority"),569,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>('priority'), 569)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack30 != 0 goto $stack16 = new net.sf.json.JSONObject,569,SinkNode, path: )
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,564,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack29 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,569,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack29 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 569)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l0 := @this: java.lang.Exception,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,577,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 577)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),602,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 602))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),602,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 == 0 goto $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SinkNode, path: ), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,577,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 577)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack51 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),581,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 581)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,564,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack29 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,569,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack29 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 569)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,568,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 568))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,565,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 565)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,568,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 568))]
Confluence interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Confluence flows from execution of lines 611 and 560 to line 535, defined in specialinvoke $stack70.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>("Field expects a Numeric value") and specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>("Field expects a Timestamp value") and used in m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta)
Caused by line 611 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack70.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Numeric value'), 611)
Caused by line 560 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)
Caused by line 535 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197)
Confluence interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Confluence flows from execution of lines 607 and 556 to line 539, defined in $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and used in $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>("array")
Caused by line 607 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)
Caused by line 556 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)
Caused by line 539 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 539) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)
Confluence interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Confluence flows from execution of lines 560 and 560 to line 535, defined in specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>("Field expects a Timestamp value") and specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>("Field expects a Timestamp value") and used in m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta)
Caused by line 560 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)
Caused by line 560 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)
Caused by line 535 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)
Confluence interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Confluence flows from execution of lines 556 and 556 to line 577, defined in $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and used in $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>("project")
Caused by line 556 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)
Caused by line 556 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)
Caused by line 577 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack37 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>('project'), 577)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/3bc59bcee2e94a0905d0325aa037ecf68133ca64/original-without-dependencies/jira-client-0.5-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,57300
Runtime: 0.021s
OA interference in class Field, method java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject), execution of line 562 overrides 562, assigning to variable d#4, 
Caused by line 562 flow:
at net.rcarz.jiraclient.Field.toJson(Field.java:562)
And line 562 flow:
at net.rcarz.jiraclient.Field.toJson(Field.java:562)
 
OA interference in class Field, method java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject), execution of line 562 overrides 562, assigning to variable SimpleDateFormat.<java.text.SimpleDateFormat: java.text.NumberFormat originalNumberFormat>, 
Caused by line 562 flow:
at net.rcarz.jiraclient.Field.toJson(Field.java:562)
And line 562 flow:
at net.rcarz.jiraclient.Field.toJson(Field.java:562)
 
Time to perform OA Inter 0,66800
OA Inter Visited methods: 25
 Analysis results
----------------------------
 Number of conflicts: 19
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/3bc59bcee2e94a0905d0325aa037ecf68133ca64/original-without-dependencies/jira-client-0.5-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,51500
Time to perform DFP Inter 0,77100
Depth limit: 5
CONFLICTS: DF interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Data flows from execution of line 611 to 535, defined in $stack70 = new net.rcarz.jiraclient.JiraException and propagated in specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg)
Caused by line 611 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack70.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Numeric value'), 611)
Caused by line 535 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)
DF interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Data flows from execution of line 560 to 535, defined in $stack92 = new net.rcarz.jiraclient.JiraException and propagated in specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg)
Caused by line 560 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)
Caused by line 535 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)
[List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack70 = new net.rcarz.jiraclient.JiraException,611,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack70.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Numeric value'), 611)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg),30,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30))), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg),30,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)))]
Visited methods: 22
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/3bc59bcee2e94a0905d0325aa037ecf68133ca64/original-without-dependencies/jira-client-0.5-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,59500
Time to perform DFP Inter 0,75700
Depth limit: 5
CONFLICTS: DF interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Data flows from execution of line 560 to 535, defined in $stack92 = new net.rcarz.jiraclient.JiraException and propagated in specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg)
Caused by line 560 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)
Caused by line 535 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30)
[List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack92 = new net.rcarz.jiraclient.JiraException,560,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack92.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>('Field expects a Timestamp value'), 560)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,this := @this: net.rcarz.jiraclient.JiraException,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432)) => Node(<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg),30,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, m = staticinvoke <net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>(name, editmeta), 535) => (<net.rcarz.jiraclient.Field: net.rcarz.jiraclient.Field$Meta getFieldMetadata(java.lang.String,net.sf.json.JSONObject)>, specialinvoke $stack6.<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>($stack11), 432) => (<net.rcarz.jiraclient.JiraException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 30))), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,564,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack58 = virtualinvoke $stack57.<java.lang.String: boolean equals(java.lang.Object)>("number"),607,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack58 = virtualinvoke $stack57.<java.lang.String: boolean equals(java.lang.Object)>('number'), 607)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack58 == 0 goto $stack59 = new java.lang.UnsupportedOperationException,607,SinkNode, path: ))]
Visited methods: 22
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/3bc59bcee2e94a0905d0325aa037ecf68133ca64/original-without-dependencies/jira-client-0.5-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,58700
Time to perform PDG 0,60100
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/3bc59bcee2e94a0905d0325aa037ecf68133ca64/original-without-dependencies/jira-client-0.5-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,42200
Time to perform PDG 0,77100
CONFLICTS: [List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("datetime"),556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>('datetime'), 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack13 == 0 goto $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("issuetype"),564,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>('issuetype'), 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack15 != 0 goto $stack16 = new net.sf.json.JSONObject,564,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack30 != 0 goto $stack16 = new net.sf.json.JSONObject,569,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),565,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 565)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,565,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),568,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 568)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 == 0 goto $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,568,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 != 0 goto $stack38 = new net.sf.json.JSONObject,577,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),581,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack52 == 0 goto $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("string"),589,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('string'), 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),602,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 == 0 goto $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack58 = virtualinvoke $stack57.<java.lang.String: boolean equals(java.lang.Object)>("number"),607,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack58 = virtualinvoke $stack57.<java.lang.String: boolean equals(java.lang.Object)>('number'), 607)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack58 == 0 goto $stack59 = new java.lang.UnsupportedOperationException,607,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack65 != 0 goto return value,608,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack66 != 0 goto return value,613,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = value instanceof java.lang.Float,613,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = value instanceof java.lang.Float, 613)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack68 != 0 goto return value,613,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto return value,613,SinkNode, path: )), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("datetime"),556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>('datetime'), 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack13 == 0 goto $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("issuetype"),564,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>('issuetype'), 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack15 != 0 goto $stack16 = new net.sf.json.JSONObject,564,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack30 != 0 goto $stack16 = new net.sf.json.JSONObject,569,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),565,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 565)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,565,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),568,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 568)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 == 0 goto $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,568,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 != 0 goto $stack38 = new net.sf.json.JSONObject,577,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),581,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack52 == 0 goto $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("string"),589,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('string'), 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),602,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 == 0 goto $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack58 = virtualinvoke $stack57.<java.lang.String: boolean equals(java.lang.Object)>("number"),607,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack58 = virtualinvoke $stack57.<java.lang.String: boolean equals(java.lang.Object)>('number'), 607)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack58 == 0 goto $stack59 = new java.lang.UnsupportedOperationException,607,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack65 != 0 goto return value,608,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack66 != 0 goto return value,613,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = value instanceof java.lang.Float,613,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = value instanceof java.lang.Float, 613)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack68 != 0 goto return value,613,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto return value,613,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,throw $stack70,611,SinkNode, path: )), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("datetime"),556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>('datetime'), 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack13 == 0 goto $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("issuetype"),564,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>('issuetype'), 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack15 != 0 goto $stack16 = new net.sf.json.JSONObject,564,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack30 != 0 goto $stack16 = new net.sf.json.JSONObject,569,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),565,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 565)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,565,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),568,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 568)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 == 0 goto $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,568,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 != 0 goto $stack38 = new net.sf.json.JSONObject,577,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),581,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack52 == 0 goto $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("string"),589,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('string'), 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),602,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 == 0 goto $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,607,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 607))), List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack12 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("datetime"),556,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>('datetime'), 556)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack13 == 0 goto $stack14 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,556,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("issuetype"),564,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>('issuetype'), 564)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack15 != 0 goto $stack16 = new net.sf.json.JSONObject,564,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack30 != 0 goto $stack16 = new net.sf.json.JSONObject,569,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),565,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 565)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,565,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>("resolution"),568,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack35 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>('resolution'), 568)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 == 0 goto $stack36 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,568,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 != 0 goto $stack38 = new net.sf.json.JSONObject,577,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),581,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 581)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack52 == 0 goto $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,581,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack53 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("string"),589,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('string'), 589)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,589,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),602,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 602)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 == 0 goto $stack57 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,602,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack58 = virtualinvoke $stack57.<java.lang.String: boolean equals(java.lang.Object)>("number"),607,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack58 = virtualinvoke $stack57.<java.lang.String: boolean equals(java.lang.Object)>('number'), 607)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack58 == 0 goto $stack59 = new java.lang.UnsupportedOperationException,607,SinkNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack65 = value instanceof java.lang.Integer,608,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack65 = value instanceof java.lang.Integer, 608)))]
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
