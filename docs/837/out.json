[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<liquibase.structure.AbstractDatabaseObject: java.lang.Object getAttribute(java.lang.String,java.lang.Object)>,value = interfaceinvoke $stack4.<java.util.Map: java.lang.Object get(java.lang.Object)>(attribute),109,SourceNode, path: (<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>, $stack118 = virtualinvoke columnSnapshot.<liquibase.structure.core.Column: boolean shouldValidateNullable()>(), 104) => (<liquibase.structure.core.Column: boolean shouldValidateNullable()>, $stack3 = virtualinvoke this.<liquibase.structure.core.Column: java.lang.Object getAttribute(java.lang.String,java.lang.Object)>('validateNullable', $stack2), 214)) => Node(<liquibase.structure.core.Column: boolean shouldValidateNullable()>,$stack3 = virtualinvoke this.<liquibase.structure.core.Column: java.lang.Object getAttribute(java.lang.String,java.lang.Object)>("validateNullable", $stack2),214,SourceNode, path: (<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>, $stack118 = virtualinvoke columnSnapshot.<liquibase.structure.core.Column: boolean shouldValidateNullable()>(), 104) => (<liquibase.structure.core.Column: boolean shouldValidateNullable()>, $stack3 = virtualinvoke this.<liquibase.structure.core.Column: java.lang.Object getAttribute(java.lang.String,java.lang.Object)>('validateNullable', $stack2), 214)) => Node(<liquibase.structure.core.Column: boolean shouldValidateNullable()>,$stack4 = (java.lang.Boolean) $stack3,214,SourceNode, path: (<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>, $stack118 = virtualinvoke columnSnapshot.<liquibase.structure.core.Column: boolean shouldValidateNullable()>(), 104) => (<liquibase.structure.core.Column: boolean shouldValidateNullable()>, $stack4 = (java.lang.Boolean) $stack3, 214)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>, $stack153 = virtualinvoke $stack152.<java.lang.Boolean: boolean booleanValue()>(), 76)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>, $stack153 = virtualinvoke $stack152.<java.lang.Boolean: boolean booleanValue()>(), 76)) SINK=>BASE: Node(<liquibase.structure.core.Column: java.lang.Boolean getDescending()>,$stack1 = this.<liquibase.structure.core.Column: java.lang.Boolean descending>,177,SourceNode, path: (<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>, $stack15 = virtualinvoke columnSnapshot.<liquibase.structure.core.Column: java.lang.Boolean getDescending()>(), 75)) => Node(<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>,$stack147 = virtualinvoke columnSnapshot.<liquibase.structure.core.Column: java.lang.Boolean getDescending()>(),81,SinkNode, path: (<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>, $stack147 = virtualinvoke columnSnapshot.<liquibase.structure.core.Column: java.lang.Boolean getDescending()>(), 81)) => Node(<java.lang.Boolean: boolean booleanValue()>,l0 := @this: java.lang.Boolean,-1,SimpleNode, path: (<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>, $stack153 = virtualinvoke $stack152.<java.lang.Boolean: boolean booleanValue()>(), 76)) => Node(<java.lang.Boolean: boolean booleanValue()>,$stack1 = l0.<java.lang.Boolean: boolean value>,132,SinkNode, path: (<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>, $stack153 = virtualinvoke $stack152.<java.lang.Boolean: boolean booleanValue()>(), 76))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = this.<liquibase.structure.core.Column: java.lang.Boolean descending>",
				"location": {
					"file": "",
					"class": "liquibase.structure.core.Column",
					"method": "<liquibase.structure.core.Column: java.lang.Boolean getDescending()>",
					"line": 177
				},
				"stackTrace": [{
	"class": "liquibase.structure.core.Column",
	"method": "<liquibase.structure.core.Column: java.lang.Boolean getDescending()>",
	"line": 177
},{
	"class": "liquibase.change.ColumnConfig",
	"method": "<liquibase.change.ColumnConfig: void <init>(liquibase.structure.core.Column)>",
	"line": 81
},{
	"class": "java.lang.Boolean",
	"method": "<java.lang.Boolean: boolean booleanValue()>",
	"line": -1
},{
	"class": "java.lang.Boolean",
	"method": "<java.lang.Boolean: boolean booleanValue()>",
	"line": 132
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "value = interfaceinvoke $stack4.<java.util.Map: java.lang.Object get(java.lang.Object)>(attribute)",
				"location": {
					"file": "",
					"class": "liquibase.structure.AbstractDatabaseObject",
					"method": "<liquibase.structure.AbstractDatabaseObject: java.lang.Object getAttribute(java.lang.String,java.lang.Object)>",
					"line": 109
				},
				"stackTrace": [{
	"class": "liquibase.structure.AbstractDatabaseObject",
	"method": "<liquibase.structure.AbstractDatabaseObject: java.lang.Object getAttribute(java.lang.String,java.lang.Object)>",
	"line": 109
},{
	"class": "liquibase.structure.core.Column",
	"method": "<liquibase.structure.core.Column: boolean shouldValidateNullable()>",
	"line": 214
},{
	"class": "liquibase.structure.core.Column",
	"method": "<liquibase.structure.core.Column: boolean shouldValidateNullable()>",
	"line": 214
},{
	"class": "java.lang.Boolean",
	"method": "<java.lang.Boolean: boolean booleanValue()>",
	"line": -1
},{
	"class": "java.lang.Boolean",
	"method": "<java.lang.Boolean: boolean booleanValue()>",
	"line": 132
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = l0.<java.lang.Boolean: boolean value>",
				"location": {
					"file": "",
					"class": "java.lang.Boolean",
					"method": "<java.lang.Boolean: boolean booleanValue()>",
					"line": 132
				}
			}
		]
	}
}

,

{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "<java.lang.Boolean: java.lang.Boolean TRUE> - <java.lang.Boolean: java.lang.Boolean TRUE>",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "<java.lang.Boolean: java.lang.Boolean TRUE> = $stack0",
				"location": {
					"file": "",
					"class": "java.lang.Boolean",
					"method": "<clinit>",
					"line": 50
				},
				"stackTrace": [{
	"class": "liquibase.change.ColumnConfig",
	"method": "<init>",
	"line": 104
},{
	"class": "java.lang.Boolean",
	"method": "<clinit>",
	"line": 50
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "<java.lang.Boolean: java.lang.Boolean TRUE> = $stack0",
				"location": {
					"file": "",
					"class": "java.lang.Boolean",
					"method": "<clinit>",
					"line": 50
				},
				"stackTrace": [{
	"class": "liquibase.change.ColumnConfig",
	"method": "<init>",
	"line": 115
},{
	"class": "java.lang.Boolean",
	"method": "<clinit>",
	"line": 50
}]
			}
		]
	}
}

]
