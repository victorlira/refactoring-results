List(Node(<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>,$stack38 = virtualinvoke $stack37.<java.lang.String: boolean contains(java.lang.CharSequence)>("distribution"),63,SourceNode, path: (<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>, $stack38 = virtualinvoke $stack37.<java.lang.String: boolean contains(java.lang.CharSequence)>('distribution'), 63)) => Node(<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>,if $stack38 != 0 goto $stack39 = new java.lang.StringBuilder,63,SourceNode, path: ) => Node(<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>,$stack46 = virtualinvoke $stack45.<java.lang.String: boolean contains(java.lang.CharSequence)>("stats"),65,SimpleNode, path: (<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>, $stack46 = virtualinvoke $stack45.<java.lang.String: boolean contains(java.lang.CharSequence)>('stats'), 65)) => Node(<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>,if $stack46 == 0 goto $stack47 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>(),65,SimpleNode, path: ) => Node(<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>,$stack49 = new java.util.HashMap,69,SinkNode, path: (<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>, specialinvoke $stack49.<java.util.HashMap: void <init>()>(), 69)) => Node(<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>,specialinvoke $stack49.<java.util.HashMap: void <init>()>(),69,SinkNode, path: (<de.typology.nGramBuilder.NGramNormalizer: double normalize(java.lang.String,java.lang.String)>, specialinvoke $stack49.<java.util.HashMap: void <init>()>(), 69)))

