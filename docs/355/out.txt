SOURCE=>BASE: Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack95 = <java.lang.Boolean: java.lang.Boolean FALSE>,114,SourceNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack96 = virtualinvoke $stack94.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean)>($stack95), 114)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack96 = virtualinvoke $stack94.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean)>($stack95),114,SourceNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack96 = virtualinvoke $stack94.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean)>($stack95), 114)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack97 = virtualinvoke $stack96.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDomain(java.lang.String)>("OWASP-Dependency-Check"),115,SinkNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack97 = virtualinvoke $stack96.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDomain(java.lang.String)>('OWASP-Dependency-Check'), 115)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack98 = virtualinvoke $stack97.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setHidden(boolean)>(0),116,SinkNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack98 = virtualinvoke $stack97.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setHidden(boolean)>(0), 116)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack99 = virtualinvoke $stack98.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDeleteHistoricalData(boolean)>(1),117,SimpleNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack99 = virtualinvoke $stack98.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDeleteHistoricalData(boolean)>(1), 117)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack100 = virtualinvoke $stack99.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric create()>(),118,SinkNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack100 = virtualinvoke $stack99.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric create()>(), 118))
SINK=>BASE: Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack99 = virtualinvoke $stack98.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDeleteHistoricalData(boolean)>(1),117,SourceNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack99 = virtualinvoke $stack98.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDeleteHistoricalData(boolean)>(1), 117)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack100 = virtualinvoke $stack99.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric create()>(),118,SinkNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack100 = virtualinvoke $stack99.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric create()>(), 118))

List(Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack95 = <java.lang.Boolean: java.lang.Boolean FALSE>,114,SourceNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack96 = virtualinvoke $stack94.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean)>($stack95), 114)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack96 = virtualinvoke $stack94.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean)>($stack95),114,SourceNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack96 = virtualinvoke $stack94.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean)>($stack95), 114)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack97 = virtualinvoke $stack96.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDomain(java.lang.String)>("OWASP-Dependency-Check"),115,SimpleNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack97 = virtualinvoke $stack96.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDomain(java.lang.String)>('OWASP-Dependency-Check'), 115)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack98 = virtualinvoke $stack97.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setHidden(boolean)>(0),116,SimpleNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack98 = virtualinvoke $stack97.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setHidden(boolean)>(0), 116)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack99 = virtualinvoke $stack98.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDeleteHistoricalData(boolean)>(1),117,SinkNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack99 = virtualinvoke $stack98.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDeleteHistoricalData(boolean)>(1), 117)))

List(Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack95 = <java.lang.Boolean: java.lang.Boolean FALSE>,114,SourceNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack96 = virtualinvoke $stack94.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean)>($stack95), 114)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack96 = virtualinvoke $stack94.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean)>($stack95),114,SourceNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack96 = virtualinvoke $stack94.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean)>($stack95), 114)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack97 = virtualinvoke $stack96.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDomain(java.lang.String)>("OWASP-Dependency-Check"),115,SimpleNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack97 = virtualinvoke $stack96.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDomain(java.lang.String)>('OWASP-Dependency-Check'), 115)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack98 = virtualinvoke $stack97.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setHidden(boolean)>(0),116,SimpleNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack98 = virtualinvoke $stack97.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setHidden(boolean)>(0), 116)) => Node(<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>,$stack99 = virtualinvoke $stack98.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDeleteHistoricalData(boolean)>(1),117,SinkNode, path: (<org.sonar.dependencycheck.base.DependencyCheckMetrics: void <clinit>()>, $stack99 = virtualinvoke $stack98.<org.sonar.api.measures.Metric$Builder: org.sonar.api.measures.Metric$Builder setDeleteHistoricalData(boolean)>(1), 117)))

