Running soot scenario jline2;jline.console.ConsoleReader;readLine(String, Character);5acfe5945383a620910a2d78eb131af86efe7022
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jline2/5acfe5945383a620910a2d78eb131af86efe7022/original-without-dependencies/jline-2.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 1,20800
Time to perform Confluence 1 Inter 38,38400
Configure Soot Confluence 2 Inter 0,28200
Time to perform Confluence 2 Inter 30,43100
Visited methods: 412
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack33 = new java.lang.AssertionError,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.Error: void <init>()>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49)) => Node(<java.lang.Error: void <init>()>,specialinvoke l0.<java.lang.Throwable: void <init>()>(),58,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49) => (<java.lang.Error: void <init>()>, specialinvoke l0.<java.lang.Throwable: void <init>()>(), 58))
SINK=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack54 = new java.lang.AssertionError,155,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.Error: void <init>()>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49)) => Node(<java.lang.Error: void <init>()>,specialinvoke l0.<java.lang.Throwable: void <init>()>(),58,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49) => (<java.lang.Error: void <init>()>, specialinvoke l0.<java.lang.Throwable: void <init>()>(), 58)), SOURCE=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack54 = new java.lang.AssertionError,155,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,specialinvoke l0.<java.lang.Error: void <init>()>(),49,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49))
SINK=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack54 = new java.lang.AssertionError,155,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,specialinvoke l0.<java.lang.Error: void <init>()>(),49,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49)), SOURCE=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack33 = new java.lang.AssertionError,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.Error: void <init>()>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49)) => Node(<java.lang.Error: void <init>()>,specialinvoke l0.<java.lang.Throwable: void <init>()>(),58,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49) => (<java.lang.Error: void <init>()>, specialinvoke l0.<java.lang.Throwable: void <init>()>(), 58))
SINK=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack33 = new java.lang.AssertionError,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.Error: void <init>()>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49)) => Node(<java.lang.Error: void <init>()>,specialinvoke l0.<java.lang.Throwable: void <init>()>(),58,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49) => (<java.lang.Error: void <init>()>, specialinvoke l0.<java.lang.Throwable: void <init>()>(), 58)), SOURCE=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack54 = new java.lang.AssertionError,155,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,specialinvoke l0.<java.lang.Error: void <init>()>(),49,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49))
SINK=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack26 = new java.lang.AssertionError,223,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack26.<java.lang.AssertionError: void <init>()>(), 223)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,specialinvoke l0.<java.lang.Error: void <init>()>(),49,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49)), SOURCE=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack54 = new java.lang.AssertionError,155,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,specialinvoke l0.<java.lang.Error: void <init>()>(),49,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49))
SINK=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack33 = new java.lang.AssertionError,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.AssertionError: void <init>()>,specialinvoke l0.<java.lang.Error: void <init>()>(),49,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49)), SOURCE=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack33 = new java.lang.AssertionError,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.Error: void <init>()>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49)) => Node(<java.lang.Error: void <init>()>,specialinvoke l0.<java.lang.Throwable: void <init>()>(),58,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49) => (<java.lang.Error: void <init>()>, specialinvoke l0.<java.lang.Throwable: void <init>()>(), 58))
SINK=>BASE: Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack26 = new java.lang.AssertionError,223,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack26.<java.lang.AssertionError: void <init>()>(), 223)) => Node(<java.lang.AssertionError: void <init>()>,l0 := @this: java.lang.AssertionError,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<java.lang.Error: void <init>()>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49)) => Node(<java.lang.Error: void <init>()>,specialinvoke l0.<java.lang.Throwable: void <init>()>(),58,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49) => (<java.lang.Error: void <init>()>, specialinvoke l0.<java.lang.Throwable: void <init>()>(), 58)), SOURCE=>BASE: Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack7 = virtualinvoke $stack6.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(),1639,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack7 = virtualinvoke $stack6.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 1639)) => Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,if $stack7 == 0 goto virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(closePosition),1639,SinkNode, path: )
SINK=>BASE: Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,$stack3 = 0,87,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195)) => Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack7 = virtualinvoke $stack6.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(),1639,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack7 = virtualinvoke $stack6.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 1639)) => Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,if $stack7 == 0 goto virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(closePosition),1639,SinkNode, path: )]
Confluence interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Confluence flows from execution of lines 2196 and 2196 to line 2196, defined in $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396) and $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396) and used in $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155) => (<java.lang.AssertionError: void <init>()>, specialinvoke l0.<java.lang.Error: void <init>()>(), 49) => (<java.lang.Error: void <init>()>, specialinvoke l0.<java.lang.Throwable: void <init>()>(), 58)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jline2/5acfe5945383a620910a2d78eb131af86efe7022/original-without-dependencies/jline-2.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,89400
Runtime: 0.024s
Time to perform OA Inter 1,05000
OA Inter Visited methods: 86
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jline2/5acfe5945383a620910a2d78eb131af86efe7022/original-without-dependencies/jline-2.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,89800
Time to perform DFP Inter 21,37400
Depth limit: 5
CONFLICTS: DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
Empty list for reporting data flow! Error: head of empty list
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2613 to 2196, defined in $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in> and propagated in virtualinvoke this.<java.lang.Object: void notify()>()
Caused by line 2613 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void notify()>(), 177)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in timeout = timeout - $stack19 and propagated in virtualinvoke this.<java.lang.Object: void wait(long)>(timeout)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2613 to 2196, defined in $stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout> and propagated in virtualinvoke this.<java.lang.Object: void wait(long)>(timeout)
Caused by line 2613 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>, 1640)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch> and propagated in $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in $stack54 = new java.lang.AssertionError and propagated in specialinvoke $stack54.<java.lang.AssertionError: void <init>()>()
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in start = staticinvoke <java.lang.System: long currentTimeMillis()>() and propagated in virtualinvoke this.<java.lang.Object: void wait(long)>(timeout)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, start = staticinvoke <java.lang.System: long currentTimeMillis()>(), 187)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1) and propagated in $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
Empty list for reporting data flow! Error: head of empty list
[List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack54 = new java.lang.AssertionError,155,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(),155,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155))), List(Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),121,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396),2196,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196))), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>, 1640)) => Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack10 = (long) $stack9,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack10 = (long) $stack9, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack10 = timeout cmp 0L,168,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack10 = timeout cmp 0L, 168)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack10 == 0 goto $stack11 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,168,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack3 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>,117,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack3 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>, 117)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,if $stack3 == 0 goto $stack4 = new java.lang.UnsupportedOperationException,117,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>, 1640)) => Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack10 = (long) $stack9,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack10 = (long) $stack9, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack34 = timeout cmp 0L,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack34 <= 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,200,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack50 = this.<jline.internal.NonBlockingInputStream: int ch>,157,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack50 = this.<jline.internal.NonBlockingInputStream: int ch>, 157)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack50 == -2 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,157,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack42 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>,223,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack42 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>, 223)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack42 == 0 goto $stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,223,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack27 = <jline.internal.NonBlockingInputStream: boolean $assertionsDisabled>,197,SourceNode, path: ) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack27 != 0 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,197,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,222,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),121,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,return $stack6,121,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack11 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,168,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack11 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>, 168)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack11 != 0 goto $stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,168,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,222,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,return toBeThrown#19,226,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#4 = $stack37,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if toBeThrown#4 != 0 goto start = staticinvoke <java.lang.System: long currentTimeMillis()>(),186,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack13 = timeout cmp 0L,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack13 = timeout cmp 0L, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack13 > 0 goto $stack37 = 0,180,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack5 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>,118,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack5 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>, 118)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,if $stack5 == 0 goto $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),118,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#4 = $stack37,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if toBeThrown#4 != 0 goto (branch),210,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack37 = 0,194,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#4 = $stack37,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if toBeThrown#4 != 0 goto start = staticinvoke <java.lang.System: long currentTimeMillis()>(),186,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack16 = this.<jline.internal.NonBlockingInputStream: int ch>,205,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack16 = this.<jline.internal.NonBlockingInputStream: int ch>, 205)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack16 < -1 goto (branch),205,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack15 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack15 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack15 == null goto $stack16 = this.<jline.internal.NonBlockingInputStream: int ch>,196,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack20 = <jline.internal.NonBlockingInputStream: boolean $assertionsDisabled>,206,SourceNode, path: ) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack20 != 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,206,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack34 = timeout cmp 0L,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack34 <= 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,200,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,virtualinvoke this.<java.lang.Object: void wait(long)>(timeout),190,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190))), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,175,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>, 175)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack12 != 0 goto $stack13 = timeout cmp 0L,175,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>, 1640)) => Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack10 = (long) $stack9,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack10 = (long) $stack9, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack13 = timeout cmp 0L,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack13 = timeout cmp 0L, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack13 > 0 goto $stack37 = 0,180,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack8 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,152,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack8 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 152)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack8 == null goto $stack9 = this.<jline.internal.NonBlockingInputStream: int ch>,152,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack8 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,152,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack8 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 152)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack8 == null goto $stack9 = this.<jline.internal.NonBlockingInputStream: int ch>,152,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,virtualinvoke this.<java.lang.Object: void notify()>(),177,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void notify()>(), 177))), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack22 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,226,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack22 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 226)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack22 == null goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,226,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack9 = this.<jline.internal.NonBlockingInputStream: int ch>,165,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack9 = this.<jline.internal.NonBlockingInputStream: int ch>, 165)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack9 < -1 goto $stack10 = timeout cmp 0L,165,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>, 1640)) => Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack10 = (long) $stack9,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack10 = (long) $stack9, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,virtualinvoke this.<java.lang.Object: void wait(long)>(timeout),190,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190))), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack6 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1639,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack6 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1639)) => Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195)) => Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,$stack2 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>,87,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195) => (<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>, $stack2 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>, 87)) => Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,if $stack2 != 0 goto $stack3 = 0,87,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack22 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,226,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack22 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 226)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack22 == null goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,226,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack9 = this.<jline.internal.NonBlockingInputStream: int ch>,165,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack9 = this.<jline.internal.NonBlockingInputStream: int ch>, 165)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack9 < -1 goto $stack10 = timeout cmp 0L,165,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack42 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>,223,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack42 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>, 223)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack42 == 0 goto $stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,223,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),121,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,return $stack6,121,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack5 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>,118,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack5 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>, 118)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,if $stack5 == 0 goto $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),118,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,$stack2 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>,87,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195) => (<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>, $stack2 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>, 87)) => Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,if $stack2 != 0 goto $stack3 = 0,87,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack48 = <jline.internal.NonBlockingInputStream: boolean $assertionsDisabled>,153,SourceNode, path: ) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack48 != 0 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,153,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack3 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>,117,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack3 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>, 117)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,if $stack3 == 0 goto $stack4 = new java.lang.UnsupportedOperationException,117,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack11 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack29 = this.<jline.internal.NonBlockingInputStream: int ch>,202,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack29 = this.<jline.internal.NonBlockingInputStream: int ch>, 202)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack29 == -2 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,202,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack16 = this.<jline.internal.NonBlockingInputStream: int ch>,205,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack16 = this.<jline.internal.NonBlockingInputStream: int ch>, 205)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack16 < -1 goto (branch),205,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,175,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>, 175)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack12 != 0 goto $stack13 = timeout cmp 0L,175,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,start = staticinvoke <java.lang.System: long currentTimeMillis()>(),187,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, start = staticinvoke <java.lang.System: long currentTimeMillis()>(), 187)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack19 = $stack18 - start,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack19 = $stack18 - start, 211)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,virtualinvoke this.<java.lang.Object: void wait(long)>(timeout),190,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190))), List(Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack9 = this.<jline.console.ConsoleReader: int parenBlinkTimeout>, 1640)) => Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack10 = (long) $stack9,1640,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack10 = (long) $stack9, 1640)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),121,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,return $stack6,121,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack34 = timeout cmp 0L,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack34 <= 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,200,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack15 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack15 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack15 == null goto $stack16 = this.<jline.internal.NonBlockingInputStream: int ch>,196,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,222,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),121,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396),2196,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196))), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack29 = this.<jline.internal.NonBlockingInputStream: int ch>,202,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack29 = this.<jline.internal.NonBlockingInputStream: int ch>, 202)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack29 == -2 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,202,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,$stack3 = 1,87,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(),2195,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack395 == 0 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2195,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,start = staticinvoke <java.lang.System: long currentTimeMillis()>(),187,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, start = staticinvoke <java.lang.System: long currentTimeMillis()>(), 187)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack19 = $stack18 - start,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack19 = $stack18 - start, 211)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack34 = timeout cmp 0L,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack34 <= 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,200,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack50 = this.<jline.internal.NonBlockingInputStream: int ch>,157,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack50 = this.<jline.internal.NonBlockingInputStream: int ch>, 157)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack50 == -2 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,157,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack45 = <jline.internal.NonBlockingInputStream: boolean $assertionsDisabled>,166,SourceNode, path: ) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack45 != 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,166,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack37 = 0,194,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#4 = $stack37,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if toBeThrown#4 != 0 goto (branch),210,SinkNode, path: ))]
Visited methods: 206
 Analysis results
----------------------------
 Number of conflicts: 52
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jline2/5acfe5945383a620910a2d78eb131af86efe7022/original-without-dependencies/jline-2.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,76000
Time to perform DFP Inter 21,63700
Depth limit: 5
CONFLICTS: DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in $stack4 = new java.lang.UnsupportedOperationException and propagated in specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("peek() cannot be called as non-blocking operation is disabled")
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>('peek() cannot be called as non-blocking operation is disabled'), 118)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>('peek() cannot be called as non-blocking operation is disabled'), 118)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in $stack33 = new java.lang.AssertionError and propagated in specialinvoke $stack33.<java.lang.AssertionError: void <init>()>()
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in> and propagated in virtualinvoke this.<java.lang.Object: void notify()>()
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void notify()>(), 177)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in $stack19 = $stack18 - start and propagated in virtualinvoke this.<java.lang.Object: void wait(long)>(timeout)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack19 = $stack18 - start, 211)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190)
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in $stack26 = new java.lang.AssertionError and propagated in specialinvoke $stack26.<java.lang.AssertionError: void <init>()>()
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack26.<java.lang.AssertionError: void <init>()>(), 223)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack26.<java.lang.AssertionError: void <init>()>(), 223)
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in start = staticinvoke <java.lang.System: long currentTimeMillis()>() and propagated in virtualinvoke this.<java.lang.Object: void wait(long)>(timeout)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, start = staticinvoke <java.lang.System: long currentTimeMillis()>(), 187)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2195 to 2613, defined in $stack3 = 0 and propagated in $stack7 = virtualinvoke $stack6.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>()
Caused by line 2195 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195)
Caused by line 2613 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack7 = virtualinvoke $stack6.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 1639)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout> and propagated in virtualinvoke this.<java.lang.Object: void wait(long)>(timeout)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Data flows from execution of line 2196 to 2196, defined in $stack54 = new java.lang.AssertionError and propagated in specialinvoke $stack54.<java.lang.AssertionError: void <init>()>()
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)
Caused by line 2196 flow: path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack54 = new java.lang.AssertionError,155,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(),155,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack54.<java.lang.AssertionError: void <init>()>(), 155))), List(Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,$stack3 = 0,87,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195)) => Node(<jline.console.ConsoleReader: void insertClose(java.lang.String)>,$stack7 = virtualinvoke $stack6.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(),1639,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613) => (<jline.console.ConsoleReader: void insertClose(java.lang.String)>, $stack7 = virtualinvoke $stack6.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 1639))), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,175,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>, 175)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack12 != 0 goto $stack13 = timeout cmp 0L,175,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack394 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2195,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack394 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2195)) => Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195)) => Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,$stack2 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>,87,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195) => (<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>, $stack2 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>, 87)) => Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,if $stack2 != 0 goto $stack3 = 0,87,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack33 = new java.lang.AssertionError,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(),200,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack33.<java.lang.AssertionError: void <init>()>(), 200))), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack27 = <jline.internal.NonBlockingInputStream: boolean $assertionsDisabled>,197,SourceNode, path: ) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack27 != 0 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,197,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,222,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),121,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,return $stack6,121,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack11 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,168,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack11 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>, 168)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack11 != 0 goto $stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,168,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,222,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,return toBeThrown#19,226,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack50 = this.<jline.internal.NonBlockingInputStream: int ch>,157,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack50 = this.<jline.internal.NonBlockingInputStream: int ch>, 157)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack50 == -2 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,157,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#4 = $stack37,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if toBeThrown#4 != 0 goto start = staticinvoke <java.lang.System: long currentTimeMillis()>(),186,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack29 = this.<jline.internal.NonBlockingInputStream: int ch>,202,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack29 = this.<jline.internal.NonBlockingInputStream: int ch>, 202)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack29 == -2 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,202,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack16 = this.<jline.internal.NonBlockingInputStream: int ch>,205,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack16 = this.<jline.internal.NonBlockingInputStream: int ch>, 205)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack16 < -1 goto (branch),205,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack13 = timeout cmp 0L,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack13 = timeout cmp 0L, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack13 > 0 goto $stack37 = 0,180,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#4 = $stack37,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if toBeThrown#4 != 0 goto (branch),210,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack37 = 0,194,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#4 = $stack37,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if toBeThrown#4 != 0 goto start = staticinvoke <java.lang.System: long currentTimeMillis()>(),186,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack34 = timeout cmp 0L,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack34 <= 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,200,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack19 = $stack18 - start,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack19 = $stack18 - start, 211)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,virtualinvoke this.<java.lang.Object: void wait(long)>(timeout),190,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190))), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack20 = <jline.internal.NonBlockingInputStream: boolean $assertionsDisabled>,206,SourceNode, path: ) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack20 != 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,206,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),121,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,return $stack6,121,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,virtualinvoke this.<java.lang.Object: void notify()>(),177,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void notify()>(), 177))), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack13 = timeout cmp 0L,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack13 = timeout cmp 0L, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack13 > 0 goto $stack37 = 0,180,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack8 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,152,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack8 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 152)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack8 == null goto $stack9 = this.<jline.internal.NonBlockingInputStream: int ch>,152,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack22 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,226,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack22 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 226)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack22 == null goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,226,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,222,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,return toBeThrown#19,226,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,virtualinvoke this.<java.lang.Object: void wait(long)>(timeout),190,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190))), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack9 = this.<jline.internal.NonBlockingInputStream: int ch>,165,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack9 = this.<jline.internal.NonBlockingInputStream: int ch>, 165)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack9 < -1 goto $stack10 = timeout cmp 0L,165,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),121,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,return $stack6,121,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack48 = <jline.internal.NonBlockingInputStream: boolean $assertionsDisabled>,153,SourceNode, path: ) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack48 != 0 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,153,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack3 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>,117,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack3 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>, 117)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,if $stack3 == 0 goto $stack4 = new java.lang.UnsupportedOperationException,117,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack4 = new java.lang.UnsupportedOperationException,118,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>('peek() cannot be called as non-blocking operation is disabled'), 118)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("peek() cannot be called as non-blocking operation is disabled"),118,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>('peek() cannot be called as non-blocking operation is disabled'), 118))), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack16 = this.<jline.internal.NonBlockingInputStream: int ch>,205,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack16 = this.<jline.internal.NonBlockingInputStream: int ch>, 205)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack16 < -1 goto (branch),205,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack46 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,223,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack46 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 223)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack46 == null goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,223,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack9 = this.<jline.internal.NonBlockingInputStream: int ch>,165,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack9 = this.<jline.internal.NonBlockingInputStream: int ch>, 165)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack9 < -1 goto $stack10 = timeout cmp 0L,165,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,175,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack12 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>, 175)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack12 != 0 goto $stack13 = timeout cmp 0L,175,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,start = staticinvoke <java.lang.System: long currentTimeMillis()>(),187,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, start = staticinvoke <java.lang.System: long currentTimeMillis()>(), 187)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack19 = $stack18 - start,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack19 = $stack18 - start, 211)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,virtualinvoke this.<java.lang.Object: void wait(long)>(timeout),190,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, virtualinvoke this.<java.lang.Object: void wait(long)>(timeout), 190))), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack8 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,152,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack8 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 152)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack8 == null goto $stack9 = this.<jline.internal.NonBlockingInputStream: int ch>,152,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack15 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack15 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack15 == null goto $stack16 = this.<jline.internal.NonBlockingInputStream: int ch>,196,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack5 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>,118,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack5 = this.<jline.internal.NonBlockingInputStream: boolean isShutdown>, 118)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,if $stack5 == 0 goto $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1),118,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack29 = this.<jline.internal.NonBlockingInputStream: int ch>,202,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack29 = this.<jline.internal.NonBlockingInputStream: int ch>, 202)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack29 == -2 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,202,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,$stack1 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>,87,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack395 = virtualinvoke $stack394.<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>(), 2195) => (<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>, $stack1 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>, 87)) => Node(<jline.internal.NonBlockingInputStream: boolean isNonBlockingEnabled()>,if $stack1 == 0 goto $stack3 = 0,87,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,$stack3 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>,117,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack3 = this.<jline.internal.NonBlockingInputStream: boolean nonBlockingEnabled>, 117)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,if $stack3 == 0 goto $stack4 = new java.lang.UnsupportedOperationException,117,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout := @parameter0: long,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack10 = timeout cmp 0L,168,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack10 = timeout cmp 0L, 168)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack10 == 0 goto $stack11 = this.<jline.internal.NonBlockingInputStream: boolean threadIsReading>,168,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack26 = new java.lang.AssertionError,223,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack26.<java.lang.AssertionError: void <init>()>(), 223)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,specialinvoke $stack26.<java.lang.AssertionError: void <init>()>(),223,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, specialinvoke $stack26.<java.lang.AssertionError: void <init>()>(), 223))), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,start = staticinvoke <java.lang.System: long currentTimeMillis()>(),187,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, start = staticinvoke <java.lang.System: long currentTimeMillis()>(), 187)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack19 = $stack18 - start,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack19 = $stack18 - start, 211)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack34 = timeout cmp 0L,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack34 <= 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,200,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack50 = this.<jline.internal.NonBlockingInputStream: int ch>,157,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack50 = this.<jline.internal.NonBlockingInputStream: int ch>, 157)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack50 == -2 goto toBeThrown = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,157,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack45 = <jline.internal.NonBlockingInputStream: boolean $assertionsDisabled>,166,SourceNode, path: ) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack45 != 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,166,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack19 = $stack18 - start,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack19 = $stack18 - start, 211)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,timeout = timeout - $stack19,211,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack34 = timeout cmp 0L,200,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack34 = timeout cmp 0L, 200)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack34 <= 0 goto toBeThrown#19 = this.<jline.internal.NonBlockingInputStream: int ch>,200,SinkNode, path: )), List(Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack37 = 0,194,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,toBeThrown#4 = $stack37,180,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, toBeThrown#4 = $stack37, 180)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if toBeThrown#4 != 0 goto (branch),210,SinkNode, path: )), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack397 = this.<jline.console.ConsoleReader: jline.internal.NonBlockingInputStream in>, 2196)) => Node(<jline.internal.NonBlockingInputStream: int peek(long)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,this := @this: jline.internal.NonBlockingInputStream,-1,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,$stack15 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>,196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196) => (<jline.internal.NonBlockingInputStream: int peek(long)>, $stack6 = specialinvoke this.<jline.internal.NonBlockingInputStream: int read(long,boolean)>(timeout, 1), 121) => (<jline.internal.NonBlockingInputStream: int read(long,boolean)>, $stack15 = this.<jline.internal.NonBlockingInputStream: java.io.IOException exception>, 196)) => Node(<jline.internal.NonBlockingInputStream: int read(long,boolean)>,if $stack15 == null goto $stack16 = this.<jline.internal.NonBlockingInputStream: int ch>,196,SinkNode, path: ))]
Visited methods: 204
 Analysis results
----------------------------
 Number of conflicts: 50
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jline2/5acfe5945383a620910a2d78eb131af86efe7022/original-without-dependencies/jline-2.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,99100
Time to perform PDG 5,37600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jline2/5acfe5945383a620910a2d78eb131af86efe7022/original-without-dependencies/jline-2.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,87200
Time to perform PDG 6,39500
CONFLICTS: [List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack395 == 0 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2195,SourceNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396),2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack398 != -2 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2196,SourceNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if o == null goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2198,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack26 == 0 goto $stack27 = virtualinvoke pushBackChar.<java.util.Stack: java.lang.Object pop()>(),2154,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack28 = (java.lang.Character) $stack27,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack28 = (java.lang.Character) $stack27, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(),2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(), 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,c = $stack29,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, c = $stack29, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack404 = (char) c,2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack404 = (char) c, 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404),2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404), 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,sb = $stack24,2151,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, sb = $stack24, 2151)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb),2227,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb), 2227)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack386 = o2 instanceof jline.console.KeyMap,2228,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack386 = o2 instanceof jline.console.KeyMap, 2228)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack386 == 0 goto (branch),2228,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(),2229,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(), 2229)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack39 = o instanceof java.awt.event.ActionListener,2255,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack39 = o instanceof java.awt.event.ActionListener, 2255)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack39 == 0 goto $stack41 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>,2255,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack42 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State SEARCH>,2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack43 == $stack42 goto (branch),2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack48 = o instanceof jline.console.Operation,2346,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack48 = o instanceof jline.console.Operation, 2346)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack48 == 0 goto (branch),2346,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,tableswitch($stack56) {     case 1: goto $stack287 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 2: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 3: goto $stack284 = neg i;     case 4: goto $stack282 = virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(i);     case 5: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 6: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viMatch()>();     case 7: goto if repeatCount <= 0 goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 8: goto $stack273 = repeatCount * 10;     case 9: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPreviousWord(int)>(i);     case 10: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viEndWord(int)>(i);     case 11: goto if c == 59 goto $stack261 = 0;     case 12: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viNextWord(int)>(i);     case 13: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 14: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 15: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 16: goto $stack252 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 17: goto $stack245 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 18: goto $stack233 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 19: goto $stack204 = this.<jline.console.ConsoleReader: java.lang.StringBuffer searchTerm>;     case 20: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean backspace()>();     case 21: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>(sb);     case 22: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean complete()>();     case 23: goto virtualinvoke this.<jline.console.ConsoleReader: void printCompletionCandidates()>();     case 24: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 25: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean killLine()>();     case 26: goto $stack197 = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 27: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean clearScreen()>();     case 28: goto $stack193 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 29: goto i#101 = virtualinvoke this.<jline.console.ConsoleReader: java.lang.String accept()>();     case 30: goto $stack182 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 31: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean previousWord()>();     case 32: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean nextWord()>();     case 33: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(0);     case 34: goto $stack176 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(0, i);     case 35: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(1);     case 36: goto $stack172 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(1, i);     case 37: goto $stack165 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 38: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteCurrentCharacter()>();     case 39: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean resetLine()>();     case 40: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean unixWordRubout(int)>(i);     case 41: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deletePreviousWord()>();     case 42: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteNextWord()>();     case 43: goto $stack156 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 44: goto $stack152 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 45: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean capitalizeWord()>();     case 46: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean upCaseWord()>();     case 47: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean downCaseWord()>();     case 48: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>("\t");     case 49: goto $stack148 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 50: goto this.<jline.console.ConsoleReader: boolean recording> = 1;     case 51: goto this.<jline.console.ConsoleReader: boolean recording> = 0;     case 52: goto i = 0;     case 53: goto $stack125 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 54: goto $stack119 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 55: goto $stack115 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 56: goto virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(1);     case 57: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 58: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean transposeChars(int)>(i);     case 59: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(0);     case 60: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("}");     case 61: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(")");     case 62: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("]");     case 63: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(1);     case 64: goto $stack95 = virtualinvoke sb.<java.lang.StringBuilder: char charAt(int)>(0);     case 65: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 66: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viRubout(int)>(i);     case 67: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viDelete(int)>(i);     case 68: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPut(int)>(i);     case 69: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viChangeCase(int)>(i);     case 70: goto $stack86 = i;     case 71: goto $stack57 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     default: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>; },2368,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(")"),2617,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(')'), 2617))), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396),2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack398 != -2 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2196,SourceNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if o == null goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2198,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack26 == 0 goto $stack27 = virtualinvoke pushBackChar.<java.util.Stack: java.lang.Object pop()>(),2154,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack28 = (java.lang.Character) $stack27,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack28 = (java.lang.Character) $stack27, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(),2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(), 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,c = $stack29,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, c = $stack29, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack404 = (char) c,2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack404 = (char) c, 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404),2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404), 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,sb = $stack24,2151,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, sb = $stack24, 2151)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb),2227,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb), 2227)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack386 = o2 instanceof jline.console.KeyMap,2228,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack386 = o2 instanceof jline.console.KeyMap, 2228)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack386 == 0 goto (branch),2228,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(),2229,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(), 2229)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack39 = o instanceof java.awt.event.ActionListener,2255,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack39 = o instanceof java.awt.event.ActionListener, 2255)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack39 == 0 goto $stack41 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>,2255,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack42 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State SEARCH>,2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack43 == $stack42 goto (branch),2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack48 = o instanceof jline.console.Operation,2346,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack48 = o instanceof jline.console.Operation, 2346)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack48 == 0 goto (branch),2346,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,tableswitch($stack56) {     case 1: goto $stack287 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 2: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 3: goto $stack284 = neg i;     case 4: goto $stack282 = virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(i);     case 5: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 6: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viMatch()>();     case 7: goto if repeatCount <= 0 goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 8: goto $stack273 = repeatCount * 10;     case 9: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPreviousWord(int)>(i);     case 10: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viEndWord(int)>(i);     case 11: goto if c == 59 goto $stack261 = 0;     case 12: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viNextWord(int)>(i);     case 13: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 14: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 15: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 16: goto $stack252 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 17: goto $stack245 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 18: goto $stack233 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 19: goto $stack204 = this.<jline.console.ConsoleReader: java.lang.StringBuffer searchTerm>;     case 20: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean backspace()>();     case 21: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>(sb);     case 22: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean complete()>();     case 23: goto virtualinvoke this.<jline.console.ConsoleReader: void printCompletionCandidates()>();     case 24: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 25: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean killLine()>();     case 26: goto $stack197 = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 27: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean clearScreen()>();     case 28: goto $stack193 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 29: goto i#101 = virtualinvoke this.<jline.console.ConsoleReader: java.lang.String accept()>();     case 30: goto $stack182 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 31: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean previousWord()>();     case 32: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean nextWord()>();     case 33: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(0);     case 34: goto $stack176 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(0, i);     case 35: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(1);     case 36: goto $stack172 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(1, i);     case 37: goto $stack165 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 38: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteCurrentCharacter()>();     case 39: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean resetLine()>();     case 40: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean unixWordRubout(int)>(i);     case 41: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deletePreviousWord()>();     case 42: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteNextWord()>();     case 43: goto $stack156 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 44: goto $stack152 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 45: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean capitalizeWord()>();     case 46: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean upCaseWord()>();     case 47: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean downCaseWord()>();     case 48: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>("\t");     case 49: goto $stack148 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 50: goto this.<jline.console.ConsoleReader: boolean recording> = 1;     case 51: goto this.<jline.console.ConsoleReader: boolean recording> = 0;     case 52: goto i = 0;     case 53: goto $stack125 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 54: goto $stack119 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 55: goto $stack115 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 56: goto virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(1);     case 57: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 58: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean transposeChars(int)>(i);     case 59: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(0);     case 60: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("}");     case 61: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(")");     case 62: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("]");     case 63: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(1);     case 64: goto $stack95 = virtualinvoke sb.<java.lang.StringBuilder: char charAt(int)>(0);     case 65: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 66: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viRubout(int)>(i);     case 67: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viDelete(int)>(i);     case 68: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPut(int)>(i);     case 69: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viChangeCase(int)>(i);     case 70: goto $stack86 = i;     case 71: goto $stack57 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     default: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>; },2368,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("}"),2613,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613))), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396),2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack398 != -2 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2196,SourceNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if o == null goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2198,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack26 == 0 goto $stack27 = virtualinvoke pushBackChar.<java.util.Stack: java.lang.Object pop()>(),2154,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack28 = (java.lang.Character) $stack27,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack28 = (java.lang.Character) $stack27, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(),2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(), 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,c = $stack29,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, c = $stack29, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack404 = (char) c,2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack404 = (char) c, 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404),2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404), 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,sb = $stack24,2151,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, sb = $stack24, 2151)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb),2227,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb), 2227)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack386 = o2 instanceof jline.console.KeyMap,2228,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack386 = o2 instanceof jline.console.KeyMap, 2228)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack386 == 0 goto (branch),2228,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(),2229,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(), 2229)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack39 = o instanceof java.awt.event.ActionListener,2255,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack39 = o instanceof java.awt.event.ActionListener, 2255)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack39 == 0 goto $stack41 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>,2255,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack42 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State SEARCH>,2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack43 == $stack42 goto (branch),2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack48 = o instanceof jline.console.Operation,2346,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack48 = o instanceof jline.console.Operation, 2346)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack48 == 0 goto (branch),2346,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,tableswitch($stack56) {     case 1: goto $stack287 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 2: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 3: goto $stack284 = neg i;     case 4: goto $stack282 = virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(i);     case 5: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 6: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viMatch()>();     case 7: goto if repeatCount <= 0 goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 8: goto $stack273 = repeatCount * 10;     case 9: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPreviousWord(int)>(i);     case 10: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viEndWord(int)>(i);     case 11: goto if c == 59 goto $stack261 = 0;     case 12: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viNextWord(int)>(i);     case 13: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 14: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 15: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 16: goto $stack252 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 17: goto $stack245 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 18: goto $stack233 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 19: goto $stack204 = this.<jline.console.ConsoleReader: java.lang.StringBuffer searchTerm>;     case 20: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean backspace()>();     case 21: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>(sb);     case 22: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean complete()>();     case 23: goto virtualinvoke this.<jline.console.ConsoleReader: void printCompletionCandidates()>();     case 24: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 25: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean killLine()>();     case 26: goto $stack197 = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 27: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean clearScreen()>();     case 28: goto $stack193 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 29: goto i#101 = virtualinvoke this.<jline.console.ConsoleReader: java.lang.String accept()>();     case 30: goto $stack182 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 31: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean previousWord()>();     case 32: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean nextWord()>();     case 33: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(0);     case 34: goto $stack176 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(0, i);     case 35: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(1);     case 36: goto $stack172 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(1, i);     case 37: goto $stack165 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 38: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteCurrentCharacter()>();     case 39: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean resetLine()>();     case 40: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean unixWordRubout(int)>(i);     case 41: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deletePreviousWord()>();     case 42: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteNextWord()>();     case 43: goto $stack156 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 44: goto $stack152 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 45: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean capitalizeWord()>();     case 46: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean upCaseWord()>();     case 47: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean downCaseWord()>();     case 48: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>("\t");     case 49: goto $stack148 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 50: goto this.<jline.console.ConsoleReader: boolean recording> = 1;     case 51: goto this.<jline.console.ConsoleReader: boolean recording> = 0;     case 52: goto i = 0;     case 53: goto $stack125 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 54: goto $stack119 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 55: goto $stack115 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 56: goto virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(1);     case 57: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 58: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean transposeChars(int)>(i);     case 59: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(0);     case 60: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("}");     case 61: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(")");     case 62: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("]");     case 63: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(1);     case 64: goto $stack95 = virtualinvoke sb.<java.lang.StringBuilder: char charAt(int)>(0);     case 65: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 66: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viRubout(int)>(i);     case 67: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viDelete(int)>(i);     case 68: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPut(int)>(i);     case 69: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viChangeCase(int)>(i);     case 70: goto $stack86 = i;     case 71: goto $stack57 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     default: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>; },2368,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("]"),2621,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(']'), 2621))), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack395 == 0 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2195,SourceNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396),2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack398 != -2 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2196,SourceNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if o == null goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2198,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack26 == 0 goto $stack27 = virtualinvoke pushBackChar.<java.util.Stack: java.lang.Object pop()>(),2154,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack28 = (java.lang.Character) $stack27,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack28 = (java.lang.Character) $stack27, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(),2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(), 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,c = $stack29,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, c = $stack29, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack404 = (char) c,2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack404 = (char) c, 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404),2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404), 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,sb = $stack24,2151,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, sb = $stack24, 2151)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb),2227,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb), 2227)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack386 = o2 instanceof jline.console.KeyMap,2228,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack386 = o2 instanceof jline.console.KeyMap, 2228)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack386 == 0 goto (branch),2228,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(),2229,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(), 2229)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack39 = o instanceof java.awt.event.ActionListener,2255,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack39 = o instanceof java.awt.event.ActionListener, 2255)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack39 == 0 goto $stack41 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>,2255,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack42 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State SEARCH>,2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack43 == $stack42 goto (branch),2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack48 = o instanceof jline.console.Operation,2346,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack48 = o instanceof jline.console.Operation, 2346)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack48 == 0 goto (branch),2346,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,tableswitch($stack56) {     case 1: goto $stack287 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 2: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 3: goto $stack284 = neg i;     case 4: goto $stack282 = virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(i);     case 5: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 6: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viMatch()>();     case 7: goto if repeatCount <= 0 goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 8: goto $stack273 = repeatCount * 10;     case 9: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPreviousWord(int)>(i);     case 10: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viEndWord(int)>(i);     case 11: goto if c == 59 goto $stack261 = 0;     case 12: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viNextWord(int)>(i);     case 13: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 14: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 15: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 16: goto $stack252 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 17: goto $stack245 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 18: goto $stack233 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 19: goto $stack204 = this.<jline.console.ConsoleReader: java.lang.StringBuffer searchTerm>;     case 20: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean backspace()>();     case 21: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>(sb);     case 22: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean complete()>();     case 23: goto virtualinvoke this.<jline.console.ConsoleReader: void printCompletionCandidates()>();     case 24: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 25: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean killLine()>();     case 26: goto $stack197 = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 27: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean clearScreen()>();     case 28: goto $stack193 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 29: goto i#101 = virtualinvoke this.<jline.console.ConsoleReader: java.lang.String accept()>();     case 30: goto $stack182 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 31: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean previousWord()>();     case 32: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean nextWord()>();     case 33: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(0);     case 34: goto $stack176 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(0, i);     case 35: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(1);     case 36: goto $stack172 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(1, i);     case 37: goto $stack165 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 38: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteCurrentCharacter()>();     case 39: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean resetLine()>();     case 40: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean unixWordRubout(int)>(i);     case 41: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deletePreviousWord()>();     case 42: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteNextWord()>();     case 43: goto $stack156 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 44: goto $stack152 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 45: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean capitalizeWord()>();     case 46: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean upCaseWord()>();     case 47: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean downCaseWord()>();     case 48: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>("\t");     case 49: goto $stack148 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 50: goto this.<jline.console.ConsoleReader: boolean recording> = 1;     case 51: goto this.<jline.console.ConsoleReader: boolean recording> = 0;     case 52: goto i = 0;     case 53: goto $stack125 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 54: goto $stack119 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 55: goto $stack115 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 56: goto virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(1);     case 57: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 58: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean transposeChars(int)>(i);     case 59: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(0);     case 60: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("}");     case 61: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(")");     case 62: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("]");     case 63: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(1);     case 64: goto $stack95 = virtualinvoke sb.<java.lang.StringBuilder: char charAt(int)>(0);     case 65: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 66: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viRubout(int)>(i);     case 67: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viDelete(int)>(i);     case 68: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPut(int)>(i);     case 69: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viChangeCase(int)>(i);     case 70: goto $stack86 = i;     case 71: goto $stack57 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     default: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>; },2368,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("]"),2621,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(']'), 2621))), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack395 == 0 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2195,SourceNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396),2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack398 != -2 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2196,SourceNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if o == null goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2198,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack26 == 0 goto $stack27 = virtualinvoke pushBackChar.<java.util.Stack: java.lang.Object pop()>(),2154,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack28 = (java.lang.Character) $stack27,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack28 = (java.lang.Character) $stack27, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(),2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(), 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,c = $stack29,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, c = $stack29, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack404 = (char) c,2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack404 = (char) c, 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404),2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404), 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,sb = $stack24,2151,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, sb = $stack24, 2151)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb),2227,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb), 2227)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack386 = o2 instanceof jline.console.KeyMap,2228,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack386 = o2 instanceof jline.console.KeyMap, 2228)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack386 == 0 goto (branch),2228,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(),2229,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(), 2229)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack39 = o instanceof java.awt.event.ActionListener,2255,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack39 = o instanceof java.awt.event.ActionListener, 2255)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack39 == 0 goto $stack41 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>,2255,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack42 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State SEARCH>,2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack43 == $stack42 goto (branch),2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack48 = o instanceof jline.console.Operation,2346,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack48 = o instanceof jline.console.Operation, 2346)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack48 == 0 goto (branch),2346,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,tableswitch($stack56) {     case 1: goto $stack287 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 2: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 3: goto $stack284 = neg i;     case 4: goto $stack282 = virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(i);     case 5: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 6: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viMatch()>();     case 7: goto if repeatCount <= 0 goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 8: goto $stack273 = repeatCount * 10;     case 9: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPreviousWord(int)>(i);     case 10: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viEndWord(int)>(i);     case 11: goto if c == 59 goto $stack261 = 0;     case 12: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viNextWord(int)>(i);     case 13: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 14: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 15: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 16: goto $stack252 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 17: goto $stack245 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 18: goto $stack233 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 19: goto $stack204 = this.<jline.console.ConsoleReader: java.lang.StringBuffer searchTerm>;     case 20: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean backspace()>();     case 21: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>(sb);     case 22: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean complete()>();     case 23: goto virtualinvoke this.<jline.console.ConsoleReader: void printCompletionCandidates()>();     case 24: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 25: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean killLine()>();     case 26: goto $stack197 = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 27: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean clearScreen()>();     case 28: goto $stack193 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 29: goto i#101 = virtualinvoke this.<jline.console.ConsoleReader: java.lang.String accept()>();     case 30: goto $stack182 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 31: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean previousWord()>();     case 32: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean nextWord()>();     case 33: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(0);     case 34: goto $stack176 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(0, i);     case 35: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(1);     case 36: goto $stack172 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(1, i);     case 37: goto $stack165 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 38: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteCurrentCharacter()>();     case 39: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean resetLine()>();     case 40: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean unixWordRubout(int)>(i);     case 41: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deletePreviousWord()>();     case 42: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteNextWord()>();     case 43: goto $stack156 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 44: goto $stack152 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 45: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean capitalizeWord()>();     case 46: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean upCaseWord()>();     case 47: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean downCaseWord()>();     case 48: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>("\t");     case 49: goto $stack148 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 50: goto this.<jline.console.ConsoleReader: boolean recording> = 1;     case 51: goto this.<jline.console.ConsoleReader: boolean recording> = 0;     case 52: goto i = 0;     case 53: goto $stack125 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 54: goto $stack119 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 55: goto $stack115 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 56: goto virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(1);     case 57: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 58: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean transposeChars(int)>(i);     case 59: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(0);     case 60: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("}");     case 61: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(")");     case 62: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("]");     case 63: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(1);     case 64: goto $stack95 = virtualinvoke sb.<java.lang.StringBuilder: char charAt(int)>(0);     case 65: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 66: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viRubout(int)>(i);     case 67: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viDelete(int)>(i);     case 68: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPut(int)>(i);     case 69: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viChangeCase(int)>(i);     case 70: goto $stack86 = i;     case 71: goto $stack57 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     default: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>; },2368,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("}"),2613,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>('}'), 2613))), List(Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>,2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack396 = this.<jline.console.ConsoleReader: long escapeTimeout>, 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396),2196,SourceNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack398 = virtualinvoke $stack397.<jline.internal.NonBlockingInputStream: int peek(long)>($stack396), 2196)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack398 != -2 goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2196,SourceNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if o == null goto $stack26 = virtualinvoke pushBackChar.<java.util.Stack: boolean isEmpty()>(),2198,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack26 == 0 goto $stack27 = virtualinvoke pushBackChar.<java.util.Stack: java.lang.Object pop()>(),2154,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack28 = (java.lang.Character) $stack27,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack28 = (java.lang.Character) $stack27, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(),2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack29 = virtualinvoke $stack28.<java.lang.Character: char charValue()>(), 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,c = $stack29,2154,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, c = $stack29, 2154)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack404 = (char) c,2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack404 = (char) c, 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404),2167,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack405 = staticinvoke <java.lang.Character: char toLowerCase(char)>($stack404), 2167)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,sb = $stack24,2151,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, sb = $stack24, 2151)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb),2227,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o2 = virtualinvoke $stack384.<jline.console.KeyMap: java.lang.Object getBound(java.lang.CharSequence)>(sb), 2227)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack386 = o2 instanceof jline.console.KeyMap,2228,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack386 = o2 instanceof jline.console.KeyMap, 2228)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack386 == 0 goto (branch),2228,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(),2229,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, o = virtualinvoke $stack388.<jline.console.KeyMap: java.lang.Object getAnotherKey()>(), 2229)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack39 = o instanceof java.awt.event.ActionListener,2255,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack39 = o instanceof java.awt.event.ActionListener, 2255)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack39 == 0 goto $stack41 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>,2255,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack42 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State SEARCH>,2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack43 == $stack42 goto (branch),2326,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,$stack48 = o instanceof jline.console.Operation,2346,SimpleNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, $stack48 = o instanceof jline.console.Operation, 2346)) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,if $stack48 == 0 goto (branch),2346,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,tableswitch($stack56) {     case 1: goto $stack287 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 2: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 3: goto $stack284 = neg i;     case 4: goto $stack282 = virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(i);     case 5: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 6: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viMatch()>();     case 7: goto if repeatCount <= 0 goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 8: goto $stack273 = repeatCount * 10;     case 9: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPreviousWord(int)>(i);     case 10: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viEndWord(int)>(i);     case 11: goto if c == 59 goto $stack261 = 0;     case 12: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viNextWord(int)>(i);     case 13: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 14: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 15: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>;     case 16: goto $stack252 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 17: goto $stack245 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 18: goto $stack233 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 19: goto $stack204 = this.<jline.console.ConsoleReader: java.lang.StringBuffer searchTerm>;     case 20: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean backspace()>();     case 21: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>(sb);     case 22: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean complete()>();     case 23: goto virtualinvoke this.<jline.console.ConsoleReader: void printCompletionCandidates()>();     case 24: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 25: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean killLine()>();     case 26: goto $stack197 = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 27: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean clearScreen()>();     case 28: goto $stack193 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 29: goto i#101 = virtualinvoke this.<jline.console.ConsoleReader: java.lang.String accept()>();     case 30: goto $stack182 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 31: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean previousWord()>();     case 32: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean nextWord()>();     case 33: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(0);     case 34: goto $stack176 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(0, i);     case 35: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean)>(1);     case 36: goto $stack172 = specialinvoke this.<jline.console.ConsoleReader: boolean moveHistory(boolean,int)>(1, i);     case 37: goto $stack165 = this.<jline.console.ConsoleReader: jline.console.CursorBuffer buf>;     case 38: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteCurrentCharacter()>();     case 39: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean resetLine()>();     case 40: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean unixWordRubout(int)>(i);     case 41: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deletePreviousWord()>();     case 42: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean deleteNextWord()>();     case 43: goto $stack156 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 44: goto $stack152 = this.<jline.console.ConsoleReader: jline.console.history.History history>;     case 45: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean capitalizeWord()>();     case 46: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean upCaseWord()>();     case 47: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean downCaseWord()>();     case 48: goto virtualinvoke this.<jline.console.ConsoleReader: void putString(java.lang.CharSequence)>("\t");     case 49: goto $stack148 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 50: goto this.<jline.console.ConsoleReader: boolean recording> = 1;     case 51: goto this.<jline.console.ConsoleReader: boolean recording> = 0;     case 52: goto i = 0;     case 53: goto $stack125 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 54: goto $stack119 = this.<jline.console.ConsoleReader: jline.console.ConsoleReader$State state>;     case 55: goto $stack115 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     case 56: goto virtualinvoke this.<jline.console.ConsoleReader: int moveCursor(int)>(1);     case 57: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean moveToEnd()>();     case 58: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean transposeChars(int)>(i);     case 59: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(0);     case 60: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("}");     case 61: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(")");     case 62: goto specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>("]");     case 63: goto i#101 = specialinvoke this.<jline.console.ConsoleReader: java.lang.String insertComment(boolean)>(1);     case 64: goto $stack95 = virtualinvoke sb.<java.lang.StringBuilder: char charAt(int)>(0);     case 65: goto success = virtualinvoke this.<jline.console.ConsoleReader: boolean setCursorPosition(int)>(0);     case 66: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viRubout(int)>(i);     case 67: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viDelete(int)>(i);     case 68: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viPut(int)>(i);     case 69: goto success = specialinvoke this.<jline.console.ConsoleReader: boolean viChangeCase(int)>(i);     case 70: goto $stack86 = i;     case 71: goto $stack57 = this.<jline.console.ConsoleReader: jline.console.ConsoleKeys consoleKeys>;     default: goto $stack59 = <jline.console.ConsoleReader$State: jline.console.ConsoleReader$State NORMAL>; },2368,SimpleNode, path: ) => Node(<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>,specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(")"),2617,SinkNode, path: (<jline.console.ConsoleReader: java.lang.String readLine(java.lang.String,java.lang.Character)>, specialinvoke this.<jline.console.ConsoleReader: void insertClose(java.lang.String)>(')'), 2617)))]
 Analysis results
----------------------------
 Number of conflicts: 6
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
