Running soot scenario otr4j;net.java.otr4j.session.SessionImpl;handlePlainTextMessage(PlainTextMessage);554c21799595e39e67f1b9efdb636eb2314df784
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,60000
Time to perform Confluence 1 Inter 0,86000
Configure Soot Confluence 2 Inter 0,21100
Time to perform Confluence 2 Inter 0,78900
Visited methods: 80
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>,33,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(),693,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" received a plaintext message from "),691,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' received a plaintext message from '), 691))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),691,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack10 = virtualinvoke $stack9.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(),691,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack10 = virtualinvoke $stack9.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack7 = new java.lang.StringBuilder,691,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack11 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10),691,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack11 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 691)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(),741,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(), 741))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(),741,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(), 741)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack58 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),778,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack58 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 778)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack58 == 0 goto $stack38 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.lang.String cleanText>,778,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack58 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),778,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack58 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 778)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack58 == 0 goto $stack38 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.lang.String cleanText>,778,SinkNode, path: ), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack28 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),714,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack28 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 714)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack28 == 0 goto $stack29 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.lang.String cleanText>,714,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack28 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),714,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack28 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 714)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),693,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 693)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(),693,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" received a plaintext message from "),691,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' received a plaintext message from '), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),693,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 693)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" through "),693,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' through '), 693)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18),694,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 694)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("."),694,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.'), 694)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>(),694,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>(), 694))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack17 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),694,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack17 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 694)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack60 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),769,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack60 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 769)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack60 == 0 goto $stack55 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.util.List versions>,769,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack60 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),769,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack60 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 769)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack60 == 0 goto $stack55 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.util.List versions>,769,SinkNode, path: ), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack60 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),769,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack60 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 769)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack60 == 0 goto $stack55 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.util.List versions>,769,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack60 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(),769,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack60 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV2()>(), 769)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack60 == 0 goto $stack55 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.util.List versions>,769,SinkNode, path: ), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack28 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),714,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack28 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 714)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack28 == 0 goto $stack29 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.lang.String cleanText>,714,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack28 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),714,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack28 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 714)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack45 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),736,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack45 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 736)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack45 == 0 goto $stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(),736,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack45 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),736,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack45 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 736)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(),741,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(), 741))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(),741,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(), 741)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),693,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>,33,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,return $stack1,33,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),693,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>,33,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,return $stack1,33,SinkNode, path: ), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),691,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack10 = virtualinvoke $stack9.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 691)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String accountID>,29,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack10 = virtualinvoke $stack9.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 691))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),691,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack10 = virtualinvoke $stack9.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 691)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String accountID>,29,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack10 = virtualinvoke $stack9.<net.java.otr4j.session.SessionID: java.lang.String getAccountID()>(), 691)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack58 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),778,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack58 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 778)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack58 == 0 goto $stack38 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.lang.String cleanText>,778,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost host>,316,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack58 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(),778,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack58 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV1()>(), 778)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack58 == 0 goto $stack38 = plainTextMessage.<net.java.otr4j.io.messages.PlainTextMessage: java.lang.String cleanText>,778,SinkNode, path: ), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack45 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),736,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack45 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 736)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,if $stack45 == 0 goto $stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(),736,SinkNode, path: )
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack45 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(),736,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack45 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getRequireEncryption()>(), 736)), SOURCE=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack17 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),694,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack17 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 694)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack18 = virtualinvoke $stack17.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 694)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String protocolName>,37,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack18 = virtualinvoke $stack17.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 694))
SINK=>BASE: Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack17 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),694,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack17 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 694)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack18 = virtualinvoke $stack17.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 694)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String protocolName>,37,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack18 = virtualinvoke $stack17.<net.java.otr4j.session.SessionID: java.lang.String getProtocolName()>(), 694))]
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Confluence flows from execution of lines 691 and 696 to line 696, defined in $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>()
Caused by line 691 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)
Caused by line 696 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 696 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Confluence flows from execution of lines 693 and 691 to line 691, defined in $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>() and $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and used in $stack11 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10)
Caused by line 693 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)
Caused by line 691 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)
Caused by line 691 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack11 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10), 691)
Confluence interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Confluence flows from execution of lines 691 and 696 to line 741, defined in $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>() and policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>() and used in $stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>()
Caused by line 691 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)
Caused by line 696 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack1 = specialinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrEngineHost getHost()>(), 1005)
Caused by line 741 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack46 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getWhitespaceStartAKE()>(), 741)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,68400
Runtime: 0.045s
Time to perform OA Inter 0,82300
OA Inter Visited methods: 13
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,76100
Time to perform DFP Inter 0,94300
Depth limit: 5
CONFLICTS: DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Data flows from execution of line 691 to 745, defined in $stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID> and propagated in $stack68 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>()
Caused by line 691 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)
Caused by line 745 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack68 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(), 745)
DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Data flows from execution of line 691 to 765, defined in $stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID> and propagated in interfaceinvoke $stack6.<net.java.otr4j.OtrEngineHost: void injectMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack7, msg)
Caused by line 691 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)
Caused by line 765 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, interfaceinvoke $stack6.<net.java.otr4j.OtrEngineHost: void injectMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack7, msg), 686)
DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Data flows from execution of line 691 to 765, defined in $stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID> and propagated in $stack12 = interfaceinvoke $stack10.<net.java.otr4j.OtrEngineHost: java.lang.String getFallbackMessage(net.java.otr4j.session.SessionID)>($stack11)
Caused by line 691 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)
Caused by line 765 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack12 = interfaceinvoke $stack10.<net.java.otr4j.OtrEngineHost: java.lang.String getFallbackMessage(net.java.otr4j.session.SessionID)>($stack11), 685)
[List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack68 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(),745,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack68 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(), 745))), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack11 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),685,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack11 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 685)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack12 = interfaceinvoke $stack10.<net.java.otr4j.OtrEngineHost: java.lang.String getFallbackMessage(net.java.otr4j.session.SessionID)>($stack11),685,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack12 = interfaceinvoke $stack10.<net.java.otr4j.OtrEngineHost: java.lang.String getFallbackMessage(net.java.otr4j.session.SessionID)>($stack11), 685))), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),686,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 686)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,interfaceinvoke $stack6.<net.java.otr4j.OtrEngineHost: void injectMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack7, msg),686,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, interfaceinvoke $stack6.<net.java.otr4j.OtrEngineHost: void injectMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack7, msg), 686))), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,return $stack1,308,SinkNode, path: ))]
Visited methods: 40
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,70800
Time to perform DFP Inter 0,97900
Depth limit: 5
CONFLICTS: DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Data flows from execution of line 691 to 693, defined in $stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID> and propagated in $stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>()
Caused by line 691 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)
Caused by line 693 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 693)
DF interference in <net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>
Data flows from execution of line 691 to 693, defined in $stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID> and propagated in $stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>
Caused by line 691 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)
Caused by line 693 flow: path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)
[List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),693,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>,33,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693))), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),693,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 693))), List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,return $stack1,308,SinkNode, path: ))]
Visited methods: 40
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,77300
Time to perform PDG 0,59800
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/otr4j/554c21799595e39e67f1b9efdb636eb2314df784/original-without-dependencies/otr4j-0.10.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,56900
Time to perform PDG 0,56500
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
