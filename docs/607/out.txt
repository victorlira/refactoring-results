List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),1005,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696) => (<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>, $stack2 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 1005)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>,$stack3 = interfaceinvoke $stack1.<net.java.otr4j.OtrEngineHost: net.java.otr4j.OtrPolicy getSessionPolicy(net.java.otr4j.session.SessionID)>($stack2),1005,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(),696,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, policy = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.OtrPolicy getSessionPolicy()>(), 696)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack68 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(),745,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack68 = interfaceinvoke policy.<net.java.otr4j.OtrPolicy: boolean getAllowV3()>(), 745)))

List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack11 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),685,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack11 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 685)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack12 = interfaceinvoke $stack10.<net.java.otr4j.OtrEngineHost: java.lang.String getFallbackMessage(net.java.otr4j.session.SessionID)>($stack11),685,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack12 = interfaceinvoke $stack10.<net.java.otr4j.OtrEngineHost: java.lang.String getFallbackMessage(net.java.otr4j.session.SessionID)>($stack11), 685)))

List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,$stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),686,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, $stack7 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 686)) => Node(<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>,interfaceinvoke $stack6.<net.java.otr4j.OtrEngineHost: void injectMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack7, msg),686,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, virtualinvoke this.<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>(dhCommit), 765) => (<net.java.otr4j.session.SessionImpl: void injectMessage(net.java.otr4j.io.messages.AbstractMessage)>, interfaceinvoke $stack6.<net.java.otr4j.OtrEngineHost: void injectMessage(net.java.otr4j.session.SessionID,java.lang.String)>($stack7, msg), 686)))

List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,return $stack1,308,SinkNode, path: ))

List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),693,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,this := @this: net.java.otr4j.session.SessionID,-1,SimpleNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)) => Node(<net.java.otr4j.session.SessionID: java.lang.String getUserID()>,$stack1 = this.<net.java.otr4j.session.SessionID: java.lang.String userID>,33,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack14 = virtualinvoke $stack13.<net.java.otr4j.session.SessionID: java.lang.String getUserID()>(), 693)))

List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>,$stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(),693,SinkNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack13 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 693)))

List(Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,$stack1 = this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID sessionID>,308,SourceNode, path: (<net.java.otr4j.session.SessionImpl: java.lang.String handlePlainTextMessage(net.java.otr4j.io.messages.PlainTextMessage)>, $stack9 = virtualinvoke this.<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>(), 691)) => Node(<net.java.otr4j.session.SessionImpl: net.java.otr4j.session.SessionID getSessionID()>,return $stack1,308,SinkNode, path: ))

