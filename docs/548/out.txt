List(Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,n = interfaceinvoke $stack47.<java.util.Set: java.util.Iterator iterator()>(),79,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, n = interfaceinvoke $stack47.<java.util.Set: java.util.Iterator iterator()>(), 79)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,user = interfaceinvoke n.<java.util.Iterator: java.lang.Object next()>(),120,SimpleNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, user = interfaceinvoke n.<java.util.Iterator: java.lang.Object next()>(), 120)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack54 = interfaceinvoke $stack53.<java.util.Map: java.lang.Object get(java.lang.Object)>(user),80,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack54 = interfaceinvoke $stack53.<java.util.Map: java.lang.Object get(java.lang.Object)>(user), 80)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack55 = (java.util.Map) $stack54,80,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack55 = (java.util.Map) $stack54, 80)))

List(Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(),82,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(), 82)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack59 == 0 goto (branch),82,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack66 = this.<net.recommenders.rival.split.splitter.CrossValidationSplitter: int nFolds>,84,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack66 = this.<net.recommenders.rival.split.splitter.CrossValidationSplitter: int nFolds>, 84)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,curFold = i % $stack66,84,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, curFold = i % $stack66, 84)))

List(Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack49 == 0 goto (branch),79,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack52 = new java.util.ArrayList,80,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, specialinvoke $stack52.<java.util.ArrayList: void <init>(java.util.Collection)>($stack56), 80)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,items = $stack52,80,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, items = $stack52, 80)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,items#6 = interfaceinvoke items.<java.util.List: java.util.Iterator iterator()>(),82,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, items#6 = interfaceinvoke items.<java.util.List: java.util.Iterator iterator()>(), 82)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(),82,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(), 82)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack59 == 0 goto (branch),82,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if i#10 >= $stack67 goto i = i + 1,85,SimpleNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,datamodel = splits[$stack69],86,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, datamodel = splits[$stack69], 86)))

List(Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(),82,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(), 82)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack59 == 0 goto (branch),82,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,i = i + 1,94,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, curFold = i % $stack66, 84)))

List(Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack49 == 0 goto (branch),79,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack52 = new java.util.ArrayList,80,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, specialinvoke $stack52.<java.util.ArrayList: void <init>(java.util.Collection)>($stack56), 80)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,items = $stack52,80,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, items = $stack52, 80)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,items#6 = interfaceinvoke items.<java.util.List: java.util.Iterator iterator()>(),82,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, items#6 = interfaceinvoke items.<java.util.List: java.util.Iterator iterator()>(), 82)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(),82,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(), 82)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack59 == 0 goto (branch),82,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,i = i + 1,94,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, curFold = i % $stack66, 84)))

List(Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(),82,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(), 82)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack59 == 0 goto (branch),82,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if i#10 >= $stack67 goto i = i + 1,85,SimpleNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,datamodel = splits[$stack69],86,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, datamodel = splits[$stack69], 86)))

List(Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack49 == 0 goto (branch),79,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack52 = new java.util.ArrayList,80,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, specialinvoke $stack52.<java.util.ArrayList: void <init>(java.util.Collection)>($stack56), 80)))

List(Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack49 == 0 goto (branch),79,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack52 = new java.util.ArrayList,80,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, specialinvoke $stack52.<java.util.ArrayList: void <init>(java.util.Collection)>($stack56), 80)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,items = $stack52,80,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, items = $stack52, 80)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,items#6 = interfaceinvoke items.<java.util.List: java.util.Iterator iterator()>(),82,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, items#6 = interfaceinvoke items.<java.util.List: java.util.Iterator iterator()>(), 82)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(),82,SourceNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack59 = interfaceinvoke items#6.<java.util.Iterator: boolean hasNext()>(), 82)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,if $stack59 == 0 goto (branch),82,SourceNode, path: ) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,$stack66 = this.<net.recommenders.rival.split.splitter.CrossValidationSplitter: int nFolds>,84,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, $stack66 = this.<net.recommenders.rival.split.splitter.CrossValidationSplitter: int nFolds>, 84)) => Node(<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>,curFold = i % $stack66,84,SinkNode, path: (<net.recommenders.rival.split.splitter.CrossValidationSplitter: net.recommenders.rival.core.DataModelIF[] split(net.recommenders.rival.core.DataModelIF)>, curFold = i % $stack66, 84)))

