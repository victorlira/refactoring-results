Running soot scenario dcm4che;org.dcm4che3.opencv.NativeJLSImageWriter;write(IIOMetadata, IIOImage, ImageWriteParam);751257d4699542e73929367a83fe59d2989fafca
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/dcm4che/751257d4699542e73929367a83fe59d2989fafca/original-without-dependencies/dcm4che-imageio-opencv-5.23.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,63500
Time to perform Confluence 1 Inter 0,48500
Configure Soot Confluence 2 Inter 0,23300
Time to perform Confluence 2 Inter 0,13600
Visited methods: 8
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack107 = 1,142,SourceNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,dcmFlags = $stack107,135,SinkNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135))
SINK=>BASE: Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,pi = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: org.dcm4che3.image.PhotometricInterpretation getPhotometricInterpretation()>(),110,SourceNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, pi = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: org.dcm4che3.image.PhotometricInterpretation getPhotometricInterpretation()>(), 110)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack112 == pi goto $stack113 = new java.lang.IllegalArgumentException,135,SinkNode, path: )]
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/dcm4che/751257d4699542e73929367a83fe59d2989fafca/original-without-dependencies/dcm4che-imageio-opencv-5.23.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,63100
Runtime: 0.015s
Time to perform OA Inter 0,68900
OA Inter Visited methods: 9
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/dcm4che/751257d4699542e73929367a83fe59d2989fafca/original-without-dependencies/dcm4che-imageio-opencv-5.23.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,47200
Time to perform DFP Inter 0,49700
Depth limit: 5
CONFLICTS: []
Visited methods: 4
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/dcm4che/751257d4699542e73929367a83fe59d2989fafca/original-without-dependencies/dcm4che-imageio-opencv-5.23.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,63000
Time to perform DFP Inter 0,40600
Depth limit: 5
CONFLICTS: []
Visited methods: 4
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/dcm4che/751257d4699542e73929367a83fe59d2989fafca/original-without-dependencies/dcm4che-imageio-opencv-5.23.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,51000
Time to perform PDG 0,67200
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/dcm4che/751257d4699542e73929367a83fe59d2989fafca/original-without-dependencies/dcm4che-imageio-opencv-5.23.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,47900
Time to perform PDG 0,69300
CONFLICTS: [List(Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,pi = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: org.dcm4che3.image.PhotometricInterpretation getPhotometricInterpretation()>(),110,SourceNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, pi = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: org.dcm4che3.image.PhotometricInterpretation getPhotometricInterpretation()>(), 110)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack122 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack123 != pi goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,signed = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: boolean isSigned()>(),134,SimpleNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, signed = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: boolean isSigned()>(), 134)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if signed == 0 goto $stack107 = 0,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack107 = 1,142,SinkNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack107 = 0,142,SinkNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135))), List(Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack31 == 0 goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),112,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack112 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_FULL_422>,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack112 == pi goto $stack113 = new java.lang.IllegalArgumentException,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack118 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_PARTIAL_422>,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack118 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack121 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack122 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack123 != pi goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,signed = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: boolean isSigned()>(),134,SimpleNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, signed = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: boolean isSigned()>(), 134)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if signed == 0 goto $stack107 = 0,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack107 = 1,142,SinkNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack107 = 0,142,SinkNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135))), List(Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack31 == 0 goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),112,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack112 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_FULL_422>,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack112 == pi goto $stack113 = new java.lang.IllegalArgumentException,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack118 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_PARTIAL_422>,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack118 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack121 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack122 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack123 != pi goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if bitCompressed != 8 goto params = newarray (int)[16],142,SinkNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack68 == 0 goto params = newarray (int)[16],161,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,bitCompressed = 12,143,SinkNode, path: )), List(Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,jpegParams = (org.dcm4che3.opencv.JPEGLSImageWriteParam) param,104,SourceNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, jpegParams = (org.dcm4che3.opencv.JPEGLSImageWriteParam) param, 104)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack31 = virtualinvoke jpegParams.<org.dcm4che3.opencv.JPEGLSImageWriteParam: boolean isCompressionLossless()>(),112,SourceNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, $stack31 = virtualinvoke jpegParams.<org.dcm4che3.opencv.JPEGLSImageWriteParam: boolean isCompressionLossless()>(), 112)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack31 == 0 goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),112,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack112 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_FULL_422>,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack112 == pi goto $stack113 = new java.lang.IllegalArgumentException,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack118 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_PARTIAL_422>,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack118 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack121 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack122 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack123 != pi goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if bitCompressed != 8 goto params = newarray (int)[16],142,SinkNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack68 == 0 goto params = newarray (int)[16],161,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,bitCompressed = 12,143,SinkNode, path: )), List(Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack121 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_PARTIAL_420>,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack121 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack122 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack123 != pi goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if bitCompressed != 8 goto params = newarray (int)[16],142,SinkNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack68 == 0 goto params = newarray (int)[16],161,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,bitCompressed = 12,143,SinkNode, path: )), List(Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,jpegParams = (org.dcm4che3.opencv.JPEGLSImageWriteParam) param,104,SourceNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, jpegParams = (org.dcm4che3.opencv.JPEGLSImageWriteParam) param, 104)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack31 = virtualinvoke jpegParams.<org.dcm4che3.opencv.JPEGLSImageWriteParam: boolean isCompressionLossless()>(),112,SourceNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, $stack31 = virtualinvoke jpegParams.<org.dcm4che3.opencv.JPEGLSImageWriteParam: boolean isCompressionLossless()>(), 112)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack31 == 0 goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),112,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack112 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_FULL_422>,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack112 == pi goto $stack113 = new java.lang.IllegalArgumentException,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack118 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_PARTIAL_422>,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack118 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack121 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack122 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack123 != pi goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,signed = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: boolean isSigned()>(),134,SimpleNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, signed = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: boolean isSigned()>(), 134)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if signed == 0 goto $stack107 = 0,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack107 = 1,142,SinkNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack107 = 0,142,SinkNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135))), List(Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack121 = <org.dcm4che3.image.PhotometricInterpretation: org.dcm4che3.image.PhotometricInterpretation YBR_PARTIAL_420>,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack121 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack122 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack123 != pi goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,signed = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: boolean isSigned()>(),134,SimpleNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, signed = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: boolean isSigned()>(), 134)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if signed == 0 goto $stack107 = 0,135,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack107 = 1,142,SinkNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,$stack107 = 0,142,SinkNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, dcmFlags = $stack107, 135))), List(Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,pi = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: org.dcm4che3.image.PhotometricInterpretation getPhotometricInterpretation()>(),110,SourceNode, path: (<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>, pi = virtualinvoke desc.<org.dcm4che3.imageio.codec.ImageDescriptor: org.dcm4che3.image.PhotometricInterpretation getPhotometricInterpretation()>(), 110)) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack122 == pi goto $stack113 = new java.lang.IllegalArgumentException,115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack123 != pi goto renderedImage = virtualinvoke image.<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>(),115,SourceNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if bitCompressed != 8 goto params = newarray (int)[16],142,SinkNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,if $stack68 == 0 goto params = newarray (int)[16],161,SimpleNode, path: ) => Node(<org.dcm4che3.opencv.NativeJLSImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>,bitCompressed = 12,143,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 8
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
