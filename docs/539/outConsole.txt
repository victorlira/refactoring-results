Running soot scenario geo;com.github.davidmoten.geo.GeoHash;encodeHash(double, double, int);d280483edeeabc57247e1753ac0c161039f6e604
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geo/d280483edeeabc57247e1753ac0c161039f6e604/original-without-dependencies/geo-0.6.9-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,43300
Time to perform Confluence 1 Inter 0,56200
Configure Soot Confluence 2 Inter 0,21700
Time to perform Confluence 2 Inter 0,13000
Visited methods: 18
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geo/d280483edeeabc57247e1753ac0c161039f6e604/original-without-dependencies/geo-0.6.9-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,57100
Runtime: 0.026s
Time to perform OA Inter 0,67100
OA Inter Visited methods: 18
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geo/d280483edeeabc57247e1753ac0c161039f6e604/original-without-dependencies/geo-0.6.9-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,45000
Time to perform DFP Inter 0,44800
Depth limit: 5
CONFLICTS: DF interference in <com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>
Data flows from execution of line 395 to 396, defined in maxLat = 90.0 and propagated in $stack24 = latitude cmpl mid
Caused by line 395 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)
Caused by line 396 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)
DF interference in <com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>
Data flows from execution of line 388 to 389, defined in minLon = mid and propagated in $stack37 = longitude#10 cmpl mid
Caused by line 388 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)
Caused by line 389 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)
DF interference in <com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>
Data flows from execution of line 388 to 389, defined in maxLon = mid and propagated in $stack37 = longitude#10 cmpl mid
Caused by line 388 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)
Caused by line 389 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)
DF interference in <com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>
Data flows from execution of line 388 to 389, defined in minLon = -180.0 and propagated in $stack37 = longitude#10 cmpl mid
Caused by line 388 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)
Caused by line 389 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)
DF interference in <com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>
Data flows from execution of line 395 to 396, defined in maxLat = mid and propagated in $stack24 = latitude cmpl mid
Caused by line 395 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)
Caused by line 396 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)
DF interference in <com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>
Data flows from execution of line 395 to 396, defined in $stack23 = minLat + maxLat and propagated in $stack24 = latitude cmpl mid
Caused by line 395 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)
Caused by line 396 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)
DF interference in <com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>
Data flows from execution of line 395 to 396, defined in minLat = mid and propagated in $stack24 = latitude cmpl mid
Caused by line 395 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)
Caused by line 396 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)
DF interference in <com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>
Data flows from execution of line 388 to 389, defined in $stack36 = minLon + maxLon and propagated in $stack37 = longitude#10 cmpl mid
Caused by line 388 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)
Caused by line 389 flow: path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)
[List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,minLat = mid,398,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLat = 90.0,378,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLat = mid,400,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack36 = minLon + maxLon,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack36 / 2.0,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack36 / 2.0, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,minLon = mid,391,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack36 = minLon + maxLon,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack36 / 2.0,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack36 / 2.0, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLon = mid,393,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack36 = minLon + maxLon,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack36 / 2.0,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack36 / 2.0, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,minLon = -180.0,379,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack36 = minLon + maxLon,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack36 / 2.0,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack36 / 2.0, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)))]
Visited methods: 9
 Analysis results
----------------------------
 Number of conflicts: 8
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geo/d280483edeeabc57247e1753ac0c161039f6e604/original-without-dependencies/geo-0.6.9-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,43400
Time to perform DFP Inter 0,42700
Depth limit: 5
CONFLICTS: []
Visited methods: 9
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geo/d280483edeeabc57247e1753ac0c161039f6e604/original-without-dependencies/geo-0.6.9-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,48300
Time to perform PDG 0,58900
CONFLICTS: [List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLat = 90.0,378,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLon = mid,393,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack36 = minLon + maxLon,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack36 / 2.0,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack36 / 2.0, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack30 = 0,386,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, isEven = $stack30, 403)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,isEven = $stack30,403,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, isEven = $stack30, 403)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if isEven == 0 goto $stack23 = minLat + maxLat,387,SimpleNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,count = 0,383,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack25 = count, 407)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if count >= length goto $stack22 = new java.lang.String,386,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,isEven = $stack30,403,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, isEven = $stack30, 403)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if isEven == 0 goto $stack23 = minLat + maxLat,387,SimpleNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack30 = 0,386,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, isEven = $stack30, 403)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,isEven = $stack30,403,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, isEven = $stack30, 403)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if isEven == 0 goto $stack23 = minLat + maxLat,387,SimpleNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLat = mid,400,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLon = 180.0,379,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLon = mid,393,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack36 = minLon + maxLon,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack36 / 2.0,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack36 / 2.0, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,minLon = mid,391,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack36 = minLon + maxLon,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack36 / 2.0,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack36 / 2.0, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,count = count + 1,407,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack25 = count, 407)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if count >= length goto $stack22 = new java.lang.String,386,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,isEven = $stack30,403,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, isEven = $stack30, 403)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if isEven == 0 goto $stack23 = minLat + maxLat,387,SimpleNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,count = count + 1,407,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack25 = count, 407)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if count >= length goto $stack22 = new java.lang.String,386,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,isEven = $stack30,403,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, isEven = $stack30, 403)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if isEven == 0 goto $stack23 = minLat + maxLat,387,SimpleNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,count = 0,383,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack25 = count, 407)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if count >= length goto $stack22 = new java.lang.String,386,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,isEven = $stack30,403,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, isEven = $stack30, 403)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if isEven == 0 goto $stack23 = minLat + maxLat,387,SimpleNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack36 / 2.0,388,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack36 / 2.0, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SinkNode, path: )), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,minLat = mid,398,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 14
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geo/d280483edeeabc57247e1753ac0c161039f6e604/original-without-dependencies/geo-0.6.9-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,50100
Time to perform PDG 0,45900
CONFLICTS: [List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack34 = $stack33[bit],397,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack34 = $stack33[bit], 397)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,ch = ch | $stack34,397,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, ch = ch | $stack39, 390)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack27 = virtualinvoke $stack26.<java.lang.String: char charAt(int)>(ch),407,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack27 = virtualinvoke $stack26.<java.lang.String: char charAt(int)>(ch), 407))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLon = mid,393,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack36 = minLon + maxLon,388,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLon = mid,393,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack36 = minLon + maxLon,388,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack36 / 2.0,388,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack36 / 2.0, 388)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,minLon = mid,391,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLon = mid,393,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack36 = minLon + maxLon, 388))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLat = mid,400,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,minLat = mid,398,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLat = mid,400,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack37 = longitude#10 cmpl mid,389,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack37 = longitude#10 cmpl mid, 389)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack37 < 0 goto maxLon = mid,389,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack38 = <com.github.davidmoten.geo.GeoHash: int[] BITS>,390,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack39 = $stack38[bit], 390)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack39 = $stack38[bit],390,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack39 = $stack38[bit], 390)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,ch = ch | $stack39,390,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, ch = ch | $stack39, 390)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,ch = ch | $stack34,397,SimpleNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, ch = ch | $stack39, 390)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack27 = virtualinvoke $stack26.<java.lang.String: char charAt(int)>(ch),407,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack27 = virtualinvoke $stack26.<java.lang.String: char charAt(int)>(ch), 407))), List(Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack24 = latitude cmpl mid,396,SourceNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack24 = latitude cmpl mid, 396)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,if $stack24 < 0 goto maxLat = mid,396,SourceNode, path: ) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,maxLat = mid,400,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,$stack23 = minLat + maxLat,395,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, $stack23 = minLat + maxLat, 395)) => Node(<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>,mid = $stack23 / 2.0,395,SinkNode, path: (<com.github.davidmoten.geo.GeoHash: java.lang.String encodeHash(double,double,int)>, mid = $stack23 / 2.0, 395)))]
 Analysis results
----------------------------
 Number of conflicts: 8
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
