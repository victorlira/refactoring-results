Running soot scenario cloudconductor-server;de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl;get(String, String, String);d27ec8030f47886baaac3272b5a7f4b815d88052
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/d27ec8030f47886baaac3272b5a7f4b815d88052/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,56000
Time to perform Confluence 1 Inter 0,59000
Configure Soot Confluence 2 Inter 0,26100
Time to perform Confluence 2 Inter 0,18700
Visited methods: 20
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/d27ec8030f47886baaac3272b5a7f4b815d88052/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,61700
Runtime: 0.017s
Time to perform OA Inter 0,73900
OA Inter Visited methods: 3
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/d27ec8030f47886baaac3272b5a7f4b815d88052/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,43900
Time to perform DFP Inter 0,58800
Depth limit: 5
CONFLICTS: []
Visited methods: 10
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/d27ec8030f47886baaac3272b5a7f4b815d88052/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,54600
Time to perform DFP Inter 0,57800
Depth limit: 5
CONFLICTS: []
Visited methods: 10
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/d27ec8030f47886baaac3272b5a7f4b815d88052/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,43700
Time to perform PDG 0,52000
CONFLICTS: [List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack7 = <de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore instance>,98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key),98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack8 == 0 goto $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),98,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),101,SimpleNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>('GLOBAL'), 101)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack9 != 0 goto (branch),101,SimpleNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey),102,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack15.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findGlobal(java.lang.String,java.lang.String)>(lService, lKey),108,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack15.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findGlobal(java.lang.String,java.lang.String)>(lService, lKey), 108)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if result != null goto (branch),110,SimpleNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack12 = this.<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: de.cinovo.cloudconductor.server.dao.IConfigValueDAO dcv>,111,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack12 = this.<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: de.cinovo.cloudconductor.server.dao.IConfigValueDAO dcv>, 111))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if service == null goto result = null,99,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,lService = null,94,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack7 = <de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore instance>,98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key),98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack8 == 0 goto $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),98,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),101,SimpleNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>('GLOBAL'), 101)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack9 != 0 goto (branch),101,SimpleNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey),102,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack15.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findGlobal(java.lang.String,java.lang.String)>(lService, lKey),108,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack15.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findGlobal(java.lang.String,java.lang.String)>(lService, lKey), 108))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if service == null goto result = null,99,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,lService = null,94,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey),102,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if result != null goto (branch),103,SinkNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack21 = this.<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: de.cinovo.cloudconductor.server.dao.IConfigValueDAO dcv>,104,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack21 = this.<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: de.cinovo.cloudconductor.server.dao.IConfigValueDAO dcv>, 104)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack21.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findKey(java.lang.String,java.lang.String)>(template, lKey),104,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack21.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findKey(java.lang.String,java.lang.String)>(template, lKey), 104))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if service == null goto result = null,99,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,lService = null,94,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack15.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findGlobal(java.lang.String,java.lang.String)>(lService, lKey),108,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack15.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findGlobal(java.lang.String,java.lang.String)>(lService, lKey), 108)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if result != null goto (branch),110,SimpleNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack12 = this.<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: de.cinovo.cloudconductor.server.dao.IConfigValueDAO dcv>,111,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack12 = this.<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: de.cinovo.cloudconductor.server.dao.IConfigValueDAO dcv>, 111))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack7 = <de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore instance>,98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key),98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack8 == 0 goto $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),98,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),101,SimpleNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>('GLOBAL'), 101)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack9 != 0 goto (branch),101,SimpleNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey),102,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if result != null goto (branch),103,SinkNode, path: )), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if service == null goto result = null,99,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,lService = null,94,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey),102,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if service == null goto result = null,99,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,lService = null,94,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack15.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findGlobal(java.lang.String,java.lang.String)>(lService, lKey),108,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack15.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findGlobal(java.lang.String,java.lang.String)>(lService, lKey), 108))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if service == null goto result = null,99,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,lKey = service,93,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, lKey = service, 93))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack7 = <de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore instance>,98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key),98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack8 == 0 goto $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),98,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),101,SimpleNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>('GLOBAL'), 101)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack9 != 0 goto (branch),101,SimpleNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey),102,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if result != null goto (branch),103,SinkNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack21 = this.<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: de.cinovo.cloudconductor.server.dao.IConfigValueDAO dcv>,104,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack21 = this.<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: de.cinovo.cloudconductor.server.dao.IConfigValueDAO dcv>, 104)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack21.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findKey(java.lang.String,java.lang.String)>(template, lKey),104,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack21.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findKey(java.lang.String,java.lang.String)>(template, lKey), 104))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack7 = <de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore instance>,98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key),98,SourceNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke $stack7.<de.cinovo.cloudconductor.server.util.ReservedConfigKeyStore: boolean isReserved(java.lang.String)>(key), 98)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack8 == 0 goto $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),98,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,$stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GLOBAL"),101,SimpleNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, $stack9 = virtualinvoke template.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>('GLOBAL'), 101)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if $stack9 != 0 goto (branch),101,SimpleNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey),102,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102))), List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if service == null goto result = null,99,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,lService = null,94,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey),102,SinkNode, path: (<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>, result = interfaceinvoke $stack18.<de.cinovo.cloudconductor.server.dao.IConfigValueDAO: de.cinovo.cloudconductor.server.model.EConfigValue findBy(java.lang.String,java.lang.String,java.lang.String)>(template, lService, lKey), 102)) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if result != null goto (branch),103,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 12
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cloudconductor-server/d27ec8030f47886baaac3272b5a7f4b815d88052/original-without-dependencies/de.cinovo.cloudconductor.cloudconductor-server.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,45200
Time to perform PDG 0,54100
CONFLICTS: [List(Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if key != null goto result = null,92,SourceNode, path: ) => Node(<de.cinovo.cloudconductor.server.rest.impl.ConfigValueImpl: java.lang.String get(java.lang.String,java.lang.String,java.lang.String)>,if service == null goto result = null,99,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
