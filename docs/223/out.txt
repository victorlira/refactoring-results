SOURCE=>BASE: Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,interfaceinvoke cp.<java.util.List: boolean add(java.lang.Object)>($stack30),92,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, interfaceinvoke cp.<java.util.List: boolean add(java.lang.Object)>($stack30), 92))
SINK=>BASE: Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,$stack9 = new java.util.ArrayList,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke $stack9.<java.util.ArrayList: void <init>()>(), 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,interfaceinvoke cp.<java.util.List: boolean add(java.lang.Object)>($stack30),92,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, interfaceinvoke cp.<java.util.List: boolean add(java.lang.Object)>($stack30), 92))

SOURCE=>BASE: Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,virtualinvoke ret.<net.sf.launch4j.config.ClassPath: void setPaths(java.util.List)>(cp),97,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, virtualinvoke ret.<net.sf.launch4j.config.ClassPath: void setPaths(java.util.List)>(cp), 97))
SINK=>BASE: Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,$stack9 = new java.util.ArrayList,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke $stack9.<java.util.ArrayList: void <init>()>(), 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,virtualinvoke ret.<net.sf.launch4j.config.ClassPath: void setPaths(java.util.List)>(cp),97,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, virtualinvoke ret.<net.sf.launch4j.config.ClassPath: void setPaths(java.util.List)>(cp), 97))

SOURCE=>BASE: Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>,cp := @parameter0: java.util.List,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39), 88)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>,interfaceinvoke cp.<java.util.List: boolean addAll(java.util.Collection)>($stack4),74,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39), 88) => (<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>, interfaceinvoke cp.<java.util.List: boolean addAll(java.util.Collection)>($stack4), 74))
SINK=>BASE: Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,$stack9 = new java.util.ArrayList,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke $stack9.<java.util.ArrayList: void <init>()>(), 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>,cp := @parameter0: java.util.List,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39), 88)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>,interfaceinvoke cp.<java.util.List: boolean addAll(java.util.Collection)>($stack4),74,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39), 88) => (<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>, interfaceinvoke cp.<java.util.List: boolean addAll(java.util.Collection)>($stack4), 74))

SOURCE=>BASE: Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack13),99,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack13), 99))
SINK=>BASE: Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,$stack9 = new java.util.ArrayList,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke $stack9.<java.util.ArrayList: void <init>()>(), 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack13),99,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack13), 99))

source(java.util.ArrayList, <init>, -1, ArrayList.<java.util.ArrayList: java.lang.Object[] elementData> = null, [at com.akathist.maven.plugins.launch4j.ClassPath.toL4j(ClassPath.java:81)]) => sink(java.util.ArrayList, <init>, -1, ArrayList.<java.util.ArrayList: java.lang.Object[] elementData> = null, [at com.akathist.maven.plugins.launch4j.ClassPath.toL4j(ClassPath.java:81)])

source(java.util.ArrayList, <init>, -1, ArrayList.<java.util.ArrayList: int size> = null, [at com.akathist.maven.plugins.launch4j.ClassPath.toL4j(ClassPath.java:81)]) => sink(java.util.ArrayList, <init>, -1, ArrayList.<java.util.ArrayList: int size> = null, [at com.akathist.maven.plugins.launch4j.ClassPath.toL4j(ClassPath.java:81)])

source(com.akathist.maven.plugins.launch4j.ClassPath, toL4j, 81, $stack9 = new java.util.ArrayList, [at com.akathist.maven.plugins.launch4j.ClassPath.toL4j(ClassPath.java:81)]) => sink(com.akathist.maven.plugins.launch4j.ClassPath, toL4j, 81, $stack9 = new java.util.ArrayList, [at com.akathist.maven.plugins.launch4j.ClassPath.toL4j(ClassPath.java:81)])

source(com.akathist.maven.plugins.launch4j.ClassPath, toL4j, 81, cp = $stack9, [at com.akathist.maven.plugins.launch4j.ClassPath.toL4j(ClassPath.java:81)]) => sink(com.akathist.maven.plugins.launch4j.ClassPath, toL4j, 81, cp = $stack9, [at com.akathist.maven.plugins.launch4j.ClassPath.toL4j(ClassPath.java:81)])

List(Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>,cp := @parameter0: java.util.List,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39), 88)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>,interfaceinvoke cp.<java.util.List: boolean addAll(java.util.Collection)>($stack4),74,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39), 88) => (<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>, interfaceinvoke cp.<java.util.List: boolean addAll(java.util.Collection)>($stack4), 74)))

List(Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39),88,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39), 88)))

List(Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,cp = $stack9,81,SourceNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, cp = $stack9, 81)) => Node(<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>,specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39),88,SinkNode, path: (<com.akathist.maven.plugins.launch4j.ClassPath: net.sf.launch4j.config.ClassPath toL4j(java.util.Set)>, specialinvoke this.<com.akathist.maven.plugins.launch4j.ClassPath: void addToCp(java.util.List,java.lang.String)>(cp, $stack39), 88)))

