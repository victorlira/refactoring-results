Running soot scenario xdi2;xdi2.core.features.nodetypes.XdiEntityCollection;isValidXDIArc(XDIArc);eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,67700
Time to perform Confluence 1 Inter 0,71700
Configure Soot Confluence 2 Inter 0,38300
Time to perform Confluence 2 Inter 0,28900
Visited methods: 24
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,73100
Runtime: 0.011s
Time to perform OA Inter 1,06700
OA Inter Visited methods: 7
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,55600
Time to perform DFP Inter 0,63500
Depth limit: 5
CONFLICTS: []
Visited methods: 12
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,47900
Time to perform DFP Inter 0,65300
Depth limit: 5
CONFLICTS: []
Visited methods: 12
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,67400
Time to perform PDG 0,62900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/xdi2/eb0bebb706227aea2ddd7fbdb01fd0d5d7c77038/original-without-dependencies/xdi2-core-0.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,66700
Time to perform PDG 0,89900
CONFLICTS: [List(Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack2 == 0 goto $stack3 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_CLASS_UNRESERVED>,95,SourceNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,return 0,99,SinkNode, path: )), List(Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack2 == 0 goto $stack3 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_CLASS_UNRESERVED>,95,SourceNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack5 != 0 goto $stack6 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),97,SimpleNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack10 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(),108,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack10 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(), 108)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack11 = virtualinvoke $stack9.<java.lang.Character: boolean equals(java.lang.Object)>($stack10),108,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack11 = virtualinvoke $stack9.<java.lang.Character: boolean equals(java.lang.Object)>($stack10), 108)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack11 == 0 goto $stack12 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_AUTHORITY_PERSONAL>,108,SimpleNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack12 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_AUTHORITY_PERSONAL>,100,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack14 = virtualinvoke $stack12.<java.lang.Character: boolean equals(java.lang.Object)>($stack13), 100)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack14 = virtualinvoke $stack12.<java.lang.Character: boolean equals(java.lang.Object)>($stack13),100,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack14 = virtualinvoke $stack12.<java.lang.Character: boolean equals(java.lang.Object)>($stack13), 100)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack14 != 0 goto $stack15 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),100,SimpleNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack18 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_AUTHORITY_LEGAL>,108,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack20 = virtualinvoke $stack18.<java.lang.Character: boolean equals(java.lang.Object)>($stack19), 108)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack20 = virtualinvoke $stack18.<java.lang.Character: boolean equals(java.lang.Object)>($stack19),108,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack20 = virtualinvoke $stack18.<java.lang.Character: boolean equals(java.lang.Object)>($stack19), 108)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack20 != 0 goto $stack15 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),108,SimpleNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack23 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(),102,SinkNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack23 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(), 102)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack24 = virtualinvoke $stack22.<java.lang.Character: boolean equals(java.lang.Object)>($stack23),102,SinkNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack24 = virtualinvoke $stack22.<java.lang.Character: boolean equals(java.lang.Object)>($stack23), 102)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack24 == 0 goto return 0,102,SinkNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack15 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),102,SinkNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack15 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(), 102)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack15 != 0 goto return 0,102,SinkNode, path: )), List(Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack1 != 0 goto $stack2 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean isAttribute()>(),94,SourceNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,return 0,99,SinkNode, path: )), List(Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack1 != 0 goto $stack2 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean isAttribute()>(),94,SourceNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack2 == 0 goto $stack3 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_CLASS_UNRESERVED>,95,SourceNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack5 != 0 goto $stack6 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),97,SimpleNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack10 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(),108,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack10 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(), 108)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack11 = virtualinvoke $stack9.<java.lang.Character: boolean equals(java.lang.Object)>($stack10),108,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack11 = virtualinvoke $stack9.<java.lang.Character: boolean equals(java.lang.Object)>($stack10), 108)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack11 == 0 goto $stack12 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_AUTHORITY_PERSONAL>,108,SimpleNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack12 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_AUTHORITY_PERSONAL>,100,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack14 = virtualinvoke $stack12.<java.lang.Character: boolean equals(java.lang.Object)>($stack13), 100)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack14 = virtualinvoke $stack12.<java.lang.Character: boolean equals(java.lang.Object)>($stack13),100,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack14 = virtualinvoke $stack12.<java.lang.Character: boolean equals(java.lang.Object)>($stack13), 100)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack14 != 0 goto $stack15 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),100,SimpleNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack18 = <xdi2.core.constants.XDIConstants: java.lang.Character CS_AUTHORITY_LEGAL>,108,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack20 = virtualinvoke $stack18.<java.lang.Character: boolean equals(java.lang.Object)>($stack19), 108)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack20 = virtualinvoke $stack18.<java.lang.Character: boolean equals(java.lang.Object)>($stack19),108,SimpleNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack20 = virtualinvoke $stack18.<java.lang.Character: boolean equals(java.lang.Object)>($stack19), 108)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack20 != 0 goto $stack15 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),108,SimpleNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack23 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(),102,SinkNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack23 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: java.lang.Character getCs()>(), 102)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack24 = virtualinvoke $stack22.<java.lang.Character: boolean equals(java.lang.Object)>($stack23),102,SinkNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack24 = virtualinvoke $stack22.<java.lang.Character: boolean equals(java.lang.Object)>($stack23), 102)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack24 == 0 goto return 0,102,SinkNode, path: ) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,$stack15 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(),102,SinkNode, path: (<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>, $stack15 = virtualinvoke XDIarc.<xdi2.core.syntax.XDIArc: boolean hasLiteralNode()>(), 102)) => Node(<xdi2.core.features.nodetypes.XdiEntityCollection: boolean isValidXDIArc(xdi2.core.syntax.XDIArc)>,if $stack15 != 0 goto return 0,102,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
