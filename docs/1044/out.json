[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack18 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack18 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,if $stack18 == 0 goto $stack19 = new java.util.HashMap,152,SinkNode, path: ) SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "if $stack18 == 0 goto $stack19 = new java.util.HashMap",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 152
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack12 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack12 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 151)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>(),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 151)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack14 = interfaceinvoke $stack13.<java.util.Set: int size()>(),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack14 = interfaceinvoke $stack13.<java.util.Set: int size()>(), 151)) SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack12 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack12 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 151)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>(),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 151))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 151
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 151
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 151
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 151
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 151
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack14 = interfaceinvoke $stack13.<java.util.Set: int size()>()",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 151
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v),154,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v), 154)) SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v),154,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v), 154))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 158
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 154
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 158
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 154
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v)",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 154
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v),153,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v), 153)) SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v),153,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v), 153))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 158
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 153
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 158
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 153
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v)",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 153
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)) SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 158
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 58
				},
				"stackTrace": [{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 58
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 152
},{
	"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
	"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
	"line": 158
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>()",
				"location": {
					"file": "",
					"class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
					"method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
					"line": 158
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "315"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 315)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "328"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack39 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "335"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack39 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 335)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "336"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "338"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "344"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 344)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack33.<org.jgrapht.graph.WeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack35, $stack34)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "344"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack33.<org.jgrapht.graph.WeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack35, $stack34), 344)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "336"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "338"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "317"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 317)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "319"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 319)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter1: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.DirectedPseudograph",
  "method": "<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317)","(<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.DirectedPseudograph",
  "method": "<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>",
  "line": "61"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317)","(<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)","(<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "336"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "338"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "344"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 344)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack18 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "356"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack18 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 356)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack17.<org.jgrapht.graph.DefaultUndirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack19, $stack18)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "356"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack17.<org.jgrapht.graph.DefaultUndirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack19, $stack18), 356)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "315"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 315)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack38 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "327"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack38 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 327)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "317"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 317)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "319"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 319)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "342"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 342)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "336"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "338"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "344"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 344)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack22 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "352"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack22 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 352)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "358"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "365"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack8 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter1: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.SimpleGraph",
  "method": "<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363)","(<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter1: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.AbstractBaseGraph",
  "method": "<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317)","(<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)","(<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier edgeSupplier> = edgeSupplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.AbstractBaseGraph",
  "method": "<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>",
  "line": "91"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317)","(<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)","(<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61)","(<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>, this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier edgeSupplier> = edgeSupplier, 91)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "328"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "349"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 349)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "323"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 323)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "336"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter1: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.SimpleDirectedWeightedGraph",
  "method": "<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.SimpleDirectedWeightedGraph",
  "method": "<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>",
  "line": "56"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336)","(<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 56)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack68 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "317"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack68 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 317)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "314"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack2 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>, 314)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "317"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 317)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter1: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.DirectedWeightedPseudograph",
  "method": "<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.DirectedWeightedPseudograph",
  "method": "<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>",
  "line": "57"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317)","(<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack51 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "329"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack51 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 329)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack48 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "331"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack48 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 331)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "328"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "362"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack6 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 362)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack26 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "350"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack26 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 350)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "342"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 342)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "354"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack5 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 354)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "328"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "349"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 349)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "355"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack13 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 355)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "321"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>, 321)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "348"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack4 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>, 348)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "312"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack1 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>, 312)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "358"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "358"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "365"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack8 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 365)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter1: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.SimpleGraph",
  "method": "<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363)","(<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.SimpleGraph",
  "method": "<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>",
  "line": "60"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363)","(<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55)","(<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 60)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack52 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "329"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack52 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 329)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "358"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "363"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 363)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "323"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 323)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "vertexSupplier := @parameter0: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.DirectedWeightedMultigraph",
  "method": "<org.jgrapht.graph.DirectedWeightedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack57.<org.jgrapht.graph.DirectedWeightedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack59, $stack58), 323)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "vertexSupplier := @parameter0: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.DirectedMultigraph",
  "method": "<org.jgrapht.graph.DirectedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack57.<org.jgrapht.graph.DirectedWeightedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack59, $stack58), 323)","(<org.jgrapht.graph.DirectedWeightedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "vertexSupplier := @parameter0: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.AbstractBaseGraph",
  "method": "<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317)","(<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)","(<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier vertexSupplier> = vertexSupplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.AbstractBaseGraph",
  "method": "<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>",
  "line": "90"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317)","(<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)","(<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61)","(<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>, this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier vertexSupplier> = vertexSupplier, 90)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "336"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "338"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "344"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 344)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack31 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "346"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack31 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 346)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack30.<org.jgrapht.graph.Pseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>($stack32, $stack31, 0)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "346"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack30.<org.jgrapht.graph.Pseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>($stack32, $stack31, 0), 346)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "336"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "336"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack62 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "316"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack62 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 316)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack51 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "329"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack51 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 329)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter1: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.DefaultDirectedWeightedGraph",
  "method": "<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack50.<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack52, $stack51), 329)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.jgrapht.graph.DefaultDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.DefaultDirectedWeightedGraph",
  "method": "<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>",
  "line": "59"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack50.<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack52, $stack51), 329)","(<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DefaultDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 59)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "365"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack9 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 365)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack58 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "323"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack58 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 323)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack55 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "325"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack55 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 325)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "328"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack29 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "343"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack29 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 343)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack53 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "322"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack53 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 322)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "328"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "321"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>, 321)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "358"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "363"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 363)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter1: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.SimpleWeightedGraph",
  "method": "<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.SimpleWeightedGraph",
  "method": "<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>",
  "line": "55"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363)","(<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter0: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "newBuilder.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier> = edgeSupplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>",
  "line": "242"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>, newBuilder.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier> = edgeSupplier, 242)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "150"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.jgrapht.graph.builder.GraphTypeBuilder",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "336"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.builder.GraphTypeBuilder",
  "method": "<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>",
  "line": "338"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "edgeSupplier := @parameter1: java.util.function.Supplier",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.SimpleDirectedGraph",
  "method": "<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>",
  "line": "-1"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336)","(<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9)",
"location": {
  "file": "",
  "class": "org.jgrapht.graph.SimpleDirectedGraph",
  "method": "<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)","(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336)","(<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 56)","(<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 58)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "58"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack20 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "156"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack20 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 156)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = interfaceinvoke $stack20.<org.jgrapht.Graph: java.util.Set vertexSet()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "156"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack21 = interfaceinvoke $stack20.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 156)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack22 = interfaceinvoke $stack21.<java.util.Set: int size()>()",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "156"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack22 = interfaceinvoke $stack21.<java.util.Set: int size()>(), 156)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack19.<java.util.HashMap: void <init>(int)>($stack22)",
"location": {
  "file": "",
  "class": "org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm",
  "method": "<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>",
  "line": "156"
},
"stackTrace": ["(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, specialinvoke $stack19.<java.util.HashMap: void <init>(int)>($stack22), 156)"]
}]
}
}

]
