Running soot scenario jgrapht;org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner;UnweightedSpannerAlgorithm();f1961d7d4809ba4ac3dc8ab59f88d269d1ebdec0
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jgrapht/f1961d7d4809ba4ac3dc8ab59f88d269d1ebdec0/original-without-dependencies/jgrapht-ext-1.1.1-SNAPSHOT-uber.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 1,14500
Time to perform Confluence 1 Inter 1,05000
Configure Soot Confluence 2 Inter 0,68400
Time to perform Confluence 2 Inter 0,52700
Visited methods: 72
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack18 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack18 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,if $stack18 == 0 goto $stack19 = new java.util.HashMap,152,SinkNode, path: )
SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)), SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack12 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack12 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 151)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>(),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 151)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack14 = interfaceinvoke $stack13.<java.util.Set: int size()>(),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack14 = interfaceinvoke $stack13.<java.util.Set: int size()>(), 151))
SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack12 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack12 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 151)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>(),151,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 151)), SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v),154,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v), 154))
SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v),154,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v), 154)), SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v),153,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v), 153))
SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v),153,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v), 153)), SOURCE=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158))
SINK=>BASE: Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack15 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack16 = interfaceinvoke $stack15.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(),152,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(),158,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158))]
Confluence interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Confluence flows from execution of lines 150 and 150 to line 152, defined in $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and used in l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>()
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 152 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, l2 = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>(), 152)
Confluence interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Confluence flows from execution of lines 150 and 150 to line 151, defined in $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and used in $stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>()
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 151 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack13 = interfaceinvoke $stack12.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 151)
Confluence interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Confluence flows from execution of lines 150 and 150 to line 154, defined in $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and used in interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 154 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack27.<java.util.Deque: void push(java.lang.Object)>(v), 154)
Confluence interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Confluence flows from execution of lines 150 and 150 to line 153, defined in $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and used in interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 153 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, interfaceinvoke $stack25.<org.jgrapht.Graph: boolean addVertex(java.lang.Object)>(v), 153)
Confluence interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Confluence flows from execution of lines 150 and 150 to line 158, defined in $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1) and used in v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>()
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 158 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, v = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>(), 158)
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jgrapht/f1961d7d4809ba4ac3dc8ab59f88d269d1ebdec0/original-without-dependencies/jgrapht-ext-1.1.1-SNAPSHOT-uber.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 1,32500
Runtime: 0.121s
Time to perform OA Inter 1,55400
OA Inter Visited methods: 213
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jgrapht/f1961d7d4809ba4ac3dc8ab59f88d269d1ebdec0/original-without-dependencies/jgrapht-ext-1.1.1-SNAPSHOT-uber.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 1,19500
Time to perform DFP Inter 1,41900
Depth limit: 5
CONFLICTS: DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack9 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack9 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 365)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 349)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack4 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack4 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>, 348)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier edgeSupplier> = edgeSupplier
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57) => (<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61) => (<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>, this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier edgeSupplier> = edgeSupplier, 91)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack38 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack38 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 327)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack29 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack29 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 343)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack48 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack48 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 331)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke $stack30.<org.jgrapht.graph.Pseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>($stack32, $stack31, 0)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack30.<org.jgrapht.graph.Pseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>($stack32, $stack31, 0), 346)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336) => (<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 56)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack53 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack53 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 322)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 342)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>()
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336) => (<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 56) => (<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 58)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57) => (<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack22 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack22 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 352)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363) => (<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55) => (<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 60)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 315)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke $stack17.<org.jgrapht.graph.DefaultUndirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack19, $stack18)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack17.<org.jgrapht.graph.DefaultUndirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack19, $stack18), 356)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>, 321)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke this.<org.jgrapht.graph.DefaultDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack50.<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack52, $stack51), 329) => (<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DefaultDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 59)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier vertexSupplier> = vertexSupplier
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57) => (<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61) => (<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>, this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier vertexSupplier> = vertexSupplier, 90)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke $stack33.<org.jgrapht.graph.WeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack35, $stack34)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack33.<org.jgrapht.graph.WeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack35, $stack34), 344)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack39 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack39 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 335)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack13 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack13 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 355)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in newBuilder.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier> = edgeSupplier
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>, newBuilder.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier> = edgeSupplier, 242)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack55 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack55 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 325)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack68 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack68 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 317)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 323)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363) => (<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack62 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack62 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 316)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 319)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack6 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack6 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 362)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack26 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack26 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 350)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack52 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack52 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 329)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 363)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack1 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack1 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>, 312)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack2 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack2 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>, 314)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack5 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack5 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 354)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 150, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)
[List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,328,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,336,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44),336,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,328,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,349,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 349)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack13 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,355,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack13 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 355))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,336,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,338,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,344,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 344)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack18 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,356,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack18 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 356)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,specialinvoke $stack17.<org.jgrapht.graph.DefaultUndirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack19, $stack18),356,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack17.<org.jgrapht.graph.DefaultUndirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack19, $stack18), 356))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack9 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>,365,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack9 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 365))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>,315,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 315))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,336,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,338,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,344,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 344)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack22 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,352,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack22 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 352))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,358,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,363,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 363)) => Node(<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>,edgeSupplier := @parameter1: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363)) => Node(<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>,specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1),55,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363) => (<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>,315,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack36 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 315)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack38 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>,327,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack38 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 327))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,328,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack39 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,335,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack39 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 335))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack62 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,316,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack62 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 316))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack2 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>,314,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack2 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>, 314))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,317,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 317)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,319,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 319))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>,323,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 323))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,328,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack6 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,362,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack6 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 362))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>,342,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 342)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack5 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>,354,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack5 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 354))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack1 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>,312,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack1 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean directed>, 312))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>,342,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack3 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingSelfLoops>, 342))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>,323,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack59 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 323)) => Node(<org.jgrapht.graph.DirectedWeightedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>,vertexSupplier := @parameter0: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack57.<org.jgrapht.graph.DirectedWeightedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack59, $stack58), 323)) => Node(<org.jgrapht.graph.DirectedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>,vertexSupplier := @parameter0: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack57.<org.jgrapht.graph.DirectedWeightedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack59, $stack58), 323) => (<org.jgrapht.graph.DirectedWeightedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedMultigraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)) => Node(<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>,vertexSupplier := @parameter0: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57) => (<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61)) => Node(<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>,this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier vertexSupplier> = vertexSupplier,90,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57) => (<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61) => (<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>, this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier vertexSupplier> = vertexSupplier, 90))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,336,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,338,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)) => Node(<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>,edgeSupplier := @parameter1: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336) => (<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 56)) => Node(<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>,specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9),58,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336) => (<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 56) => (<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 58))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,336,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,338,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,344,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 344)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack31 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,346,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack31 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 346)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,specialinvoke $stack30.<org.jgrapht.graph.Pseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>($stack32, $stack31, 0),346,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack30.<org.jgrapht.graph.Pseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>($stack32, $stack31, 0), 346))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,328,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack29 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,343,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack29 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 343))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,336,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)) => Node(<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>,edgeSupplier := @parameter1: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336)) => Node(<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>,specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1),56,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack43.<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack45, $stack44), 336) => (<org.jgrapht.graph.SimpleDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 56))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack52 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>,329,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack52 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 329))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack26 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>,350,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack26 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 350))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,317,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 317)) => Node(<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>,edgeSupplier := @parameter1: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317)) => Node(<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>,specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1),57,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,328,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack46 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 328)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,349,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack20 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 349))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,317,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack67 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 317)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,319,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack64 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 319)) => Node(<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>,edgeSupplier := @parameter1: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57)) => Node(<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>,specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9),61,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57) => (<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack58 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,323,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack58 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 323)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack55 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,325,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack55 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 325))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,336,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,338,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,358,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,363,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack11 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 363))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>,321,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>, 321)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack4 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>,348,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack4 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>, 348))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack51 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,329,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack51 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 329)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack48 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,331,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack48 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 331))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,336,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack44 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 336)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,338,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack41 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 338)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,344,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack34 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 344)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,specialinvoke $stack33.<org.jgrapht.graph.WeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack35, $stack34),344,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack33.<org.jgrapht.graph.WeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack35, $stack34), 344))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,358,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack8 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,365,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack8 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 365)) => Node(<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>,edgeSupplier := @parameter1: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363) => (<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55)) => Node(<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>,specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9),60,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363) => (<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55) => (<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 60))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack68 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>,317,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack68 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier vertexSupplier>, 317))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>,edgeSupplier := @parameter0: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>,newBuilder.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier> = edgeSupplier,242,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>, newBuilder.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier> = edgeSupplier, 242))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,358,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack8 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,365,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack8 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 365)) => Node(<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>,edgeSupplier := @parameter1: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack10.<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack12, $stack11), 363) => (<org.jgrapht.graph.SimpleWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.SimpleGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 55)) => Node(<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>,edgeSupplier := @parameter1: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57) => (<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61)) => Node(<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>,this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier edgeSupplier> = edgeSupplier,91,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack66.<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack68, $stack67), 317) => (<org.jgrapht.graph.DirectedWeightedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 57) => (<org.jgrapht.graph.DirectedPseudograph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>, specialinvoke this.<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>(vertexSupplier, edgeSupplier, $stack9), 61) => (<org.jgrapht.graph.AbstractBaseGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,org.jgrapht.GraphType)>, this.<org.jgrapht.graph.AbstractBaseGraph: java.util.function.Supplier edgeSupplier> = edgeSupplier, 91))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack53 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>,322,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack53 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean weighted>, 322))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>,321,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack37 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: boolean allowingMultipleEdges>, 321))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack51 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,329,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack51 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 329)) => Node(<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>,edgeSupplier := @parameter1: java.util.function.Supplier,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack50.<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack52, $stack51), 329)) => Node(<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>,specialinvoke this.<org.jgrapht.graph.DefaultDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1),59,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, specialinvoke $stack50.<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>($stack52, $stack51), 329) => (<org.jgrapht.graph.DefaultDirectedWeightedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier)>, specialinvoke this.<org.jgrapht.graph.DefaultDirectedGraph: void <init>(java.util.function.Supplier,java.util.function.Supplier,boolean)>(vertexSupplier, edgeSupplier, 1), 59))), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack8 = interfaceinvoke $stack7.<org.jgrapht.Graph: java.util.function.Supplier getEdgeSupplier()>(), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8),150,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack9 = virtualinvoke $stack6.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.graph.builder.GraphTypeBuilder edgeSupplier(java.util.function.Supplier)>($stack8), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,this := @this: org.jgrapht.graph.builder.GraphTypeBuilder,-1,SimpleNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150)) => Node(<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>,$stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>,358,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack10 = virtualinvoke $stack9.<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>(), 150) => (<org.jgrapht.graph.builder.GraphTypeBuilder: org.jgrapht.Graph buildGraph()>, $stack15 = this.<org.jgrapht.graph.builder.GraphTypeBuilder: java.util.function.Supplier edgeSupplier>, 358)))]
Visited methods: 36
 Analysis results
----------------------------
 Number of conflicts: 43
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jgrapht/f1961d7d4809ba4ac3dc8ab59f88d269d1ebdec0/original-without-dependencies/jgrapht-ext-1.1.1-SNAPSHOT-uber.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 1,22100
Time to perform DFP Inter 1,39800
Depth limit: 5
CONFLICTS: DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Data flows from execution of line 150 to 156, defined in $stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph> and propagated in specialinvoke $stack19.<java.util.HashMap: void <init>(int)>($stack22)
Caused by line 150 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)
Caused by line 156 flow: path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, specialinvoke $stack19.<java.util.HashMap: void <init>(int)>($stack22), 156)
DF interference in <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,return $stack1,58,SinkNode, path: )), List(Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack1 = x0.<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph graph>,58,SourceNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack7 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 150)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack20 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1),156,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack20 = staticinvoke <org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner: org.jgrapht.Graph access$000(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>(l1), 156)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack21 = interfaceinvoke $stack20.<org.jgrapht.Graph: java.util.Set vertexSet()>(),156,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack21 = interfaceinvoke $stack20.<org.jgrapht.Graph: java.util.Set vertexSet()>(), 156)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,$stack22 = interfaceinvoke $stack21.<java.util.Set: int size()>(),156,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, $stack22 = interfaceinvoke $stack21.<java.util.Set: int size()>(), 156)) => Node(<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>,specialinvoke $stack19.<java.util.HashMap: void <init>(int)>($stack22),156,SinkNode, path: (<org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner$UnweightedSpannerAlgorithm: void <init>(org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner)>, specialinvoke $stack19.<java.util.HashMap: void <init>(int)>($stack22), 156)))]
Visited methods: 49
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jgrapht/f1961d7d4809ba4ac3dc8ab59f88d269d1ebdec0/original-without-dependencies/jgrapht-ext-1.1.1-SNAPSHOT-uber.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 1,20800
Time to perform PDG 0,64000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jgrapht/f1961d7d4809ba4ac3dc8ab59f88d269d1ebdec0/original-without-dependencies/jgrapht-ext-1.1.1-SNAPSHOT-uber.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,74100
Time to perform PDG 0,68000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
