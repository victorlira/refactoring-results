[
{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "l11 - l11",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "l11 = $stack28",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkCommits",
					"method": "<init>",
					"line": 93
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": -1
},{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits_aroundBody4",
	"line": 123
},{
	"class": "com.jcabi.github.mock.MkCommits",
	"method": "<init>",
	"line": 93
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "l11 = $stack28",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkCommits",
					"method": "<init>",
					"line": 93
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": -1
},{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits_aroundBody4",
	"line": 123
},{
	"class": "com.jcabi.github.mock.MkCommits",
	"method": "<init>",
	"line": 93
}]
			}
		]
	}
},
{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "l3 - l3",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "l3 = newarray (java.lang.Object)[2]",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkGit",
					"method": "commits",
					"line": 123
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": 123
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "l3 = newarray (java.lang.Object)[2]",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkGit",
					"method": "commits",
					"line": 123
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": 123
}]
			}
		]
	}
},
{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "l3[0] - l3[0]",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "l3[0] = this",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkGit",
					"method": "commits",
					"line": 123
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": 123
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "l3[0] = this",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkGit",
					"method": "commits",
					"line": 123
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": 123
}]
			}
		]
	}
},
{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "l3[1] - l3[1]",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "l3[1] = l2",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkGit",
					"method": "commits",
					"line": 123
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": 123
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "l3[1] = l2",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkGit",
					"method": "commits",
					"line": 123
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": 123
}]
			}
		]
	}
},
{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "l4 - l4",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "l4 = $stack10",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkGit",
					"method": "commits",
					"line": 123
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": 123
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "l4 = $stack10",
				"location": {
					"file": "",
					"class": "com.jcabi.github.mock.MkGit",
					"method": "commits",
					"line": 123
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits",
	"line": 123
}]
			}
		]
	}
},
{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "Formatter.<java.util.Formatter: java.lang.Appendable a> - Formatter.<java.util.Formatter: java.lang.Appendable a>",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "Formatter.<java.util.Formatter: java.lang.Appendable a> = null",
				"location": {
					"file": "",
					"class": "java.util.Formatter",
					"method": "<init>",
					"line": -1
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits_aroundBody4",
	"line": 123
},{
	"class": "com.jcabi.github.mock.MkCommits",
	"method": "<init>",
	"line": 87
},{
	"class": "java.lang.String",
	"method": "format",
	"line": 2940
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "Formatter.<java.util.Formatter: java.lang.Appendable a> = null",
				"location": {
					"file": "",
					"class": "java.util.Formatter",
					"method": "<init>",
					"line": -1
				},
				"stackTrace": [{
	"class": "com.jcabi.github.mock.MkGit",
	"method": "commits_aroundBody4",
	"line": 123
},{
	"class": "com.jcabi.github.mock.MkCommits",
	"method": "<init>",
	"line": 87
},{
	"class": "java.lang.String",
	"method": "format",
	"line": 2940
}]
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$1610818058 = (java.lang.Iterable) $stack24",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "86"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits')",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "91"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$1610818058 = (java.lang.Iterable) $stack24",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "82"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "93"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>",
  "line": "123"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6), 81)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "87"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20), 87)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "86"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits')",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "91"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$1610818058 = (java.lang.Iterable) $stack24",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$8312750 = new org.xembly.Directives",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>()",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4), 81)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>()",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "93"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(), 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "93"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>",
  "line": "123"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits')",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "91"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$1610818058 = (java.lang.Iterable) $stack24",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 := @caughtexception",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>",
  "line": "123"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ex = $stack7",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>",
  "line": "124"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>",
  "line": "123"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "93"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>",
  "line": "123"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0 := @this: com.jcabi.github.mock.MkGit$AjcClosure5",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit$AjcClosure5",
  "method": "<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit$AjcClosure5",
  "method": "<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>",
  "line": "1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)","(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>, specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1), 1)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$1610818058 = (java.lang.Iterable) $stack24",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "86"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits')",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "91"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$1610818058 = (java.lang.Iterable) $stack24",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "82"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, 82)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "93"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>",
  "line": "123"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6), 81)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "87"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20), 87)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "86"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits')",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "91"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$1610818058 = (java.lang.Iterable) $stack24",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "tmp$8312750 = new org.xembly.Directives",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>()",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4), 81)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>()",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "93"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(), 93)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "93"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>",
  "line": "123"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits')",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "91"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "tmp$1610818058 = (java.lang.Iterable) $stack24",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "85"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = new com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>",
  "line": "123"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.jcabi.github.mock.MkCommits",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "81"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkCommits",
  "method": "<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>",
  "line": "93"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)","(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)","(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit",
  "method": "<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>",
  "line": "123"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0 := @this: com.jcabi.github.mock.MkGit$AjcClosure5",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit$AjcClosure5",
  "method": "<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>",
  "line": "-1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1)",
"location": {
  "file": "",
  "class": "com.jcabi.github.mock.MkGit$AjcClosure5",
  "method": "<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>",
  "line": "1"
},
"stackTrace": ["(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)","(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>, specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1), 1)"]
}]
}
}

]
