Running soot scenario jcabi-github;com.jcabi.github.mock.MkGit;commits();70a85681b5440ecdadd24e346039ddebc81e965d
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-github/70a85681b5440ecdadd24e346039ddebc81e965d/original-without-dependencies/jcabi-github-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,75400
Time to perform Confluence 1 Inter 0,43000
Configure Soot Confluence 2 Inter 0,37100
Time to perform Confluence 2 Inter 0,07400
Visited methods: 12
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-github/70a85681b5440ecdadd24e346039ddebc81e965d/original-without-dependencies/jcabi-github-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,80800
Runtime: 0.014s
OA interference in class MkGit, method com.jcabi.github.Commits commits(), execution of line -1 overrides -1, assigning to variable l11, 
Caused by line -1 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1)
at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)
at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:93)
And line -1 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1)
at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)
at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:93)
 
OA interference in class MkGit, method com.jcabi.github.Commits commits(), execution of line 123 overrides 123, assigning to variable l3, 
Caused by line 123 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)
And line 123 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)
 
OA interference in class MkGit, method com.jcabi.github.Commits commits(), execution of line 123 overrides 123, assigning to variable l3[0], 
Caused by line 123 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)
And line 123 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)
 
OA interference in class MkGit, method com.jcabi.github.Commits commits(), execution of line 123 overrides 123, assigning to variable l3[1], 
Caused by line 123 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)
And line 123 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)
 
OA interference in class MkGit, method com.jcabi.github.Commits commits(), execution of line 123 overrides 123, assigning to variable l4, 
Caused by line 123 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)
And line 123 flow:
at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)
 
OA interference in class MkGit, method com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint), execution of line 123 overrides 123, assigning to variable Formatter.<java.util.Formatter: java.lang.Appendable a>, 
Caused by line 123 flow:
at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)
at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87)
at java.lang.String.format(String.java:2940)
And line 123 flow:
at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)
at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87)
at java.lang.String.format(String.java:2940)
 
Time to perform OA Inter 0,89500
OA Inter Visited methods: 12
 Analysis results
----------------------------
 Number of conflicts: 43
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-github/70a85681b5440ecdadd24e346039ddebc81e965d/original-without-dependencies/jcabi-github-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,90100
Time to perform DFP Inter 0,50600
Depth limit: 5
CONFLICTS: DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack7 := @caughtexception and propagated in ex = $stack7
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in tmp$1610818058 = (java.lang.Iterable) $stack24 and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line 123 to 123, defined in $stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5 and propagated in specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1)
Caused by line 123 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)
Caused by line 123 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123) => (<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>, specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1), 1)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, 82)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> and propagated in virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4), 81)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in tmp$8312750 = new org.xembly.Directives and propagated in specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>()
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/github/repos/repo[@coords=\'%s\']/git", $stack20) and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20), 87)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>() and propagated in virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(), 93)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack3 = new com.jcabi.github.mock.MkCommits and propagated in virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6), 81)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits") and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4> and propagated in virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack3 = new com.jcabi.github.mock.MkCommits and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22) and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack3 = new com.jcabi.github.mock.MkCommits and propagated in virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)
[List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$8312750 = new org.xembly.Directives,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85))), List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack7 := @caughtexception,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)) => Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,ex = $stack7,124,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg,82,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, 82)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(),93,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(), 93)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>,81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4),81,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4), 81))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/github/repos/repo[@coords=\'%s\']/git", $stack20),87,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20), 87)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22),86,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6),81,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6), 81))), List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>,$stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)) => Node(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>,l0 := @this: com.jcabi.github.mock.MkGit$AjcClosure5,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)) => Node(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>,specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1),1,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123) => (<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>, specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1), 1))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22),86,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>,81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93))), List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))]
Visited methods: 6
 Analysis results
----------------------------
 Number of conflicts: 14
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-github/70a85681b5440ecdadd24e346039ddebc81e965d/original-without-dependencies/jcabi-github-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,63100
Time to perform DFP Inter 0,55600
Depth limit: 5
CONFLICTS: DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in tmp$1610818058 = (java.lang.Iterable) $stack24 and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line 123 to 123, defined in $stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5 and propagated in specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1)
Caused by line 123 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)
Caused by line 123 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123) => (<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>, specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1), 1)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, 82)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> and propagated in virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4), 81)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in tmp$8312750 = new org.xembly.Directives and propagated in specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>()
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/github/repos/repo[@coords=\'%s\']/git", $stack20) and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20), 87)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>() and propagated in virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(), 93)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack3 = new com.jcabi.github.mock.MkCommits and propagated in virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6), 81)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits") and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4> and propagated in virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack3 = new com.jcabi.github.mock.MkCommits and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22) and propagated in interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)
DF interference in <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>
Data flows from execution of line -1 to -1, defined in $stack3 = new com.jcabi.github.mock.MkCommits and propagated in virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)
Caused by line -1 flow: path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)
[List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$8312750 = new org.xembly.Directives,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg,82,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, 82)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(),93,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(), 93)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>,81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4),81,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4), 81))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/github/repos/repo[@coords=\'%s\']/git", $stack20),87,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20), 87)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22),86,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6),81,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6), 81))), List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>,$stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)) => Node(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>,l0 := @this: com.jcabi.github.mock.MkGit$AjcClosure5,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)) => Node(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>,specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1),1,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123) => (<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>, specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1), 1))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22),86,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85))), List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>,81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93))), List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))]
Visited methods: 6
 Analysis results
----------------------------
 Number of conflicts: 13
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-github/70a85681b5440ecdadd24e346039ddebc81e965d/original-without-dependencies/jcabi-github-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,64600
Time to perform PDG 0,44400
CONFLICTS: [List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack7 := @caughtexception,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)) => Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,ex = $stack7,124,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-github/70a85681b5440ecdadd24e346039ddebc81e965d/original-without-dependencies/jcabi-github-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,57800
Time to perform PDG 0,44600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
