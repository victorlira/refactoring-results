source(com.jcabi.github.mock.MkCommits, <init>, 93, l11 = $stack28, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:93)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 93, l11 = $stack28, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:93)])

source(com.jcabi.github.mock.MkCommits, <init>, -1, tmp$571662993 = (java.lang.Iterable) $stack24, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:-1)]) => sink(com.jcabi.github.mock.MkCommits, <init>, -1, tmp$571662993 = (java.lang.Iterable) $stack24, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:-1)])

source(java.util.Formatter, <init>, -1, Formatter.<java.util.Formatter: java.lang.Appendable a> = null, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)]) => sink(java.util.Formatter, <init>, -1, Formatter.<java.util.Formatter: java.lang.Appendable a> = null, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)])

source(java.util.Formatter, <init>, -1, Formatter.<java.util.Formatter: java.io.IOException lastException> = null, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)]) => sink(java.util.Formatter, <init>, -1, Formatter.<java.util.Formatter: java.io.IOException lastException> = null, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)])

source(java.util.Formatter, <init>, -1, <java.util.Formatter: double scaleUp> = null, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)]) => sink(java.util.Formatter, <init>, -1, <java.util.Formatter: double scaleUp> = null, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)])

source(java.util.Formatter, <init>, -1, <java.util.Formatter: java.util.regex.Pattern fsPattern> = null, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)]) => sink(java.util.Formatter, <init>, -1, <java.util.Formatter: java.util.regex.Pattern fsPattern> = null, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)])

source(java.util.Formatter, <init>, -1, Formatter.<java.util.Formatter: java.lang.Appendable a> = null, [at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)]) => sink(java.util.Formatter, <init>, -1, Formatter.<java.util.Formatter: java.lang.Appendable a> = null, [at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)])

source(java.util.Formatter, <init>, -1, Formatter.<java.util.Formatter: java.io.IOException lastException> = null, [at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)]) => sink(java.util.Formatter, <init>, -1, Formatter.<java.util.Formatter: java.io.IOException lastException> = null, [at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)])

source(java.util.Formatter, <init>, -1, <java.util.Formatter: double scaleUp> = null, [at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)]) => sink(java.util.Formatter, <init>, -1, <java.util.Formatter: double scaleUp> = null, [at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)])

source(java.util.Formatter, <init>, -1, <java.util.Formatter: java.util.regex.Pattern fsPattern> = null, [at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)]) => sink(java.util.Formatter, <init>, -1, <java.util.Formatter: java.util.regex.Pattern fsPattern> = null, [at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)])

source(com.jcabi.github.mock.MkCommits, <init>, 84, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.Coordinates coords> = rep, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:84)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 84, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.Coordinates coords> = rep, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:84)])

source(com.jcabi.github.mock.MkCommits, <init>, 82, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:82)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 82, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:82)])

source(com.jcabi.github.mock.MkGit, commits_aroundBody4, 123, $stack3 = new com.jcabi.github.mock.MkCommits, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits_aroundBody4, 123, $stack3 = new com.jcabi.github.mock.MkCommits, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)])

source(com.jcabi.github.mock.MkGit, commits_aroundBody4, 123, $stack6 = ajc$this.<com.jcabi.github.mock.MkGit: com.jcabi.github.mock.MkStorage storage>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits_aroundBody4, 123, $stack6 = ajc$this.<com.jcabi.github.mock.MkGit: com.jcabi.github.mock.MkStorage storage>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)])

source(com.jcabi.github.mock.MkGit, commits_aroundBody4, 123, $stack5 = ajc$this.<com.jcabi.github.mock.MkGit: java.lang.String self>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits_aroundBody4, 123, $stack5 = ajc$this.<com.jcabi.github.mock.MkGit: java.lang.String self>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)])

source(com.jcabi.github.mock.MkGit, commits_aroundBody4, 123, $stack4 = ajc$this.<com.jcabi.github.mock.MkGit: com.jcabi.github.Coordinates coords>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits_aroundBody4, 123, $stack4 = ajc$this.<com.jcabi.github.mock.MkGit: com.jcabi.github.Coordinates coords>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123)])

source(com.jcabi.github.mock.MkGit, commits_aroundBody4, 125, $stack8 = new java.lang.IllegalStateException, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:125)]) => sink(com.jcabi.github.mock.MkGit, commits_aroundBody4, 125, $stack8 = new java.lang.IllegalStateException, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:125)])

source(com.jcabi.github.mock.MkGit, commits, 123, l3 = newarray (java.lang.Object)[2], [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits, 123, l3 = newarray (java.lang.Object)[2], [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)])

source(com.jcabi.github.mock.MkGit, commits, 123, l3[0] = this, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits, 123, l3[0] = this, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)])

source(com.jcabi.github.mock.MkGit, commits, 123, l3[1] = l2, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits, 123, l3[1] = l2, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)])

source(com.jcabi.github.mock.MkGit, commits, 123, $stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits, 123, $stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)])

source(com.jcabi.github.mock.MkGit, commits, 123, $stack10 = (com.jcabi.github.Commits) $stack15, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits, 123, $stack10 = (com.jcabi.github.Commits) $stack15, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)])

source(com.jcabi.github.mock.MkGit, commits, 123, l4 = $stack10, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)]) => sink(com.jcabi.github.mock.MkGit, commits, 123, l4 = $stack10, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:123)])

source(java.lang.String, <clinit>, 129, $stack0 = newarray (java.io.ObjectStreamField)[0], [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.<clinit>(String.java:129)]) => sink(java.lang.String, <clinit>, 129, $stack0 = newarray (java.io.ObjectStreamField)[0], [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.<clinit>(String.java:129)])

source(java.lang.String, <clinit>, 129, <java.lang.String: java.io.ObjectStreamField[] serialPersistentFields> = $stack0, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.<clinit>(String.java:129)]) => sink(java.lang.String, <clinit>, 129, <java.lang.String: java.io.ObjectStreamField[] serialPersistentFields> = $stack0, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.<clinit>(String.java:129)])

source(java.lang.String, <clinit>, 1184, $stack1 = new java.lang.String$CaseInsensitiveComparator, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.<clinit>(String.java:1184)]) => sink(java.lang.String, <clinit>, 1184, $stack1 = new java.lang.String$CaseInsensitiveComparator, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.<clinit>(String.java:1184)])

source(java.lang.String, <clinit>, 1184, <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = $stack1, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.<clinit>(String.java:1184)]) => sink(java.lang.String, <clinit>, 1184, <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = $stack1, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.<clinit>(String.java:1184)])

source(java.lang.String, format, 2940, $stack2 = new java.util.Formatter, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)]) => sink(java.lang.String, format, 2940, $stack2 = new java.util.Formatter, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:87), at java.lang.String.format(String.java:2940)])

source(com.jcabi.github.mock.MkCommits, <init>, 81, l8 = stg, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 81, l8 = stg, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)])

source(com.jcabi.github.mock.MkCommits, <init>, 81, l9 = login, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 81, l9 = login, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)])

source(com.jcabi.github.mock.MkCommits, <init>, 81, l10 = rep, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 81, l10 = rep, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)])

source(com.jcabi.github.mock.MkCommits, <init>, 81, $stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 81, $stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)])

source(com.jcabi.github.mock.MkCommits, <init>, 81, l7 = newarray (java.lang.Object)[3], [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 81, l7 = newarray (java.lang.Object)[3], [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)])

source(com.jcabi.github.mock.MkCommits, <init>, 81, l7[0] = l8, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 81, l7[0] = l8, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)])

source(com.jcabi.github.mock.MkCommits, <init>, 81, l7[1] = l9, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 81, l7[1] = l9, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)])

source(com.jcabi.github.mock.MkCommits, <init>, 81, l7[2] = l10, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 81, l7[2] = l10, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)])

source(com.jcabi.github.mock.MkCommits, <init>, 81, $stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 81, $stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:81)])

source(com.jcabi.github.mock.MkCommits, <init>, 85, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 85, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)])

source(com.jcabi.github.mock.MkCommits, <init>, 85, tmp$1111968536 = new org.xembly.Directives, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 85, tmp$1111968536 = new org.xembly.Directives, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)])

source(com.jcabi.github.mock.MkCommits, <init>, 85, $stack20 = newarray (java.lang.Object)[1], [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 85, $stack20 = newarray (java.lang.Object)[1], [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)])

source(com.jcabi.github.mock.MkCommits, <init>, 85, $stack21 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.Coordinates coords>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 85, $stack21 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.Coordinates coords>, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)])

source(com.jcabi.github.mock.MkCommits, <init>, 85, $stack20[0] = $stack21, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 85, $stack20[0] = $stack21, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:85)])

source(com.jcabi.github.mock.MkCommits, <init>, 83, this.<com.jcabi.github.mock.MkCommits: java.lang.String self> = login, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:83)]) => sink(com.jcabi.github.mock.MkCommits, <init>, 83, this.<com.jcabi.github.mock.MkCommits: java.lang.String self> = login, [at com.jcabi.github.mock.MkGit.commits(MkGit.java:-1), at com.jcabi.github.mock.MkGit.commits_aroundBody4(MkGit.java:123), at com.jcabi.github.mock.MkCommits.<init>(MkCommits.java:83)])

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$8312750 = new org.xembly.Directives,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)))

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack7 := @caughtexception,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)) => Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,ex = $stack7,124,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg,82,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, 82)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(),93,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(), 93)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>,81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4),81,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4), 81)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/github/repos/repo[@coords=\'%s\']/git", $stack20),87,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20), 87)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22),86,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6),81,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6), 81)))

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>,$stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)) => Node(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>,l0 := @this: com.jcabi.github.mock.MkGit$AjcClosure5,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)) => Node(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>,specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1),1,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123) => (<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>, specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1), 1)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22),86,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>,81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)))

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$8312750 = new org.xembly.Directives,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, specialinvoke tmp$8312750.<org.xembly.Directives: void <init>()>(), 85)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg,82,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage> = stg, 82)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(),93,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack27 = staticinvoke <com.jcabi.aspects.aj.ImmutabilityChecker: com.jcabi.aspects.aj.ImmutabilityChecker aspectOf()>(), 93)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack15 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>,81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l4 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($stack15, this, this), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4),81,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack17.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l4), 81)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/github/repos/repo[@coords=\'%s\']/git", $stack20),87,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('/github/repos/repo[@coords=\'%s\']/git', $stack20), 87)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22),86,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6),81,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack14.<com.jcabi.aspects.aj.MethodValidator: void beforeCtor(org.aspectj.lang.JoinPoint)>(l6), 81)))

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>,$stack13 = new com.jcabi.github.mock.MkGit$AjcClosure5,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)) => Node(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>,l0 := @this: com.jcabi.github.mock.MkGit$AjcClosure5,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123)) => Node(<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>,specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1),1,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, specialinvoke $stack13.<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>(l3), 123) => (<com.jcabi.github.mock.MkGit$AjcClosure5: void <init>(java.lang.Object[])>, specialinvoke l0.<org.aspectj.runtime.internal.AroundClosure: void <init>(java.lang.Object[])>(l1), 1)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22),86,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack23 = virtualinvoke tmp$8312750.<org.xembly.Directives: org.xembly.Directives xpath(java.lang.String)>($stack22), 86)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>("commits"),91,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack24 = virtualinvoke $stack23.<org.xembly.Directives: org.xembly.Directives addIf(java.lang.String)>('commits'), 91)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,tmp$1610818058 = (java.lang.Iterable) $stack24,-1,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, tmp$1610818058 = (java.lang.Iterable) $stack24, -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack12 = <com.jcabi.github.mock.MkCommits: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>,81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7),81,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, l6 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object[])>($stack12, this, this, l7), 81)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6),93,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, virtualinvoke $stack27.<com.jcabi.aspects.aj.ImmutabilityChecker: void after(org.aspectj.lang.JoinPoint)>(l6), 93)))

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack3 = new com.jcabi.github.mock.MkCommits,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,this := @this: com.jcabi.github.mock.MkCommits,-1,SimpleNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,$stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>,85,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, $stack19 = this.<com.jcabi.github.mock.MkCommits: com.jcabi.github.mock.MkStorage storage>, 85)) => Node(<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>,interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058),85,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits()>, $stack10 = staticinvoke <com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>(this, l2), -1) => (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, specialinvoke $stack3.<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>($stack6, $stack5, $stack4), 123) => (<com.jcabi.github.mock.MkCommits: void <init>(com.jcabi.github.mock.MkStorage,java.lang.String,com.jcabi.github.Coordinates)>, interfaceinvoke $stack19.<com.jcabi.github.mock.MkStorage: void apply(java.lang.Iterable)>(tmp$1610818058), 85)))

List(Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,$stack7 := @caughtexception,123,SourceNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)) => Node(<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>,ex = $stack7,124,SinkNode, path: (<com.jcabi.github.mock.MkGit: com.jcabi.github.Commits commits_aroundBody4(com.jcabi.github.mock.MkGit,org.aspectj.lang.JoinPoint)>, ex = $stack7, 124)))

