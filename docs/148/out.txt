List(Node(<spark.Service: void lambda$init$2()>,$stack38 := @caughtexception,496,SourceNode, path: (<spark.Service: void lambda$init$2()>, e = $stack38, 494)) => Node(<spark.Service: void lambda$init$2()>,e = $stack38,494,SinkNode, path: (<spark.Service: void lambda$init$2()>, e = $stack38, 494)))

List(Node(<spark.Service: void lambda$init$2()>,$stack38 := @caughtexception,496,SourceNode, path: (<spark.Service: void lambda$init$2()>, e = $stack38, 494)) => Node(<spark.Service: void lambda$init$2()>,e = $stack38,494,SinkNode, path: (<spark.Service: void lambda$init$2()>, e = $stack38, 494)) => Node(<spark.Service: void lambda$init$2()>,interfaceinvoke $stack39.<java.util.function.Consumer: void accept(java.lang.Object)>(e),495,SinkNode, path: (<spark.Service: void lambda$init$2()>, interfaceinvoke $stack39.<java.util.function.Consumer: void accept(java.lang.Object)>(e), 495)))

List(Node(<spark.Service: void lambda$init$2()>,$stack38 := @caughtexception,496,SourceNode, path: (<spark.Service: void lambda$init$2()>, e#2 = $stack38, 500)) => Node(<spark.Service: void lambda$init$2()>,e#2 = $stack38,500,SinkNode, path: (<spark.Service: void lambda$init$2()>, e#2 = $stack38, 500)))

List(Node(<spark.Service: void lambda$init$2()>,$stack38 := @caughtexception,496,SourceNode, path: (<spark.Service: void lambda$init$2()>, e#2 = $stack38, 500)) => Node(<spark.Service: void lambda$init$2()>,e#2 = $stack38,500,SinkNode, path: (<spark.Service: void lambda$init$2()>, e#2 = $stack38, 500)) => Node(<spark.Service: void lambda$init$2()>,interfaceinvoke $stack39.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("server interrupted", e#2),501,SinkNode, path: (<spark.Service: void lambda$init$2()>, interfaceinvoke $stack39.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>('server interrupted', e#2), 501)))

