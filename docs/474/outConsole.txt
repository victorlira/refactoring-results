Running soot scenario es-amazon-s3-river;com.github.lbroudoux.elasticsearch.river.s3.river.S3River;indexFile(S3ObjectSummary);2aa45336dcc877155d7df5063071f37a86368271
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/es-amazon-s3-river/2aa45336dcc877155d7df5063071f37a86368271/original-without-dependencies/amazon-s3-river-1.4.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,49200
Time to perform Confluence 1 Inter 0,87400
Configure Soot Confluence 2 Inter 0,20600
Time to perform Confluence 2 Inter 0,45400
Visited methods: 86
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack57 = virtualinvoke summary.<com.amazonaws.services.s3.model.S3ObjectSummary: java.lang.String getKey()>(),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack57 = virtualinvoke summary.<com.amazonaws.services.s3.model.S3ObjectSummary: java.lang.String getKey()>(), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack4 = virtualinvoke $stack3.<com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(java.lang.String,java.lang.String)>($stack2, key),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530) => (<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>, $stack4 = virtualinvoke $stack3.<com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(java.lang.String,java.lang.String)>($stack2, key), 119)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack5 = virtualinvoke $stack4.<com.amazonaws.services.s3.model.ObjectMetadata: java.util.Map getUserMetadata()>(),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530) => (<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>, $stack5 = virtualinvoke $stack4.<com.amazonaws.services.s3.model.ObjectMetadata: java.util.Map getUserMetadata()>(), 119)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($stack5),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", $stack58),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', $stack58), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>("file"),531,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>('file'), 531)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("_name", $stack66),532,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('_name', $stack66), 532)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("title", $stack73),533,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('title', $stack73), 533)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb),578,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb), 578))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb),578,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb), 578)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($stack5),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", $stack58),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', $stack58), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>("file"),531,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>('file'), 531)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("_name", $stack66),532,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('_name', $stack66), 532)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("title", $stack73),533,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('title', $stack73), 533)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78),524,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78),524,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,fileMetadata = tmp$1744273262,514,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, fileMetadata = tmp$1744273262, 514)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(),576,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(), 576))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(),576,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(), 576)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack57 = virtualinvoke summary.<com.amazonaws.services.s3.model.S3ObjectSummary: java.lang.String getKey()>(),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack57 = virtualinvoke summary.<com.amazonaws.services.s3.model.S3ObjectSummary: java.lang.String getKey()>(), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack4 = virtualinvoke $stack3.<com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(java.lang.String,java.lang.String)>($stack2, key),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530) => (<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>, $stack4 = virtualinvoke $stack3.<com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(java.lang.String,java.lang.String)>($stack2, key), 119)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack5 = virtualinvoke $stack4.<com.amazonaws.services.s3.model.ObjectMetadata: java.util.Map getUserMetadata()>(),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530) => (<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>, $stack5 = virtualinvoke $stack4.<com.amazonaws.services.s3.model.ObjectMetadata: java.util.Map getUserMetadata()>(), 119)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($stack5),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", $stack58),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', $stack58), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>("file"),531,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>('file'), 531)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("_name", $stack66),532,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('_name', $stack66), 532)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("title", $stack73),533,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('title', $stack73), 533)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb),578,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb), 578))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb),578,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb), 578)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,fileMetadata = tmp$1744273262,514,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, fileMetadata = tmp$1744273262, 514)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(),576,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(), 576))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(),576,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(), 576)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78),524,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78),524,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,fileMetadata = tmp$1744273262,514,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, fileMetadata = tmp$1744273262, 514)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($stack5),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", $stack58),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', $stack58), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>("file"),531,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>('file'), 531)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("_name", $stack66),532,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('_name', $stack66), 532)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("title", $stack73),533,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('title', $stack73), 533)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78),524,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78),524,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,fileMetadata = tmp$1744273262,514,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, fileMetadata = tmp$1744273262, 514)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,fileMetadata = tmp$1744273262,514,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, fileMetadata = tmp$1744273262, 514)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,fileMetadata = tmp$1744273262,514,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, fileMetadata = tmp$1744273262, 514)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(),576,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(), 576))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(),576,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(), 576)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack57 = virtualinvoke summary.<com.amazonaws.services.s3.model.S3ObjectSummary: java.lang.String getKey()>(),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack57 = virtualinvoke summary.<com.amazonaws.services.s3.model.S3ObjectSummary: java.lang.String getKey()>(), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,key := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack4 = virtualinvoke $stack3.<com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(java.lang.String,java.lang.String)>($stack2, key),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530) => (<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>, $stack4 = virtualinvoke $stack3.<com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(java.lang.String,java.lang.String)>($stack2, key), 119)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack5 = virtualinvoke $stack4.<com.amazonaws.services.s3.model.ObjectMetadata: java.util.Map getUserMetadata()>(),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530) => (<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>, $stack5 = virtualinvoke $stack4.<com.amazonaws.services.s3.model.ObjectMetadata: java.util.Map getUserMetadata()>(), 119)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($stack5),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", $stack58),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', $stack58), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>("file"),531,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>('file'), 531)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("_name", $stack66),532,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('_name', $stack66), 532)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("title", $stack73),533,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('title', $stack73), 533)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb),578,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb), 578))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),537,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,xb := @parameter3: org.elasticsearch.common.xcontent.XContentBuilder,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>,$stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb),578,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb), 578)), SOURCE=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>,$stack6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($stack5),119,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", $stack58),530,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack59 = virtualinvoke $stack53.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', $stack58), 530)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>("file"),531,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack60 = virtualinvoke $stack59.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder startObject(java.lang.String)>('file'), 531)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("_name", $stack66),532,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack67 = virtualinvoke $stack60.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('_name', $stack66), 532)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("title", $stack73),533,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack74 = virtualinvoke $stack67.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('title', $stack73), 533)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536))
SINK=>BASE: Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars),515,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(),536,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536))]
Confluence interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Confluence flows from execution of lines 534 and 515 to line 537, defined in $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent) and parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars) and used in $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>()
Caused by line 534 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)
Caused by line 515 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)
Caused by line 537 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack78 = virtualinvoke $stack77.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 537)
Confluence interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Confluence flows from execution of lines 530 and 509 to line 524, defined in $stack57 = virtualinvoke summary.<com.amazonaws.services.s3.model.S3ObjectSummary: java.lang.String getKey()>() and $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>() and used in specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78)
Caused by line 530 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack57 = virtualinvoke summary.<com.amazonaws.services.s3.model.S3ObjectSummary: java.lang.String getKey()>(), 530)
Caused by line 509 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)
Caused by line 524 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack16 = virtualinvoke $stack15.<org.elasticsearch.action.index.IndexRequestBuilder: org.elasticsearch.action.index.IndexRequestBuilder setSource(org.elasticsearch.common.xcontent.XContentBuilder)>(xb), 578)
Confluence interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Confluence flows from execution of lines 530 and 515 to line 536, defined in $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57) and parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars) and used in $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>()
Caused by line 530 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack58 = virtualinvoke $stack56.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: java.util.Map getS3UserMetadata(java.lang.String)>($stack57), 530)
Caused by line 515 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)
Caused by line 536 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack77 = virtualinvoke $stack76.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder endObject()>(), 536)
Confluence interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Confluence flows from execution of lines 534 and 510 to line 524, defined in $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent) and indexedChars = (int) $stack88 and used in specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78)
Caused by line 534 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)
Caused by line 510 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)
Caused by line 524 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524)
Confluence interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Confluence flows from execution of lines 514 and 515 to line 524, defined in fileMetadata = tmp$1744273262 and parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars) and used in specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78)
Caused by line 514 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, fileMetadata = tmp$1744273262, 514)
Caused by line 515 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)
Caused by line 524 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, specialinvoke this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>($stack32, $stack34, fileId, $stack78), 524) => (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: void esIndex(java.lang.String,java.lang.String,java.lang.String,org.elasticsearch.common.xcontent.XContentBuilder)>, $stack25 = virtualinvoke xb.<org.elasticsearch.common.xcontent.XContentBuilder: java.lang.String string()>(), 576)
Confluence interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Confluence flows from execution of lines 514 and 515 to line 515, defined in fileMetadata = tmp$1744273262 and parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars) and used in parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars)
Caused by line 514 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, fileMetadata = tmp$1744273262, 514)
Caused by line 515 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)
Caused by line 515 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1827883912, fileMetadata, indexedChars), 515)
 Analysis results
----------------------------
 Number of conflicts: 18
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/es-amazon-s3-river/2aa45336dcc877155d7df5063071f37a86368271/original-without-dependencies/amazon-s3-river-1.4.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,60800
Runtime: 0.014s
Time to perform OA Inter 0,66100
OA Inter Visited methods: 18
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/es-amazon-s3-river/2aa45336dcc877155d7df5063071f37a86368271/original-without-dependencies/amazon-s3-river-1.4.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,52100
Time to perform DFP Inter 0,68600
Depth limit: 5
CONFLICTS: DF interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Data flows from execution of line 501 to 510, defined in $stack1 = x0.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River: com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector s3> and propagated in $stack83 = lengthof fileContent
Caused by line 501 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack103 = staticinvoke <com.github.lbroudoux.elasticsearch.river.s3.river.S3River: com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector access$3700(com.github.lbroudoux.elasticsearch.river.s3.river.S3River)>($stack102), 501)
Caused by line 510 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack83 = lengthof fileContent, 510)
[List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River: com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector access$3700(com.github.lbroudoux.elasticsearch.river.s3.river.S3River)>,$stack1 = x0.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River: com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector s3>,59,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack103 = staticinvoke <com.github.lbroudoux.elasticsearch.river.s3.river.S3River: com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector access$3700(com.github.lbroudoux.elasticsearch.river.s3.river.S3River)>($stack102), 501)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack20 = staticinvoke <com.github.lbroudoux.elasticsearch.river.s3.river.S3River: com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector access$3700(com.github.lbroudoux.elasticsearch.river.s3.river.S3River)>($stack19),503,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack20 = staticinvoke <com.github.lbroudoux.elasticsearch.river.s3.river.S3River: com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector access$3700(com.github.lbroudoux.elasticsearch.river.s3.river.S3River)>($stack19), 503)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,fileContent = virtualinvoke $stack20.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: byte[] getContent(com.amazonaws.services.s3.model.S3ObjectSummary)>(summary),503,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, fileContent = virtualinvoke $stack20.<com.github.lbroudoux.elasticsearch.river.s3.connector.S3Connector: byte[] getContent(com.amazonaws.services.s3.model.S3ObjectSummary)>(summary), 503)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack83 = lengthof fileContent,510,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack83 = lengthof fileContent, 510)))]
Visited methods: 43
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/es-amazon-s3-river/2aa45336dcc877155d7df5063071f37a86368271/original-without-dependencies/amazon-s3-river-1.4.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,47200
Time to perform DFP Inter 0,72600
Depth limit: 5
CONFLICTS: DF interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Data flows from execution of line 509 to 535, defined in $stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio> and propagated in $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap)
Caused by line 509 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)
Caused by line 535 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)
DF interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Data flows from execution of line 510 to 534, defined in $stack84 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition feedDefinition> and propagated in $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent)
Caused by line 510 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack84 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition feedDefinition>, 510)
Caused by line 534 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)
DF interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Data flows from execution of line 515 to 534, defined in indexedChars = 100000 and propagated in $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent)
Caused by line 515 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)
Caused by line 534 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)
DF interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Data flows from execution of line 509 to 534, defined in $stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio> and propagated in $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent)
Caused by line 509 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)
Caused by line 534 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)
DF interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Data flows from execution of line 515 to 535, defined in indexedChars = 100000 and propagated in $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap)
Caused by line 515 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)
Caused by line 535 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)
DF interference in <com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>
Data flows from execution of line 510 to 535, defined in $stack84 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition feedDefinition> and propagated in $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap)
Caused by line 510 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack84 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition feedDefinition>, 510)
Caused by line 535 flow: path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535)
[List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack84 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition feedDefinition>,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack84 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition feedDefinition>, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,this := @this: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack84 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition feedDefinition>,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack84 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition feedDefinition>, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,this := @this: com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition,-1,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>,$stack1 = this.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double indexedCharsRatio>,121,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$490766432, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)))]
Visited methods: 43
 Analysis results
----------------------------
 Number of conflicts: 6
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/es-amazon-s3-river/2aa45336dcc877155d7df5063071f37a86368271/original-without-dependencies/amazon-s3-river-1.4.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,47200
Time to perform PDG 0,49800
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/es-amazon-s3-river/2aa45336dcc877155d7df5063071f37a86368271/original-without-dependencies/amazon-s3-river-1.4.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,49100
Time to perform PDG 0,58100
CONFLICTS: [List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack85 = (double) $stack83,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack85 = (double) $stack83, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),509,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack24 = $stack23 cmpl 0.0,509,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack24 = $stack23 cmpl 0.0, 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,if $stack24 <= 0 goto tmp$1744273262 = new org.apache.tika.metadata.Metadata,509,SourceNode, path: ) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack85 = (double) $stack83,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack85 = (double) $stack83, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),509,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack23 = virtualinvoke $stack22.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack24 = $stack23 cmpl 0.0,509,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack24 = $stack23 cmpl 0.0, 509)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,if $stack24 <= 0 goto tmp$1744273262 = new org.apache.tika.metadata.Metadata,509,SourceNode, path: ) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack86 = virtualinvoke $stack84.<com.github.lbroudoux.elasticsearch.river.s3.river.S3RiverFeedDefinition: double getIndexedCharsRatio()>(), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack87 = $stack85 * $stack86,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack87 = $stack85 * $stack86, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87),510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack88 = staticinvoke <java.lang.Math: long round(double)>($stack87), 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = (int) $stack88,510,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, indexedChars = (int) $stack88, 510)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>("metadata", fileMetadataMap),535,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack76 = virtualinvoke $stack75.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.util.Map)>('metadata', fileMetadataMap), 535))), List(Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,indexedChars = 100000,508,SourceNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars),515,SimpleNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, parsedContent = virtualinvoke $stack26.<org.apache.tika.Tika: java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int)>(tmp$1016156941, fileMetadata, indexedChars), 515)) => Node(<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>,$stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>("file", parsedContent),534,SinkNode, path: (<com.github.lbroudoux.elasticsearch.river.s3.river.S3River$S3Scanner: java.lang.String indexFile(com.amazonaws.services.s3.model.S3ObjectSummary)>, $stack75 = virtualinvoke $stack74.<org.elasticsearch.common.xcontent.XContentBuilder: org.elasticsearch.common.xcontent.XContentBuilder field(java.lang.String,java.lang.String)>('file', parsedContent), 534)))]
 Analysis results
----------------------------
 Number of conflicts: 6
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
