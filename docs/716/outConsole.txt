Running soot scenario redpen;org.unigram.docvalidator.Main;main(String[]);ea815d7ad42ed88e93bc78aac909f030439f77d3
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/ea815d7ad42ed88e93bc78aac909f030439f77d3/original-without-dependencies/document-validator-app-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,48000
Time to perform Confluence 1 Inter 0,71700
Configure Soot Confluence 2 Inter 0,11800
Time to perform Confluence 2 Inter 0,22700
Visited methods: 38
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/ea815d7ad42ed88e93bc78aac909f030439f77d3/original-without-dependencies/document-validator-app-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,52800
Runtime: 0.048s
Time to perform OA Inter 0,69200
OA Inter Visited methods: 104
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/ea815d7ad42ed88e93bc78aac909f030439f77d3/original-without-dependencies/document-validator-app-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,50500
Time to perform DFP Inter 0,66000
Depth limit: 5
CONFLICTS: DF interference in <org.unigram.docvalidator.Main: void main(java.lang.String[])>
Data flows from execution of line 130 to 137, defined in distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56) and propagated in virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection)
Caused by line 130 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56), 130)
Caused by line 137 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)
DF interference in <org.unigram.docvalidator.Main: void main(java.lang.String[])>
Data flows from execution of line 123 to 137, defined in documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType) and propagated in virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection)
Caused by line 123 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)
Caused by line 137 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)
DF interference in <org.unigram.docvalidator.Main: void main(java.lang.String[])>
Data flows from execution of line 119 to 137, defined in $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>() and propagated in virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection)
Caused by line 119 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)
Caused by line 137 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)
DF interference in <org.unigram.docvalidator.Main: void main(java.lang.String[])>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.unigram.docvalidator.Main: void main(java.lang.String[])>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.unigram.docvalidator.Main: void main(java.lang.String[])>
Data flows from execution of line 120 to 137, defined in outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53) and propagated in virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection)
Caused by line 120 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53), 120)
Caused by line 137 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)
DF interference in <org.unigram.docvalidator.Main: void main(java.lang.String[])>
Data flows from execution of line 134 to 137, defined in $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor) and propagated in virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection)
Caused by line 134 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)
Caused by line 137 flow: path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)
[List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56),130,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56), 130)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: )), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53),120,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53), 120)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56),130,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56), 130)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ))]
Visited methods: 19
 Analysis results
----------------------------
 Number of conflicts: 7
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/ea815d7ad42ed88e93bc78aac909f030439f77d3/original-without-dependencies/document-validator-app-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,37000
Time to perform DFP Inter 0,49800
Depth limit: 5
CONFLICTS: []
Visited methods: 19
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/ea815d7ad42ed88e93bc78aac909f030439f77d3/original-without-dependencies/document-validator-app-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,38600
Time to perform PDG 0,54000
CONFLICTS: [List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack53 = virtualinvoke resultFormat.<java.lang.String: java.lang.String toUpperCase()>(),120,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack53 = virtualinvoke resultFormat.<java.lang.String: java.lang.String toUpperCase()>(), 120)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53),120,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53), 120)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56),130,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56), 130)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56),130,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56), 130)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: )), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack63 = <org.unigram.docvalidator.Main: org.slf4j.Logger LOG>,126,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>('Failed to create a DocumentCollection object'), 126)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>("Failed to create a DocumentCollection object"),126,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>('Failed to create a DocumentCollection object'), 126))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack63 = <org.unigram.docvalidator.Main: org.slf4j.Logger LOG>,126,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>('Failed to create a DocumentCollection object'), 126)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>("Failed to create a DocumentCollection object"),126,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>('Failed to create a DocumentCollection object'), 126))), List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 9
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/ea815d7ad42ed88e93bc78aac909f030439f77d3/original-without-dependencies/document-validator-app-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,48500
Time to perform PDG 0,72000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
