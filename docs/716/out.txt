List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56),130,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56), 130)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53),120,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53), 120)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56),130,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56), 130)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack53 = virtualinvoke resultFormat.<java.lang.String: java.lang.String toUpperCase()>(),120,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack53 = virtualinvoke resultFormat.<java.lang.String: java.lang.String toUpperCase()>(), 120)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53),120,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, outputFormat = staticinvoke <org.unigram.docvalidator.util.Formatter$Type: org.unigram.docvalidator.util.Formatter$Type valueOf(java.lang.String)>($stack53), 120)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56),130,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56), 130)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56),130,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, distributor = staticinvoke <org.unigram.docvalidator.util.ResultDistributorFactory: org.unigram.docvalidator.util.ResultDistributor createDistributor(org.unigram.docvalidator.util.Formatter$Type,java.io.OutputStream)>(outputFormat, $stack56), 130)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor),134,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack60 = virtualinvoke $stack59.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator$Builder setResultDistributor(org.unigram.docvalidator.util.ResultDistributor)>(distributor), 134)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(),135,SimpleNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, validator = virtualinvoke $stack60.<org.unigram.docvalidator.DocumentValidator$Builder: org.unigram.docvalidator.DocumentValidator build()>(), 135)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection),137,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, virtualinvoke validator.<org.unigram.docvalidator.DocumentValidator: java.util.List check(org.unigram.docvalidator.model.DocumentCollection)>(documentCollection), 137)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack63 = <org.unigram.docvalidator.Main: org.slf4j.Logger LOG>,126,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>('Failed to create a DocumentCollection object'), 126)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>("Failed to create a DocumentCollection object"),126,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>('Failed to create a DocumentCollection object'), 126)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, $stack51 = virtualinvoke e#3.<java.lang.String: java.lang.String toUpperCase()>(), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51),119,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, parserType = staticinvoke <org.unigram.docvalidator.parser.Parser$Type: org.unigram.docvalidator.parser.Parser$Type valueOf(java.lang.String)>($stack51), 119)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,$stack63 = <org.unigram.docvalidator.Main: org.slf4j.Logger LOG>,126,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>('Failed to create a DocumentCollection object'), 126)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>("Failed to create a DocumentCollection object"),126,SinkNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, interfaceinvoke $stack63.<org.slf4j.Logger: void error(java.lang.String)>('Failed to create a DocumentCollection object'), 126)))

List(Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType),123,SourceNode, path: (<org.unigram.docvalidator.Main: void main(java.lang.String[])>, documentCollection = staticinvoke <org.unigram.docvalidator.DocumentGenerator: org.unigram.docvalidator.model.DocumentCollection generate(java.lang.String[],org.unigram.docvalidator.util.DVResource,org.unigram.docvalidator.parser.Parser$Type)>(inputFileNames, conf, parserType), 123)) => Node(<org.unigram.docvalidator.Main: void main(java.lang.String[])>,if documentCollection != null goto $stack56 = <java.lang.System: java.io.PrintStream out>,125,SinkNode, path: ))

