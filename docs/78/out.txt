List(Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack16 = this.<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: byte[][] data>,282,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack16 = this.<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: byte[][] data>, 282)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,block = $stack16[$stack15],282,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, block = $stack16[$stack15], 282)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta),294,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta), 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack34,294,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, pos = pos + $stack34, 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack46,316,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta), 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if pos >= $stack31 goto $stack27 = lengthof block,326,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack40 = (java.lang.Long) $stack39,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack40 = (java.lang.Long) $stack39, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack41 = virtualinvoke $stack40.<java.lang.Long: long longValue()>(),300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack41 = virtualinvoke $stack40.<java.lang.Long: long longValue()>(), 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack43 = $stack41 cmp $stack42,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack43 = $stack41 cmp $stack42, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if $stack43 < 0 goto idInBlock#6 = 0,300,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack44 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared),304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack44 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared), 304)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,cshared = cshared + $stack44,304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack42 = (long) cshared, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if cshared != $stack45 goto $stack46 = slen + 1,306,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,idInBlock#6 = idInBlock#6 + 1,317,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, idInBlock#6 = idInBlock#6 + 1, 317)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,return idInBlock#6,307,SinkNode, path: ))

List(Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack21 = this.<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: long[] posFirst>,283,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack21 = this.<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: long[] posFirst>, 283)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack22 = $stack21[$stack20],283,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack22 = $stack21[$stack20], 283)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack23 = $stack18 - $stack22,283,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack23 = $stack18 - $stack22, 283)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = (int) $stack23,283,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, pos = (int) $stack23, 283)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack25,288,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, pos = pos + $stack25, 288)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta),294,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta), 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack34,294,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, pos = pos + $stack34, 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack46,316,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta), 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if pos >= $stack31 goto $stack27 = lengthof block,326,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack40 = (java.lang.Long) $stack39,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack40 = (java.lang.Long) $stack39, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack41 = virtualinvoke $stack40.<java.lang.Long: long longValue()>(),300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack41 = virtualinvoke $stack40.<java.lang.Long: long longValue()>(), 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack43 = $stack41 cmp $stack42,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack43 = $stack41 cmp $stack42, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if $stack43 < 0 goto idInBlock#6 = 0,300,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack44 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared),304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack44 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared), 304)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,cshared = cshared + $stack44,304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack42 = (long) cshared, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if cshared != $stack45 goto $stack46 = slen + 1,306,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,idInBlock#6 = idInBlock#6 + 1,317,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, idInBlock#6 = idInBlock#6 + 1, 317)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,return idInBlock#6,307,SinkNode, path: ))

