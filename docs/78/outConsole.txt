Running soot scenario hdt-java;org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig;locateInBlock(int, CharSequence);9dc6b033f1d70837496faf8fed9ead5c4ccfd0cf
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/9dc6b033f1d70837496faf8fed9ead5c4ccfd0cf/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,65300
Time to perform Confluence 1 Inter 0,55700
Configure Soot Confluence 2 Inter 0,18900
Time to perform Confluence 2 Inter 0,40500
Visited methods: 40
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/9dc6b033f1d70837496faf8fed9ead5c4ccfd0cf/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,71800
Runtime: 0.019s
Time to perform OA Inter 0,79300
OA Inter Visited methods: 44
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/9dc6b033f1d70837496faf8fed9ead5c4ccfd0cf/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,44600
Time to perform DFP Inter 0,53100
Depth limit: 5
CONFLICTS: []
Visited methods: 20
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/9dc6b033f1d70837496faf8fed9ead5c4ccfd0cf/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,55500
Time to perform DFP Inter 0,59300
Depth limit: 5
CONFLICTS: []
Visited methods: 20
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/9dc6b033f1d70837496faf8fed9ead5c4ccfd0cf/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,44100
Time to perform PDG 0,41900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdt-java/9dc6b033f1d70837496faf8fed9ead5c4ccfd0cf/original-without-dependencies/hdt-java-core-2.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,61800
Time to perform PDG 0,52800
CONFLICTS: [List(Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack16 = this.<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: byte[][] data>,282,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack16 = this.<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: byte[][] data>, 282)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,block = $stack16[$stack15],282,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, block = $stack16[$stack15], 282)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta),294,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta), 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack34,294,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, pos = pos + $stack34, 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack46,316,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta), 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if pos >= $stack31 goto $stack27 = lengthof block,326,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack40 = (java.lang.Long) $stack39,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack40 = (java.lang.Long) $stack39, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack41 = virtualinvoke $stack40.<java.lang.Long: long longValue()>(),300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack41 = virtualinvoke $stack40.<java.lang.Long: long longValue()>(), 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack43 = $stack41 cmp $stack42,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack43 = $stack41 cmp $stack42, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if $stack43 < 0 goto idInBlock#6 = 0,300,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack44 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared),304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack44 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared), 304)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,cshared = cshared + $stack44,304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack42 = (long) cshared, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if cshared != $stack45 goto $stack46 = slen + 1,306,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,idInBlock#6 = idInBlock#6 + 1,317,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, idInBlock#6 = idInBlock#6 + 1, 317)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,return idInBlock#6,307,SinkNode, path: )), List(Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack21 = this.<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: long[] posFirst>,283,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack21 = this.<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: long[] posFirst>, 283)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack22 = $stack21[$stack20],283,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack22 = $stack21[$stack20], 283)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack23 = $stack18 - $stack22,283,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack23 = $stack18 - $stack22, 283)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = (int) $stack23,283,SourceNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, pos = (int) $stack23, 283)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack25,288,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, pos = pos + $stack25, 288)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta),294,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta), 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack34,294,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, pos = pos + $stack34, 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,pos = pos + $stack46,316,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack34 = staticinvoke <org.rdfhdt.hdt.compact.integer.VByte: int decode(byte[],int,org.rdfhdt.hdt.util.Mutable)>(block, pos, delta), 294)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if pos >= $stack31 goto $stack27 = lengthof block,326,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack40 = (java.lang.Long) $stack39,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack40 = (java.lang.Long) $stack39, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack41 = virtualinvoke $stack40.<java.lang.Long: long longValue()>(),300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack41 = virtualinvoke $stack40.<java.lang.Long: long longValue()>(), 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack43 = $stack41 cmp $stack42,300,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack43 = $stack41 cmp $stack42, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if $stack43 < 0 goto idInBlock#6 = 0,300,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,$stack44 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared),304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack44 = staticinvoke <org.rdfhdt.hdt.util.string.ByteStringUtil: int longestCommonPrefix(java.lang.CharSequence,java.lang.CharSequence,int)>(tempString, str, cshared), 304)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,cshared = cshared + $stack44,304,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, $stack42 = (long) cshared, 300)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,if cshared != $stack45 goto $stack46 = slen + 1,306,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,idInBlock#6 = idInBlock#6 + 1,317,SimpleNode, path: (<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>, idInBlock#6 = idInBlock#6 + 1, 317)) => Node(<org.rdfhdt.hdt.dictionary.impl.section.PFCDictionarySectionBig: int locateInBlock(long,java.lang.CharSequence)>,return idInBlock#6,307,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
