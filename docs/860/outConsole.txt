Running soot scenario uglifyjs-maven-plugin;net.tqh.plugins.UglifyMojo;execute();c77d67ab1de02ab8fca05ea264d59a50ef71cbcf
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/uglifyjs-maven-plugin/c77d67ab1de02ab8fca05ea264d59a50ef71cbcf/original-without-dependencies/uglifyjs-maven-plugin-1.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,46600
Time to perform Confluence 1 Inter 0,62500
Configure Soot Confluence 2 Inter 0,23000
Time to perform Confluence 2 Inter 0,17700
Visited methods: 22
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,out = $stack17,84,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, out = $stack17, 84)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,virtualinvoke out.<java.io.OutputStreamWriter: void write(java.lang.String)>(output),85,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, virtualinvoke out.<java.io.OutputStreamWriter: void write(java.lang.String)>(output), 85))
SINK=>BASE: Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1),77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(),81,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(), 81)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),95,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 95)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFile = (java.io.File) $stack13,95,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFile = (java.io.File) $stack13, 95)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,output = virtualinvoke $stack14.<net.tqh.plugins.UglifyMojo$JavascriptContext: java.lang.String executeCmdOnFile(java.lang.String,java.io.File)>("uglifyJavascript", jsFile),83,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, output = virtualinvoke $stack14.<net.tqh.plugins.UglifyMojo$JavascriptContext: java.lang.String executeCmdOnFile(java.lang.String,java.io.File)>('uglifyJavascript', jsFile), 83)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,virtualinvoke out.<java.io.OutputStreamWriter: void write(java.lang.String)>(output),85,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, virtualinvoke out.<java.io.OutputStreamWriter: void write(java.lang.String)>(output), 85)), SOURCE=>BASE: Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,relativePath = virtualinvoke $stack8.<java.net.URI: java.lang.String getPath()>(),99,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, relativePath = virtualinvoke $stack8.<java.net.URI: java.lang.String getPath()>(), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath),100,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath), 100))
SINK=>BASE: Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1),77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(),81,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(), 81)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),95,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 95)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFile = (java.io.File) $stack13,95,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFile = (java.io.File) $stack13, 95)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,inputFile := @parameter0: java.io.File,-1,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack6 = virtualinvoke inputFile.<java.io.File: java.io.File getParentFile()>(),99,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack6 = virtualinvoke inputFile.<java.io.File: java.io.File getParentFile()>(), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack7 = virtualinvoke $stack6.<java.io.File: java.net.URI toURI()>(),99,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack7 = virtualinvoke $stack6.<java.io.File: java.net.URI toURI()>(), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack8 = virtualinvoke $stack5.<java.net.URI: java.net.URI relativize(java.net.URI)>($stack7),99,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack8 = virtualinvoke $stack5.<java.net.URI: java.net.URI relativize(java.net.URI)>($stack7), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,relativePath = virtualinvoke $stack8.<java.net.URI: java.lang.String getPath()>(),99,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, relativePath = virtualinvoke $stack8.<java.net.URI: java.lang.String getPath()>(), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath),100,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath), 100)), SOURCE=>BASE: Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack11 = this.<net.tqh.plugins.UglifyMojo: java.io.File outputDirectory>,100,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack11 = this.<net.tqh.plugins.UglifyMojo: java.io.File outputDirectory>, 100)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack10 = new java.io.File,100,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath), 100)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,outputBaseDir = $stack10,100,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, outputBaseDir = $stack10, 100)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack13 = new java.io.File,103,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,specialinvoke $stack13.<java.io.File: void <init>(java.io.File,java.lang.String)>(outputBaseDir, $stack14),103,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack13.<java.io.File: void <init>(java.io.File,java.lang.String)>(outputBaseDir, $stack14), 103))
SINK=>BASE: Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1),77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(),81,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(), 81)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),95,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 95)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFile = (java.io.File) $stack13,95,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFile = (java.io.File) $stack13, 95)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,inputFile := @parameter0: java.io.File,-1,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack14 = virtualinvoke inputFile.<java.io.File: java.lang.String getName()>(),103,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack14 = virtualinvoke inputFile.<java.io.File: java.lang.String getName()>(), 103)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,specialinvoke $stack13.<java.io.File: void <init>(java.io.File,java.lang.String)>(outputBaseDir, $stack14),103,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack13.<java.io.File: void <init>(java.io.File,java.lang.String)>(outputBaseDir, $stack14), 103))]
Confluence interference in <net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>
Confluence flows from execution of lines 84 and 77 to line 85, defined in out = $stack17 and jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1) and used in virtualinvoke out.<java.io.OutputStreamWriter: void write(java.lang.String)>(output)
Caused by line 84 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, out = $stack17, 84)
Caused by line 77 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)
Caused by line 85 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, virtualinvoke out.<java.io.OutputStreamWriter: void write(java.lang.String)>(output), 85)
Confluence interference in <net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>
Confluence flows from execution of lines 84 and 77 to line 84, defined in $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile) and jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1) and used in $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile)
Caused by line 84 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, relativePath = virtualinvoke $stack8.<java.net.URI: java.lang.String getPath()>(), 99)
Caused by line 77 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)
Caused by line 84 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath), 100)
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/uglifyjs-maven-plugin/c77d67ab1de02ab8fca05ea264d59a50ef71cbcf/original-without-dependencies/uglifyjs-maven-plugin-1.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,60000
Runtime: 0.012s
Time to perform OA Inter 0,65300
OA Inter Visited methods: 9
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/uglifyjs-maven-plugin/c77d67ab1de02ab8fca05ea264d59a50ef71cbcf/original-without-dependencies/uglifyjs-maven-plugin-1.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,53200
Time to perform DFP Inter 0,44400
Depth limit: 5
CONFLICTS: []
Visited methods: 11
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/uglifyjs-maven-plugin/c77d67ab1de02ab8fca05ea264d59a50ef71cbcf/original-without-dependencies/uglifyjs-maven-plugin-1.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,38700
Time to perform DFP Inter 0,52400
Depth limit: 5
CONFLICTS: DF interference in <net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>
Data flows from execution of line 77 to 84, defined in $stack9 = <net.tqh.plugins.UglifyMojo: java.lang.String[] JS_EXTENSIONS> and propagated in $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile)
Caused by line 77 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)
Caused by line 84 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84)
DF interference in <net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>
Data flows from execution of line 77 to 84, defined in $stack9 = <net.tqh.plugins.UglifyMojo: java.lang.String[] JS_EXTENSIONS> and propagated in specialinvoke $stack13.<java.io.File: void <init>(java.io.File,java.lang.String)>(outputBaseDir, $stack14)
Caused by line 77 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)
Caused by line 84 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack13.<java.io.File: void <init>(java.io.File,java.lang.String)>(outputBaseDir, $stack14), 103)
DF interference in <net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>
Data flows from execution of line 77 to 84, defined in $stack9 = <net.tqh.plugins.UglifyMojo: java.lang.String[] JS_EXTENSIONS> and propagated in $stack7 = virtualinvoke $stack6.<java.io.File: java.net.URI toURI()>()
Caused by line 77 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)
Caused by line 84 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack7 = virtualinvoke $stack6.<java.io.File: java.net.URI toURI()>(), 99)
DF interference in <net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>
Data flows from execution of line 77 to 84, defined in $stack9 = <net.tqh.plugins.UglifyMojo: java.lang.String[] JS_EXTENSIONS> and propagated in specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath)
Caused by line 77 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)
Caused by line 84 flow: path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath), 100)
[List(Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack9 = <net.tqh.plugins.UglifyMojo: java.lang.String[] JS_EXTENSIONS>,77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1),77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(),81,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(), 81)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),95,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 95)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFile = (java.io.File) $stack13,95,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFile = (java.io.File) $stack13, 95)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,inputFile := @parameter0: java.io.File,-1,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack6 = virtualinvoke inputFile.<java.io.File: java.io.File getParentFile()>(),99,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack6 = virtualinvoke inputFile.<java.io.File: java.io.File getParentFile()>(), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack7 = virtualinvoke $stack6.<java.io.File: java.net.URI toURI()>(),99,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack7 = virtualinvoke $stack6.<java.io.File: java.net.URI toURI()>(), 99))), List(Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack9 = <net.tqh.plugins.UglifyMojo: java.lang.String[] JS_EXTENSIONS>,77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1),77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(),81,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(), 81)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),95,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 95)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFile = (java.io.File) $stack13,95,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFile = (java.io.File) $stack13, 95)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,inputFile := @parameter0: java.io.File,-1,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack14 = virtualinvoke inputFile.<java.io.File: java.lang.String getName()>(),103,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack14 = virtualinvoke inputFile.<java.io.File: java.lang.String getName()>(), 103)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,specialinvoke $stack13.<java.io.File: void <init>(java.io.File,java.lang.String)>(outputBaseDir, $stack14),103,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack13.<java.io.File: void <init>(java.io.File,java.lang.String)>(outputBaseDir, $stack14), 103))), List(Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack9 = <net.tqh.plugins.UglifyMojo: java.lang.String[] JS_EXTENSIONS>,77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1),77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(),81,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(), 81)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),95,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 95)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFile = (java.io.File) $stack13,95,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFile = (java.io.File) $stack13, 95)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,inputFile := @parameter0: java.io.File,-1,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack6 = virtualinvoke inputFile.<java.io.File: java.io.File getParentFile()>(),99,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack6 = virtualinvoke inputFile.<java.io.File: java.io.File getParentFile()>(), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack7 = virtualinvoke $stack6.<java.io.File: java.net.URI toURI()>(),99,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack7 = virtualinvoke $stack6.<java.io.File: java.net.URI toURI()>(), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,$stack8 = virtualinvoke $stack5.<java.net.URI: java.net.URI relativize(java.net.URI)>($stack7),99,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, $stack8 = virtualinvoke $stack5.<java.net.URI: java.net.URI relativize(java.net.URI)>($stack7), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,relativePath = virtualinvoke $stack8.<java.net.URI: java.lang.String getPath()>(),99,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, relativePath = virtualinvoke $stack8.<java.net.URI: java.lang.String getPath()>(), 99)) => Node(<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>,specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath),100,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84) => (<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>, specialinvoke $stack10.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, relativePath), 100))), List(Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack9 = <net.tqh.plugins.UglifyMojo: java.lang.String[] JS_EXTENSIONS>,77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1),77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(),81,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(), 81)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(),95,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack13 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>(), 95)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFile = (java.io.File) $stack13,95,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFile = (java.io.File) $stack13, 95)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile),84,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack19 = specialinvoke this.<net.tqh.plugins.UglifyMojo: java.io.File getOutputFile(java.io.File)>(jsFile), 84)))]
Visited methods: 11
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/uglifyjs-maven-plugin/c77d67ab1de02ab8fca05ea264d59a50ef71cbcf/original-without-dependencies/uglifyjs-maven-plugin-1.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,37100
Time to perform PDG 0,40900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/uglifyjs-maven-plugin/c77d67ab1de02ab8fca05ea264d59a50ef71cbcf/original-without-dependencies/uglifyjs-maven-plugin-1.0.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,41500
Time to perform PDG 0,53300
CONFLICTS: [List(Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1),77,SourceNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, jsFiles = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(directory, $stack9, 1), 77)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(),81,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, i$ = interfaceinvoke jsFiles.<java.util.Collection: java.util.Iterator iterator()>(), 81)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack12 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>(),81,SimpleNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack12 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>(), 81)) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,if $stack12 == 0 goto return count,81,SimpleNode, path: ) => Node(<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>,$stack20 = this.<net.tqh.plugins.UglifyMojo: java.lang.String encoding>,84,SinkNode, path: (<net.tqh.plugins.UglifyMojo: int uglify(java.io.File)>, $stack20 = this.<net.tqh.plugins.UglifyMojo: java.lang.String encoding>, 84)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
