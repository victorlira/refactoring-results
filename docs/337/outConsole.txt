Running soot scenario remoting-jmx;org.jboss.remotingjmx.RemotingConnector;internalRemotingConnect(Map<String,?>);de3218ef58ebd3293e2afbe472f5a90f5c33e0e0
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/remoting-jmx/de3218ef58ebd3293e2afbe472f5a90f5c33e0e0/original-without-dependencies/remoting-jmx-3.0.5.CR1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,62900
Time to perform Confluence 1 Inter 1,30900
Configure Soot Confluence 2 Inter 0,20300
Time to perform Confluence 2 Inter 1,13400
Visited methods: 70
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfig = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>("wildfly.config.url"),212,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfig = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>('wildfly.config.url'), 212)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfig = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>("wildfly.config.url"),212,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfig = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>('wildfly.config.url'), 212)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack8 = virtualinvoke l0.<java.lang.String: int length()>(),1161,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack8 = virtualinvoke l0.<java.lang.String: int length()>(), 1161))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack8 = virtualinvoke l0.<java.lang.String: int length()>(),1161,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack8 = virtualinvoke l0.<java.lang.String: int length()>(), 1161)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = null,232,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,credentials = (java.lang.String[]) $stack85,246,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, credentials = (java.lang.String[]) $stack85, 246)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack88 = credentials[1],247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack88 = credentials[1], 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack22 = this.<org.jboss.remotingjmx.RemotingConnector: javax.management.remote.JMXServiceURL serviceUrl>,208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack22 = this.<org.jboss.remotingjmx.RemotingConnector: javax.management.remote.JMXServiceURL serviceUrl>, 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22),208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>,$stack11 = new java.net.URI,111,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22),208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", l2),1186,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0X', l2), 1186))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", l2),1186,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0X', l2), 1186)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,builder = staticinvoke <org.xnio.OptionMap: org.xnio.OptionMap$Builder builder()>(),283,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268) => (<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>, builder = staticinvoke <org.xnio.OptionMap: org.xnio.OptionMap$Builder builder()>(), 283)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack21 = virtualinvoke builder.<org.xnio.OptionMap$Builder: org.xnio.OptionMap getMap()>(),298,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = (java.net.URI) authConfig,216,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = (java.net.URI) authConfig, 216)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack6),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,credentials = (java.lang.String[]) $stack85,246,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, credentials = (java.lang.String[]) $stack85, 246)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack88 = credentials[1],247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack88 = credentials[1], 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack33 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, $stack32),2368,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack33 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, $stack32), 2368))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack31 = l0.<java.lang.String: char[] value>,2368,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack31 = l0.<java.lang.String: char[] value>, 2368)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack32 = lengthof $stack31,2368,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack32 = lengthof $stack31, 2368)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack22 = this.<org.jboss.remotingjmx.RemotingConnector: javax.management.remote.JMXServiceURL serviceUrl>,208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack22 = this.<org.jboss.remotingjmx.RemotingConnector: javax.management.remote.JMXServiceURL serviceUrl>, 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22),208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack11 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("-", l2),1185,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack11 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('-', l2), 1185))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack26 = virtualinvoke l0.<java.lang.String: int length()>(),1185,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack26 = virtualinvoke l0.<java.lang.String: int length()>(), 1185)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack21 = virtualinvoke builder.<org.xnio.OptionMap$Builder: org.xnio.OptionMap getMap()>(),298,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack27.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: org.wildfly.security.auth.client.AuthenticationConfiguration getAuthenticationConfiguration(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),230,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack27.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: org.wildfly.security.auth.client.AuthenticationConfiguration getAuthenticationConfiguration(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 230)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack8 = virtualinvoke l0.<java.lang.String: int length()>(),1161,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack8 = virtualinvoke l0.<java.lang.String: int length()>(), 1161))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack8 = virtualinvoke l0.<java.lang.String: int length()>(),1161,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack8 = virtualinvoke l0.<java.lang.String: int length()>(), 1161)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l2),1172,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0x', l2), 1172))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l2),1172,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0x', l2), 1172)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack66 = l0.<java.lang.String: char[] value>,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack66 = l0.<java.lang.String: char[] value>, 2357)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack67 = lengthof $stack66,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack67 = lengthof $stack66, 2357)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,credentials = (java.lang.String[]) $stack85,246,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, credentials = (java.lang.String[]) $stack85, 246)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack88 = credentials[1],247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack88 = credentials[1], 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),1163,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 1163))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),1163,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 1163)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l2),1180,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0', l2), 1180))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l2),1180,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0', l2), 1180)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack18 = l4,1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack18 = l4, 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack39 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack39 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1199)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39),1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = null,232,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack32 = virtualinvoke $stack31.<java.lang.Class: java.lang.String getName()>(),241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack32 = virtualinvoke $stack31.<java.lang.Class: java.lang.String getName()>(), 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack33 = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack32),241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack33 = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack32), 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#9 = (javax.security.auth.callback.CallbackHandler) $stack33,241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#9 = (javax.security.auth.callback.CallbackHandler) $stack33, 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9),243,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9), 243)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack21 = virtualinvoke builder.<org.xnio.OptionMap$Builder: org.xnio.OptionMap getMap()>(),298,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>,$stack11 = new java.net.URI,111,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22),208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,builder = staticinvoke <org.xnio.OptionMap: org.xnio.OptionMap$Builder builder()>(),283,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268) => (<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>, builder = staticinvoke <org.xnio.OptionMap: org.xnio.OptionMap$Builder builder()>(), 283)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack21 = virtualinvoke builder.<org.xnio.OptionMap$Builder: org.xnio.OptionMap getMap()>(),298,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack66 = l0.<java.lang.String: char[] value>,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack66 = l0.<java.lang.String: char[] value>, 2357)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack67 = lengthof $stack66,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack67 = lengthof $stack66, 2357))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack66 = l0.<java.lang.String: char[] value>,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack66 = l0.<java.lang.String: char[] value>, 2357)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack67 = lengthof $stack66,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack67 = lengthof $stack66, 2357)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfig = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>("wildfly.config.url"),212,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfig = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>('wildfly.config.url'), 212)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", l2),1186,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0X', l2), 1186))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", l2),1186,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0X', l2), 1186)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l2),1180,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0', l2), 1180))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l2),1180,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0', l2), 1180)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack88 = credentials[1],247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack88 = credentials[1], 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack18 = l4,1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack18 = l4, 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack39 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack39 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1199)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39),1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l2),1176,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('#', l2), 1176))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l2),1176,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('#', l2), 1176)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = staticinvoke <org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext captureCurrent()>(),222,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = staticinvoke <org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext captureCurrent()>(), 222)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack21 = virtualinvoke builder.<org.xnio.OptionMap$Builder: org.xnio.OptionMap getMap()>(),298,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack6 = l0.<java.lang.String: char[] value>,1546,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, $stack6 = l0.<java.lang.String: char[] value>, 1546)) => Node(<java.lang.String: int indexOf(int,int)>,l3 = lengthof $stack6,1546,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, l3 = lengthof $stack6, 1546))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack6 = l0.<java.lang.String: char[] value>,1546,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, $stack6 = l0.<java.lang.String: char[] value>, 1546)) => Node(<java.lang.String: int indexOf(int,int)>,l3 = lengthof $stack6,1546,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, l3 = lengthof $stack6, 1546)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack32 = virtualinvoke $stack31.<java.lang.Class: java.lang.String getName()>(),241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack32 = virtualinvoke $stack31.<java.lang.Class: java.lang.String getName()>(), 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack33 = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack32),241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack33 = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack32), 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#9 = (javax.security.auth.callback.CallbackHandler) $stack33,241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#9 = (javax.security.auth.callback.CallbackHandler) $stack33, 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9),243,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9), 243)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l2),1172,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0x', l2), 1172))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l2),1172,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0x', l2), 1172)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l2),1176,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('#', l2), 1176))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l2),1176,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('#', l2), 1176)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack21 = virtualinvoke builder.<org.xnio.OptionMap$Builder: org.xnio.OptionMap getMap()>(),298,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack88 = credentials[1],247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack88 = credentials[1], 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfig = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>("wildfly.config.url"),212,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfig = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>('wildfly.config.url'), 212)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l2),1172,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0x', l2), 1172))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l2),1172,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0x', l2), 1172)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: int indexOf(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, l5 = l2, 1558)) => Node(<java.lang.String: int indexOf(int,int)>,l5 = l2,1558,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: int indexOf(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, l5 = l2, 1558)) => Node(<java.lang.String: int indexOf(int,int)>,l5 = l2,1558,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,l5 = l5 + 1,1558,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l2),1180,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0', l2), 1180))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l2),1180,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0', l2), 1180)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack37 = <org.wildfly.security.auth.client.MatchRule: org.wildfly.security.auth.client.MatchRule ALL>,265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = staticinvoke <org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext captureCurrent()>(),222,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = staticinvoke <org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext captureCurrent()>(), 222)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),1163,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 1163))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),1163,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 1163)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,credentials = (java.lang.String[]) $stack85,246,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, credentials = (java.lang.String[]) $stack85, 246)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack88 = credentials[1],247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack88 = credentials[1], 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l2),1176,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('#', l2), 1176))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l2),1176,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('#', l2), 1176)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9),243,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9), 243)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack88 = credentials[1],247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack88 = credentials[1], 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,builder = staticinvoke <org.xnio.OptionMap: org.xnio.OptionMap$Builder builder()>(),283,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268) => (<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>, builder = staticinvoke <org.xnio.OptionMap: org.xnio.OptionMap$Builder builder()>(), 283)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack21 = virtualinvoke builder.<org.xnio.OptionMap$Builder: org.xnio.OptionMap getMap()>(),298,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", l2),1186,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0X', l2), 1186))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", l2),1186,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0X', l2), 1186)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,builder = staticinvoke <org.xnio.OptionMap: org.xnio.OptionMap$Builder builder()>(),283,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268) => (<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>, builder = staticinvoke <org.xnio.OptionMap: org.xnio.OptionMap$Builder builder()>(), 283)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack21 = virtualinvoke builder.<org.xnio.OptionMap$Builder: org.xnio.OptionMap getMap()>(),298,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: int indexOf(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, l5 = l2, 1558)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack15.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1),1960,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack15.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1), 1960))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack15.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1),1960,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack15.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1), 1960)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),1163,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 1163))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),1163,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 1163)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,140,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = null,232,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack8 = virtualinvoke l0.<java.lang.String: int length()>(),1161,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack8 = virtualinvoke l0.<java.lang.String: int length()>(), 1161))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack8 = virtualinvoke l0.<java.lang.String: int length()>(),1161,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack8 = virtualinvoke l0.<java.lang.String: int length()>(), 1161)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack32 = virtualinvoke $stack31.<java.lang.Class: java.lang.String getName()>(),241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack32 = virtualinvoke $stack31.<java.lang.Class: java.lang.String getName()>(), 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack33 = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack32),241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack33 = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack32), 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#9 = (javax.security.auth.callback.CallbackHandler) $stack33,241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#9 = (javax.security.auth.callback.CallbackHandler) $stack33, 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9),243,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9), 243)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack66 = l0.<java.lang.String: char[] value>,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack66 = l0.<java.lang.String: char[] value>, 2357)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack67 = lengthof $stack66,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack67 = lengthof $stack66, 2357)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack66 = l0.<java.lang.String: char[] value>,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack66 = l0.<java.lang.String: char[] value>, 2357)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack67 = lengthof $stack66,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack67 = lengthof $stack66, 2357)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack14 = virtualinvoke $stack13.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>(l0, l2),2380,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0),2422,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,$stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0),2422,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack18 = l4,1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack18 = l4, 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack39 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack39 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1199)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39),1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack37 = <org.wildfly.security.auth.client.MatchRule: org.wildfly.security.auth.client.MatchRule ALL>,265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,140,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack41 = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack39),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack41 = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack39), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack27.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: org.wildfly.security.auth.client.AuthenticationConfiguration getAuthenticationConfiguration(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),230,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack27.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: org.wildfly.security.auth.client.AuthenticationConfiguration getAuthenticationConfiguration(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 230)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>,$stack11 = new java.net.URI,111,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22),208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack66 = l0.<java.lang.String: char[] value>,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack66 = l0.<java.lang.String: char[] value>, 2357)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack67 = lengthof $stack66,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack67 = lengthof $stack66, 2357)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9),243,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9), 243)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack88 = credentials[1],247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack88 = credentials[1], 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack89 = virtualinvoke $stack87.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration usePassword(java.lang.String)>($stack88), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null),247,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack89.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useRealm(java.lang.String)>(null), 247)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = (java.net.URI) authConfig,216,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = (java.net.URI) authConfig, 216)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack70 = l0.<java.lang.String: char[] value>,2358,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack70 = l0.<java.lang.String: char[] value>, 2358))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack70 = l0.<java.lang.String: char[] value>,2358,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack70 = l0.<java.lang.String: char[] value>, 2358)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = lengthof $stack70,2358,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l4 = lengthof $stack70, 2358)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack6),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,140,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = null,213,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = (java.net.URI) authConfig,216,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = (java.net.URI) authConfig, 216)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack11 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("-", l2),1185,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack11 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('-', l2), 1185))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack26 = virtualinvoke l0.<java.lang.String: int length()>(),1185,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack26 = virtualinvoke l0.<java.lang.String: int length()>(), 1185)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l2),1176,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('#', l2), 1176))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l2),1176,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack21 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('#', l2), 1176)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),1163,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 1163))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),1163,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 1163)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack11 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("-", l2),1185,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack11 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('-', l2), 1185))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack26 = virtualinvoke l0.<java.lang.String: int length()>(),1185,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack26 = virtualinvoke l0.<java.lang.String: int length()>(), 1185)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack22 = this.<org.jboss.remotingjmx.RemotingConnector: javax.management.remote.JMXServiceURL serviceUrl>,208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack22 = this.<org.jboss.remotingjmx.RemotingConnector: javax.management.remote.JMXServiceURL serviceUrl>, 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22),208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9),243,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9), 243)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack22 = this.<org.jboss.remotingjmx.RemotingConnector: javax.management.remote.JMXServiceURL serviceUrl>,208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack22 = this.<org.jboss.remotingjmx.RemotingConnector: javax.management.remote.JMXServiceURL serviceUrl>, 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22),208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>,$stack11 = new java.net.URI,111,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22),208,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, uri = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack22), 208)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)) => Node(<java.lang.String: int indexOf(int,int)>,$stack8 = l4[l5],1559,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, $stack8 = l4[l5], 1559))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)) => Node(<java.lang.String: int indexOf(int,int)>,$stack8 = l4[l5],1559,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503) => (<java.lang.String: int indexOf(int,int)>, $stack8 = l4[l5], 1559)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = null,213,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = staticinvoke <org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext captureCurrent()>(),222,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = staticinvoke <org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext captureCurrent()>(), 222)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = null,213,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack14 = virtualinvoke $stack13.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>(l0, l2),2380,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack14 = virtualinvoke $stack13.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>(l0, l2),2380,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9),205,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack8.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($stack9), 205))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack66 = l0.<java.lang.String: char[] value>,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack66 = l0.<java.lang.String: char[] value>, 2357)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack67 = lengthof $stack66,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack67 = lengthof $stack66, 2357)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack9 = l2 + l3,205,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack9 = l2 + l3, 205)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l2),1180,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0', l2), 1180))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l2),1180,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack22 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0', l2), 1180)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack37 = <org.wildfly.security.auth.client.MatchRule: org.wildfly.security.auth.client.MatchRule ALL>,265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack32 = virtualinvoke $stack31.<java.lang.Class: java.lang.String getName()>(),241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack32 = virtualinvoke $stack31.<java.lang.Class: java.lang.String getName()>(), 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack33 = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack32),241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack33 = interfaceinvoke env.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack32), 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#9 = (javax.security.auth.callback.CallbackHandler) $stack33,241,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#9 = (javax.security.auth.callback.CallbackHandler) $stack33, 241)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9),243,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9), 243)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l2),1172,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0x', l2), 1172))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l2),1172,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0x', l2), 1172)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack66 = l0.<java.lang.String: char[] value>,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack66 = l0.<java.lang.String: char[] value>, 2357)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack67 = lengthof $stack66,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack67 = lengthof $stack66, 2357)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack14 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1),1189,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($stack14, l1), 1189)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack18 = l4,1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack18 = l4, 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack39 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1199,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack39 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack102 = virtualinvoke authConfig.<java.lang.Object: java.lang.String toString()>(), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102),218,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($stack102), 218)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = null,213,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = l2,594,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,$stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack1),766,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack41 = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack39),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack41 = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack39), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack27.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: org.wildfly.security.auth.client.AuthenticationConfiguration getAuthenticationConfiguration(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),230,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack27.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: org.wildfly.security.auth.client.AuthenticationConfiguration getAuthenticationConfiguration(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 230)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke $stack27.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: org.wildfly.security.auth.client.AuthenticationConfiguration getAuthenticationConfiguration(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),230,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke $stack27.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: org.wildfly.security.auth.client.AuthenticationConfiguration getAuthenticationConfiguration(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 230)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack37 = <org.wildfly.security.auth.client.MatchRule: org.wildfly.security.auth.client.MatchRule ALL>,265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,authConfigUri = (java.net.URI) authConfig,216,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, authConfigUri = (java.net.URI) authConfig, 216)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack25 = staticinvoke <org.wildfly.security.auth.client.ElytronXmlParser: org.wildfly.security.SecurityFactory parseAuthenticationClientConfiguration(java.net.URI)>(authConfigUri), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(),225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack26 = interfaceinvoke $stack25.<org.wildfly.security.SecurityFactory: java.lang.Object create()>(), 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26,225,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = (org.wildfly.security.auth.client.AuthenticationContext) $stack26, 225)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack11 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("-", l2),1185,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack11 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('-', l2), 1185))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack26 = virtualinvoke l0.<java.lang.String: int length()>(),1185,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack26 = virtualinvoke l0.<java.lang.String: int length()>(), 1185)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack12 = virtualinvoke l1.<java.lang.String: int length()>(), 2339)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack85 = virtualinvoke $stack83.<java.lang.String: int indexOf(int)>($stack84), 2338) => (<java.lang.String: int indexOf(int)>, $stack2 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l1, 0), 1503)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: void <init>(char[],int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),192,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 192))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4),2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l5#15 = $stack30,2351,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, l5#15 = $stack30, 2351)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l4 = l5#15 + 1,2354,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack30 = virtualinvoke l0.<java.lang.String: int indexOf(int,int)>(l3#2, l4), 2351)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: void <init>(char[],int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),192,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack17.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 192)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(),258,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack77 = virtualinvoke credentials#17.<java.lang.Object: java.lang.String toString()>(), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack66 = l0.<java.lang.String: char[] value>,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack66 = l0.<java.lang.String: char[] value>, 2357)) => Node(<java.lang.String: java.lang.String[] split(java.lang.String,int)>,$stack67 = lengthof $stack66,2357,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack67 = lengthof $stack66, 2357)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack58 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(l4, l5#15), 2353) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = null,232,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack41 = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack39),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack41 = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack39), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack50 goto $stack51 = <org.xnio.IoFuture$Status: org.xnio.IoFuture$Status FAILED>,271,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: )
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,captured = staticinvoke <org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext captureCurrent()>(),222,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, captured = staticinvoke <org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext captureCurrent()>(), 222)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured),234,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, tempContext = virtualinvoke $stack29.<org.wildfly.security.auth.client.AuthenticationContextConfigurationClient: javax.net.ssl.SSLContext getSSLContext(java.net.URI,org.wildfly.security.auth.client.AuthenticationContext)>(uri, captured), 234)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,sslContext = tempContext,266,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, sslContext = tempContext, 266)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack62 = staticinvoke <org.jboss.remotingjmx.RemotingConnector$lambda_internalRemotingConnect_0__1: org.wildfly.security.SecurityFactory bootstrap$(javax.net.ssl.SSLContext)>(sslContext), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62),279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = virtualinvoke mechanisms#31.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext withSsl(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.SecurityFactory)>($stack61, $stack62), 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SinkNode, path: ), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack41 = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack39),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack41 = staticinvoke <org.jboss.remotingjmx.Util: java.net.URI convert(javax.management.remote.JMXServiceURL)>($stack39), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(),274,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack57 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.io.IOException getException()>(), 274)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack59 = (org.jboss.remoting3.Connection) $stack58,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack59 = (org.jboss.remoting3.Connection) $stack58, 272)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59,272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, this.<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection connection> = $stack59, 272))
SINK=>BASE: Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9),243,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, e#6 = virtualinvoke e#6.<org.wildfly.security.auth.client.AuthenticationConfiguration: org.wildfly.security.auth.client.AuthenticationConfiguration useCallbackHandler(javax.security.auth.callback.CallbackHandler)>(e#9), 243)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6),265,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = virtualinvoke $stack36.<org.wildfly.security.auth.client.AuthenticationContext: org.wildfly.security.auth.client.AuthenticationContext 'with'(org.wildfly.security.auth.client.MatchRule,org.wildfly.security.auth.client.AuthenticationConfiguration)>($stack37, e#6), 265)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack63 = mechanisms#31,279,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack63 = mechanisms#31, 279)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,mechanisms#31 = $stack63,267,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms#31 = $stack63, 267)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(),272,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack58 = interfaceinvoke futureConnection.<org.xnio.IoFuture: java.lang.Object get()>(), 272)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack6),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack16 = virtualinvoke l4.<java.lang.Integer: int intValue()>(), 1199)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", l2),1186,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0X', l2), 1186))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", l2),1186,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack20 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>('0X', l2), 1186)), SOURCE=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4), 151) => (<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l0, 10), 766) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))]
Confluence interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Confluence flows from execution of lines 269 and 269 to line 258, defined in $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env) and $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env) and used in mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)
Caused by line 258 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, mechanisms = virtualinvoke $stack77.<java.lang.String: java.lang.String[] split(java.lang.String)>(','), 258) => (<java.lang.String: java.lang.String[] split(java.lang.String)>, $stack2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(l1, 0), 2422) => (<java.lang.String: java.lang.String[] split(java.lang.String,int)>, $stack84 = virtualinvoke l1.<java.lang.String: char charAt(int)>(0), 2338) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/remoting-jmx/de3218ef58ebd3293e2afbe472f5a90f5c33e0e0/original-without-dependencies/remoting-jmx-3.0.5.CR1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,76200
Runtime: 0.072s
OA interference in class RemotingConnector, method org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map), execution of line 206 overrides 206, assigning to variable disabledMechanisms, 
Caused by line 206 flow:
at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:206)
And line 206 flow:
at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:206)
 
OA interference in class RemotingConnector, method org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map), execution of line 206 overrides 206, assigning to variable HashSet.<java.util.HashSet: java.util.HashMap map>, 
Caused by line 206 flow:
at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:206)
And line 206 flow:
at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:206)
 
OA interference in class RemotingConnector, method org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map), execution of line 269 overrides 269, assigning to variable <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>, 
Caused by line 269 flow:
at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:269)
at org.jboss.remotingjmx.Util.getTimeoutValue(Util.java:130)
at org.jboss.remotingjmx.Util.<clinit>(Util.java:54)
And line 269 flow:
at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:269)
at org.jboss.remotingjmx.Util.getTimeoutValue(Util.java:130)
at org.jboss.remotingjmx.Util.<clinit>(Util.java:54)
 
OA interference in class RemotingConnector, method org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map), execution of line 256 overrides 256, assigning to variable mechanisms, 
Caused by line 256 flow:
at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:256)
And line 256 flow:
at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:256)
 
Time to perform OA Inter 0,97500
OA Inter Visited methods: 111
 Analysis results
----------------------------
 Number of conflicts: 326
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/remoting-jmx/de3218ef58ebd3293e2afbe472f5a90f5c33e0e0/original-without-dependencies/remoting-jmx-3.0.5.CR1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,72300
Time to perform DFP Inter 1,22500
Depth limit: 5
CONFLICTS: DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 206 to 268, defined in disabledMechanisms = $stack21 and propagated in $stack25 = staticinvoke <org.xnio.Sequence: org.xnio.Sequence of(java.util.Collection)>(disabledMechanisms)
Caused by line 206 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)
Caused by line 268 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268) => (<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>, $stack25 = staticinvoke <org.xnio.Sequence: org.xnio.Sequence of(java.util.Collection)>(disabledMechanisms), 295)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 206 to 276, defined in disabledMechanisms = $stack21 and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 206 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 269 to 276, defined in timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3) and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 269 to 276, defined in $stack48 = (long) $stack46 and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 269 to 276, defined in $stack6 = (java.lang.Integer) object and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 269 to 276, defined in timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10) and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 269 to 276, defined in timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14) and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 269 to 276, defined in $stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS> and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 206 to 268, defined in disabledMechanisms = $stack21 and propagated in $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms)
Caused by line 206 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)
Caused by line 268 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 269 to 276, defined in $stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName> and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 269 to 276, defined in $stack4 = (java.lang.String) object and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 269 to 276, defined in timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack6) and propagated in $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status ")
Caused by line 269 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)
Caused by line 276 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Data flows from execution of line 206 to 268, defined in disabledMechanisms = $stack21 and propagated in $stack22 = interfaceinvoke disabledMechanisms.<java.util.Set: int size()>()
Caused by line 206 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)
Caused by line 268 flow: path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268) => (<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>, $stack22 = interfaceinvoke disabledMechanisms.<java.util.Set: int size()>(), 298)
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,140,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,this := @this: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,return $stack1,69,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,disabledMechanisms := @parameter0: java.util.Set,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack22 = interfaceinvoke disabledMechanisms.<java.util.Set: int size()>(),298,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268) => (<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>, $stack22 = interfaceinvoke disabledMechanisms.<java.util.Set: int size()>(), 298))), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,136,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack6),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto (branch),125,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,this := @this: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,return $stack1,69,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack5,151,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack5,151,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,this := @this: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,120,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268))), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,132,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,136,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,this := @this: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,this := @this: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,this := @this: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,return $stack1,69,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,121,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,disabledMechanisms := @parameter0: java.util.Set,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>,$stack25 = staticinvoke <org.xnio.Sequence: org.xnio.Sequence of(java.util.Collection)>(disabledMechanisms),295,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268) => (<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>, $stack25 = staticinvoke <org.xnio.Sequence: org.xnio.Sequence of(java.util.Collection)>(disabledMechanisms), 295))), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,return $stack1,69,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack6),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,137,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,120,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,137,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,120,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,121,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,132,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,131,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,132,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0),1101,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, l2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(l0), 1101)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,$stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2),1196,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, $stack34 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l2), 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l7 = $stack34,1196,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106) => (<java.lang.Integer: java.lang.Integer decode(java.lang.String)>, l7 = $stack34, 1196)) => Node(<java.lang.Integer: java.lang.Integer decode(java.lang.String)>,l4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(l7, l1),1197,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2), 1106)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l2),1106,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119) => (<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null), 1011)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack6),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,126,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,131,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack5,151,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack46 = virtualinvoke $stack45.<java.lang.Integer: int intValue()>(), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation failed with status "),276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Operation failed with status '), 276))), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,136,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,137,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,131,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,140,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return $stack8,140,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,121,SinkNode, path: ))]
Visited methods: 35
 Analysis results
----------------------------
 Number of conflicts: 56
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/remoting-jmx/de3218ef58ebd3293e2afbe472f5a90f5c33e0e0/original-without-dependencies/remoting-jmx-3.0.5.CR1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,68600
Time to perform DFP Inter 1,04500
Depth limit: 5
CONFLICTS: DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack5,151,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,this := @this: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,return $stack1,69,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack5,151,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack6),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto (branch),125,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,136,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,137,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,131,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(l0, null),1011,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack6),124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,126,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,132,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,131,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,this := @this: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,return $stack1,69,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,120,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,136,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,132,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,131,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack5 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,124,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack6 = virtualinvoke $stack5.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 124)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,this := @this: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,return $stack1,69,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,132,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,132,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,132,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,return $stack1,69,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack6,148,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack5,151,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,131,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>,$stack1 = this.<org.jboss.remotingjmx.Util$Timeout: java.lang.String propertyName>,69,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack5,151,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack12 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout GENERIC>,131,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack6 = (java.lang.Integer) object,148,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,137,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack4 = (java.lang.String) object,151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack4 = (java.lang.String) object, 151)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,return $stack5,151,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack13 = virtualinvoke $stack12.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack14 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack13), 135)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,if timeoutSeconds == null goto $stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,136,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack8 = <org.jboss.remotingjmx.Util: java.lang.Integer DEFAULT_TIMEOUT_SECONDS>,140,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return $stack8,140,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack3 = object instanceof java.lang.String,150,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack3 = object instanceof java.lang.String, 150)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack3 == 0 goto (branch),150,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack44 = <org.jboss.remotingjmx.Util$Timeout: org.jboss.remotingjmx.Util$Timeout CONNECTION>,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,property := @parameter0: org.jboss.remotingjmx.Util$Timeout,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack9 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9),130,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack10 = interfaceinvoke environment.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack9), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,object := @parameter0: java.lang.Object,-1,SimpleNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack2 = object instanceof java.lang.Integer,147,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130) => (<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>, $stack2 = object instanceof java.lang.Integer, 147)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,if $stack2 == 0 goto $stack3 = object instanceof java.lang.String,147,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>,$stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack4),151,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack10), 130)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getInteger(java.lang.Object)>($stack14),135,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,137,SinkNode, path: )), List(Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,$stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269) => (<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>, $stack3 = virtualinvoke property.<org.jboss.remotingjmx.Util$Timeout: java.lang.String toString()>(), 119)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,timeoutSeconds = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>($stack3),119,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack45 = staticinvoke <org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>($stack44, env), 269)) => Node(<org.jboss.remotingjmx.Util: java.lang.Integer getTimeoutValue(org.jboss.remotingjmx.Util$Timeout,java.util.Map)>,return timeoutSeconds,121,SinkNode, path: ))]
Visited methods: 36
 Analysis results
----------------------------
 Number of conflicts: 45
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/remoting-jmx/de3218ef58ebd3293e2afbe472f5a90f5c33e0e0/original-without-dependencies/remoting-jmx-3.0.5.CR1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,48800
Time to perform PDG 0,68500
CONFLICTS: [List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack48 = (long) $stack46,269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack48 = (long) $stack46, 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SimpleNode, path: ) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack52 = new java.io.IOException,276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, specialinvoke $stack52.<java.io.IOException: void <init>(java.lang.String)>($stack56), 276))), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268))), List(Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,disabledMechanisms = $stack21,206,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, disabledMechanisms = $stack21, 206)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms),268,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, $stack42 = specialinvoke this.<org.jboss.remotingjmx.RemotingConnector: org.xnio.OptionMap getOptionMap(java.util.Set)>(disabledMechanisms), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31),268,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, futureConnection = interfaceinvoke $stack40.<org.jboss.remoting3.Endpoint: org.xnio.IoFuture connect(java.net.URI,org.xnio.OptionMap,org.wildfly.security.auth.client.AuthenticationContext)>($stack41, $stack42, mechanisms#31), 268)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47),269,SourceNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, result = interfaceinvoke futureConnection.<org.xnio.IoFuture: org.xnio.IoFuture$Status await(long,java.util.concurrent.TimeUnit)>($stack48, $stack47), 269)) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,if result != $stack51 goto $stack52 = new java.io.IOException,273,SimpleNode, path: ) => Node(<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>,$stack52 = new java.io.IOException,276,SinkNode, path: (<org.jboss.remotingjmx.RemotingConnector: org.jboss.remoting3.Connection internalRemotingConnect(java.util.Map)>, specialinvoke $stack52.<java.io.IOException: void <init>(java.lang.String)>($stack56), 276)))]
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/remoting-jmx/de3218ef58ebd3293e2afbe472f5a90f5c33e0e0/original-without-dependencies/remoting-jmx-3.0.5.CR1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,44700
Time to perform PDG 0,56500
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
