Running soot scenario migration-tools;com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator;getTypeName(Column, ScriptGeneratorManager);de0e2f210167f6fea3a5a9937dfe42e1dccb4ddb
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/migration-tools/de0e2f210167f6fea3a5a9937dfe42e1dccb4ddb/original-without-dependencies/nuodb-migrator-core-2.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,57100
Time to perform Confluence 1 Inter 0,74900
Configure Soot Confluence 2 Inter 0,39400
Time to perform Confluence 2 Inter 0,21300
Visited methods: 96
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>,$stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),56,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>,$stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),56,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,if scale >= 0 goto $stack15 = virtualinvoke scriptGeneratorManager.<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: com.nuodb.migrator.jdbc.session.Session getSourceSession()>(),206,SinkNode, path: )
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,if scale >= 0 goto $stack15 = virtualinvoke scriptGeneratorManager.<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: com.nuodb.migrator.jdbc.session.Session getSourceSession()>(),206,SinkNode, path: ), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>,$stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),47,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>,this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision> = $stack4,47,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision> = $stack4, 47))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>,$stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),47,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>,this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision> = $stack4,47,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision> = $stack4, 47)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,if scale >= 0 goto $stack15 = virtualinvoke scriptGeneratorManager.<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: com.nuodb.migrator.jdbc.session.Session getSourceSession()>(),206,SinkNode, path: )
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,if scale >= 0 goto $stack15 = virtualinvoke scriptGeneratorManager.<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: com.nuodb.migrator.jdbc.session.Session getSourceSession()>(),206,SinkNode, path: ), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,if scale >= 0 goto $stack15 = virtualinvoke scriptGeneratorManager.<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: com.nuodb.migrator.jdbc.session.Session getSourceSession()>(),206,SinkNode, path: )
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,if scale >= 0 goto $stack15 = virtualinvoke scriptGeneratorManager.<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: com.nuodb.migrator.jdbc.session.Session getSourceSession()>(),206,SinkNode, path: ), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>,$stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),55,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>,$stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),55,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>,this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode> = $stack2,55,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode> = $stack2, 55)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>,$stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),45,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>,$stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),45,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(),217,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0), 207) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>,$stack3 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),46,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack3 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 46))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>,$stack3 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),46,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack3 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 46)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>,this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale> = $stack3,46,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale> = $stack3, 46)), SOURCE=>BASE: Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204))
SINK=>BASE: Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(),204,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, scale = virtualinvoke $stack12.<java.lang.Integer: int intValue()>(), 204))]
Confluence interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Confluence flows from execution of lines 207 and 207 to line 207, defined in jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82) and jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82) and used in jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82)
Caused by line 207 flow: path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)
Caused by line 207 flow: path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)
Caused by line 207 flow: path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/migration-tools/de0e2f210167f6fea3a5a9937dfe42e1dccb4ddb/original-without-dependencies/nuodb-migrator-core-2.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,83500
Runtime: 0.028s
OA interference in class TableScriptGenerator, method java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager), execution of line 216 overrides 216, assigning to variable Formatter.<java.util.Formatter: java.io.IOException lastException>, 
Caused by line 216 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:216)
at java.lang.String.format(String.java:2940)
And line 216 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:216)
at java.lang.String.format(String.java:2940)
 
OA interference in class TableScriptGenerator, method java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager), execution of line 218 overrides 218, assigning to variable Formatter.<java.util.Formatter: java.io.IOException lastException>, 
Caused by line 218 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:218)
at java.lang.String.format(String.java:2940)
And line 218 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:218)
at java.lang.String.format(String.java:2940)
 
OA interference in class TableScriptGenerator, method java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager), execution of line 220 overrides 220, assigning to variable <java.util.Formatter: double scaleUp>, 
Caused by line 220 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:220)
at java.lang.String.format(String.java:2940)
And line 220 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:220)
at java.lang.String.format(String.java:2940)
 
OA interference in class TableScriptGenerator, method java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager), execution of line 223 overrides 223, assigning to variable <java.util.Formatter: double scaleUp>, 
Caused by line 223 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:223)
at java.lang.String.format(String.java:2940)
And line 223 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:223)
at java.lang.String.format(String.java:2940)
 
OA interference in class TableScriptGenerator, method java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager), execution of line 217 overrides 217, assigning to variable Formatter.<java.util.Formatter: java.lang.Appendable a>, 
Caused by line 217 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:217)
at java.lang.String.format(String.java:2940)
And line 217 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:217)
at java.lang.String.format(String.java:2940)
 
OA interference in class TableScriptGenerator, method java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager), execution of line 217 overrides 217, assigning to variable <java.lang.Integer: int[] sizeTable>, 
Caused by line 217 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:217)
at java.lang.Integer.<clinit>(Integer.java:467)
And line 217 flow:
at com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator.getTypeName(TableScriptGenerator.java:217)
at java.lang.Integer.<clinit>(Integer.java:467)
 
Time to perform OA Inter 0,97700
OA Inter Visited methods: 19
 Analysis results
----------------------------
 Number of conflicts: 297
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/migration-tools/de0e2f210167f6fea3a5a9937dfe42e1dccb4ddb/original-without-dependencies/nuodb-migrator-core-2.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,92500
Time to perform DFP Inter 0,69800
Depth limit: 5
CONFLICTS: DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(),125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,return $stack2,125,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(),125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,return $stack2,125,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,return $stack1,51,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(),135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,return $stack2,135,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,return $stack2,105,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105) => (<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 68)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,return $stack2,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105) => (<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 68)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeDesc,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,return $stack1,60,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105) => (<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 68)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeDesc,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,return $stack1,60,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,return $stack1,63,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,return $stack2,82,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,return $stack1,51,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,return $stack2,110,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,return $stack2,82,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,return $stack1,63,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,return $stack2,82,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,return $stack2,145,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,return $stack1,51,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,return $stack1,59,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,return $stack2,124,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,return $stack1,60,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeDesc,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,return $stack1,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,return $stack1,59,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,return $stack2,96,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,return $stack2,145,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,return $stack2,124,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,return $stack1,59,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,return $stack2,110,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,return $stack2,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,return $stack2,110,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(),135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,return $stack2,135,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,return $stack1,63,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,return $stack2,124,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,return $stack1,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,return $stack2,105,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(),115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,return $stack2,115,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,return $stack2,105,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(),115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,return $stack2,115,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(),115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,return $stack2,115,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,return $stack2,145,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeDesc,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,return $stack1,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,return $stack2,96,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(),135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,return $stack2,135,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(),125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,return $stack2,125,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,return $stack2,96,SinkNode, path: ))]
Visited methods: 48
 Analysis results
----------------------------
 Number of conflicts: 44
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/migration-tools/de0e2f210167f6fea3a5a9937dfe42e1dccb4ddb/original-without-dependencies/nuodb-migrator-core-2.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,90600
Time to perform DFP Inter 0,79200
Depth limit: 5
CONFLICTS: DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Data flows from execution of line 226 to 226, defined in $stack51[2] = $stack54 and propagated in specialinvoke this.<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>(message)
Caused by line 226 flow: path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)
Caused by line 226 flow: path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, specialinvoke $stack50.<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>($stack55), 226) => (<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>, specialinvoke this.<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>(message), 38)
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Data flows from execution of line 226 to 226, defined in $stack51[2] = $stack54 and propagated in $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported type on table %s column %s: %s", $stack51)
Caused by line 226 flow: path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)
Caused by line 226 flow: path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Data flows from execution of line 226 to 226, defined in $stack51[2] = $stack54 and propagated in specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message)
Caused by line 226 flow: path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)
Caused by line 226 flow: path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, specialinvoke $stack50.<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>($stack55), 226) => (<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>, specialinvoke this.<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>(message), 38) => (<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>, specialinvoke this.<com.nuodb.migrator.MigratorException: void <init>(java.lang.String)>(message), 38) => (<com.nuodb.migrator.MigratorException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 33)
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(),125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,return $stack2,125,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(),125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,return $stack2,125,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,return $stack1,51,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(),135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,return $stack2,135,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,return $stack2,105,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105) => (<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 68)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,return $stack2,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105) => (<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 68)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeDesc,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,return $stack1,60,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105) => (<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 68)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeDesc,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,return $stack1,60,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,return $stack1,63,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,return $stack2,82,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,return $stack1,51,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,return $stack2,110,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,return $stack2,82,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,return $stack1,63,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,return $stack2,82,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack51[2] = $stack54,227,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported type on table %s column %s: %s", $stack51),226,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, specialinvoke $stack50.<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>($stack55), 226)) => Node(<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, tableName = virtualinvoke scriptGeneratorManager.<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: java.lang.String getQualifiedName(com.nuodb.migrator.jdbc.metadata.MetaData,java.lang.String,java.lang.String,boolean)>($stack19, $stack22, $stack25, 0), 212) => (<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: java.lang.String getQualifiedName(com.nuodb.migrator.jdbc.metadata.MetaData,java.lang.String,java.lang.String,boolean)>, $stack5 = virtualinvoke this.<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: com.nuodb.migrator.jdbc.metadata.generator.NamingStrategy getNamingStrategy(com.nuodb.migrator.jdbc.metadata.MetaData)>(object), 119) => (<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: com.nuodb.migrator.jdbc.metadata.generator.NamingStrategy getNamingStrategy(com.nuodb.migrator.jdbc.metadata.MetaData)>, $stack3 = staticinvoke <com.nuodb.migrator.jdbc.metadata.MetaDataHandlerUtils: com.nuodb.migrator.jdbc.metadata.MetaDataHandler getHandler(java.util.Collection,com.nuodb.migrator.jdbc.metadata.MetaData)>($stack2, object), 131) => (<com.nuodb.migrator.jdbc.metadata.MetaDataHandlerUtils: com.nuodb.migrator.jdbc.metadata.MetaDataHandler getHandler(java.util.Collection,com.nuodb.migrator.jdbc.metadata.MetaData)>, $stack2 = staticinvoke <com.nuodb.migrator.jdbc.metadata.MetaDataHandlerUtils: com.nuodb.migrator.jdbc.metadata.MetaDataHandler getHandler(java.util.Collection,com.nuodb.migrator.jdbc.metadata.MetaData,boolean)>(handlers, object, 1), 40) => (<com.nuodb.migrator.jdbc.metadata.MetaDataHandlerUtils: com.nuodb.migrator.jdbc.metadata.MetaDataHandler getHandler(java.util.Collection,com.nuodb.migrator.jdbc.metadata.MetaData,boolean)>, specialinvoke $stack7.<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>($stack9), 51)) => Node(<com.nuodb.migrator.MigratorException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, specialinvoke $stack50.<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>($stack55), 226) => (<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>, specialinvoke this.<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>(message), 38) => (<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>, specialinvoke this.<com.nuodb.migrator.MigratorException: void <init>(java.lang.String)>(message), 38)) => Node(<com.nuodb.migrator.MigratorException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message),33,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, specialinvoke $stack50.<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>($stack55), 226) => (<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>, specialinvoke this.<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>(message), 38) => (<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>, specialinvoke this.<com.nuodb.migrator.MigratorException: void <init>(java.lang.String)>(message), 38) => (<com.nuodb.migrator.MigratorException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(message), 33))), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,return $stack2,145,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,return $stack1,51,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,return $stack1,59,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,return $stack2,124,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,return $stack1,60,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeDesc,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,return $stack1,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,return $stack1,59,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,return $stack2,96,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,return $stack2,145,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,return $stack2,124,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,return $stack1,59,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,return $stack2,110,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,return $stack2,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,return $stack2,110,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 110)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(),135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,return $stack2,135,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,return $stack1,63,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer scale>,63,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(), 124)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getScale()>(),124,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(), 145)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>,return $stack2,124,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,return $stack1,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,return $stack2,105,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(),115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,return $stack2,115,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int typeCode>,60,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack2 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(), 55)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: int getTypeCode()>(),68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217) => (<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(), 105)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: int getTypeCode()>(),105,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack38 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>(), 217)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: int getTypeCode()>,return $stack2,105,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(),115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,return $stack2,115,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(),82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(),115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,return $stack2,115,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getScale()>(),145,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack12 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>(), 204)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getScale()>,return $stack2,145,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,115,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>,82,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack32 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>(), 216) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.String getTypeName()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>(), 115) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.String getTypeName()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeDesc jdbcTypeDesc>, 82)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeDesc,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String typeName>,68,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack9.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>($stack10), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeDesc)>, $stack3 = virtualinvoke typeDesc.<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>(), 56)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeDesc: java.lang.String getTypeName()>,return $stack1,68,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,return $stack2,96,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer precision>,59,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack4 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(), 47)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getPrecision()>(),110,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(), 135)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getPrecision()>(),135,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack48 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>(), 219)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getPrecision()>,return $stack2,135,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack51[2] = $stack54,227,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported type on table %s column %s: %s", $stack51),226,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226))), List(Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack51[2] = $stack54,227,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported type on table %s column %s: %s", $stack51),226,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>,message := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, specialinvoke $stack50.<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>($stack55), 226)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>,specialinvoke this.<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>(message),38,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, specialinvoke $stack50.<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>($stack55), 226) => (<com.nuodb.migrator.jdbc.metadata.generator.GeneratorException: void <init>(java.lang.String)>, specialinvoke this.<com.nuodb.migrator.jdbc.metadata.MetaDataException: void <init>(java.lang.String)>(message), 38))), List(Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(),125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218)) => Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,return $stack2,125,SinkNode, path: )), List(Node(<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>,125,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.metadata.Column: com.nuodb.migrator.jdbc.type.JdbcType jdbcType>, 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcType,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>,96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125) => (<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>, $stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcTypeOptions jdbcTypeOptions>, 96)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,this := @this: com.nuodb.migrator.jdbc.type.JdbcTypeOptions,-1,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>,$stack1 = this.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer size>,51,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>, jdbcType = virtualinvoke this.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>(), 132) => (<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType clone()>, specialinvoke $stack5.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>($stack6), 171) => (<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: void <init>(com.nuodb.migrator.jdbc.type.JdbcTypeOptions)>, $stack2 = virtualinvoke jdbcTypeOptions.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(), 45)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,$stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcTypeOptions: java.lang.Integer getSize()>(),96,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack45 = virtualinvoke column.<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>(), 218) => (<com.nuodb.migrator.jdbc.metadata.Column: java.lang.Integer getSize()>, $stack2 = virtualinvoke $stack1.<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>(), 125)) => Node(<com.nuodb.migrator.jdbc.type.JdbcType: java.lang.Integer getSize()>,return $stack2,96,SinkNode, path: ))]
Visited methods: 48
 Analysis results
----------------------------
 Number of conflicts: 47
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/migration-tools/de0e2f210167f6fea3a5a9937dfe42e1dccb4ddb/original-without-dependencies/nuodb-migrator-core-2.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,57000
Time to perform PDG 0,52500
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/migration-tools/de0e2f210167f6fea3a5a9937dfe42e1dccb4ddb/original-without-dependencies/nuodb-migrator-core-2.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,85400
Time to perform PDG 0,60000
CONFLICTS: [List(Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack76 = interfaceinvoke dialect.<com.nuodb.migrator.jdbc.dialect.Dialect: boolean supportsNegativeScale()>(),222,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack76 = interfaceinvoke dialect.<com.nuodb.migrator.jdbc.dialect.Dialect: boolean supportsNegativeScale()>(), 222)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,if $stack76 != 0 goto $stack15 = virtualinvoke scriptGeneratorManager.<com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager: com.nuodb.migrator.jdbc.session.Session getSourceSession()>(),222,SourceNode, path: ) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0),207,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82),207,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, jdbcType = virtualinvoke jdbcType.<com.nuodb.migrator.jdbc.type.JdbcType: com.nuodb.migrator.jdbc.type.JdbcType withScale(java.lang.Integer)>($stack82), 207)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,typeName = interfaceinvoke dialect.<com.nuodb.migrator.jdbc.dialect.Dialect: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.DatabaseInfo,com.nuodb.migrator.jdbc.type.JdbcType)>(databaseInfo, jdbcType),210,SimpleNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, typeName = interfaceinvoke dialect.<com.nuodb.migrator.jdbc.dialect.Dialect: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.DatabaseInfo,com.nuodb.migrator.jdbc.type.JdbcType)>(databaseInfo, jdbcType), 210)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,if typeName != null goto return typeName,211,SimpleNode, path: ) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack51[2] = $stack54,227,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported type on table %s column %s: %s", $stack51),226,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226))), List(Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack51[2] = $stack54,227,SourceNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)) => Node(<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>,$stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported type on table %s column %s: %s", $stack51),226,SinkNode, path: (<com.nuodb.migrator.jdbc.metadata.generator.TableScriptGenerator: java.lang.String getTypeName(com.nuodb.migrator.jdbc.metadata.Column,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('Unsupported type on table %s column %s: %s', $stack51), 226)))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
