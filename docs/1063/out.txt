List(Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,if channel == null goto $stack58 = new java.lang.IllegalArgumentException,113,SourceNode, path: ) => Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,if $stack60 == 0 goto $stack61 = new java.lang.StringBuilder,114,SourceNode, path: ) => Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,if sendModeStr == null goto $stack30 = delay cmp 0L,140,SimpleNode, path: ) => Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,if $stack30 <= 0 goto return,149,SimpleNode, path: ) => Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,specialinvoke $stack31.<java.util.Timer: void <init>(boolean)>(1),151,SinkNode, path: (<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>, specialinvoke $stack31.<java.util.Timer: void <init>(boolean)>(1), 151)))

List(Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,$stack59 = virtualinvoke channel.<java.lang.String: java.lang.String trim()>(),114,SourceNode, path: (<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>, $stack59 = virtualinvoke channel.<java.lang.String: java.lang.String trim()>(), 114)) => Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,$stack60 = virtualinvoke $stack59.<java.lang.String: boolean equals(java.lang.Object)>(""),114,SourceNode, path: (<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>, $stack60 = virtualinvoke $stack59.<java.lang.String: boolean equals(java.lang.Object)>(''), 114)) => Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,if $stack60 == 0 goto $stack61 = new java.lang.StringBuilder,114,SourceNode, path: ) => Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,if sendModeStr == null goto $stack30 = delay cmp 0L,140,SimpleNode, path: ) => Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,if $stack30 <= 0 goto return,149,SimpleNode, path: ) => Node(<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>,specialinvoke $stack31.<java.util.Timer: void <init>(boolean)>(1),151,SinkNode, path: (<com.splunk.logging.HttpEventCollectorSender: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,long,java.lang.String,java.util.Map,com.splunk.logging.HttpEventCollectorSender$TimeoutSettings)>, specialinvoke $stack31.<java.util.Timer: void <init>(boolean)>(1), 151)))

