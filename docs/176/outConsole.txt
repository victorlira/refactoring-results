Running soot scenario java-iso-tools;com.github.stephenc.javaisotools.maven.PackageMojo;execute();abb37e3cfda2f2774f128d2a4f8299b4d721b452
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/java-iso-tools/abb37e3cfda2f2774f128d2a4f8299b4d721b452/original-without-dependencies/iso9660-maven-plugin-2.0.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,53300
Time to perform Confluence 1 Inter 0,99300
Configure Soot Confluence 2 Inter 0,15800
Time to perform Confluence 2 Inter 0,53700
Visited methods: 48
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(),332,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315))
SINK=>BASE: Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack74 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.lang.Integer maxJolietFilenameLength>,341,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack74 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.lang.Integer maxJolietFilenameLength>, 341)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315))]
Confluence interference in <com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>
Confluence flows from execution of lines 332 and 341 to line 315, defined in $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>() and $stack74 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.lang.Integer maxJolietFilenameLength> and used in $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>()
Caused by line 332 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)
Caused by line 341 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack74 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.lang.Integer maxJolietFilenameLength>, 341)
Caused by line 315 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/java-iso-tools/abb37e3cfda2f2774f128d2a4f8299b4d721b452/original-without-dependencies/iso9660-maven-plugin-2.0.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,51900
Runtime: 0.035s
Time to perform OA Inter 0,62600
OA Inter Visited methods: 11
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/java-iso-tools/abb37e3cfda2f2774f128d2a4f8299b4d721b452/original-without-dependencies/iso9660-maven-plugin-2.0.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,48800
Time to perform DFP Inter 0,75000
Depth limit: 5
CONFLICTS: DF interference in <com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>
Data flows from execution of line 288 to 341, defined in $stack13 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.util.List permissions> and propagated in virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75)
Caused by line 288 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack13 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.util.List permissions>, 288)
Caused by line 341 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341)
DF interference in <com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>
Data flows from execution of line 330 to 341, defined in jolietConfig = interfaceinvoke $stack86.<java.util.List: java.util.Iterator iterator()>() and propagated in virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75)
Caused by line 330 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, jolietConfig = interfaceinvoke $stack86.<java.util.List: java.util.Iterator iterator()>(), 330)
Caused by line 341 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341)
DF interference in <com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>
Data flows from execution of line 332 to 341, defined in $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>() and propagated in virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75)
Caused by line 332 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)
Caused by line 341 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341)
DF interference in <com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>
Data flows from execution of line 332 to 341, defined in $stack3 = virtualinvoke $stack2.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75)
Caused by line 332 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)
Caused by line 341 flow: path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341)
[List(Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack13 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.util.List permissions>,288,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack13 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.util.List permissions>, 288)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack17 = interfaceinvoke $stack13.<java.util.List: int size()>(),288,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack17 = interfaceinvoke $stack13.<java.util.List: int size()>(), 288)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(), 341)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341))), List(Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,jolietConfig = interfaceinvoke $stack86.<java.util.List: java.util.Iterator iterator()>(),330,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, jolietConfig = interfaceinvoke $stack86.<java.util.List: java.util.Iterator iterator()>(), 330)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack91 = interfaceinvoke jolietConfig.<java.util.Iterator: java.lang.Object next()>(),338,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack91 = interfaceinvoke jolietConfig.<java.util.Iterator: java.lang.Object next()>(), 338)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,fp = (com.github.stephenc.javaisotools.maven.FilePermission) $stack91,338,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, fp = (com.github.stephenc.javaisotools.maven.FilePermission) $stack91, 338)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(),332,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(), 341)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341))), List(Node(<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>,$stack3 = virtualinvoke $stack2.<java.lang.Integer: int intValue()>(),46,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(),332,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(), 341)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341))), List(Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(),332,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(), 341)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341)))]
Visited methods: 24
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/java-iso-tools/abb37e3cfda2f2774f128d2a4f8299b4d721b452/original-without-dependencies/iso9660-maven-plugin-2.0.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,40400
Time to perform DFP Inter 0,72600
Depth limit: 5
CONFLICTS: []
Visited methods: 24
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/java-iso-tools/abb37e3cfda2f2774f128d2a4f8299b4d721b452/original-without-dependencies/iso9660-maven-plugin-2.0.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,41500
Time to perform PDG 0,61100
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/java-iso-tools/abb37e3cfda2f2774f128d2a4f8299b4d721b452/original-without-dependencies/iso9660-maven-plugin-2.0.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,55200
Time to perform PDG 0,67500
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
