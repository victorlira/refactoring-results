SOURCE=>BASE: Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(),332,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315))
SINK=>BASE: Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack74 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.lang.Integer maxJolietFilenameLength>,341,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack74 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.lang.Integer maxJolietFilenameLength>, 341)) => Node(<java.lang.Integer: int intValue()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315))

List(Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack13 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.util.List permissions>,288,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack13 = this.<com.github.stephenc.javaisotools.maven.PackageMojo: java.util.List permissions>, 288)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack17 = interfaceinvoke $stack13.<java.util.List: int size()>(),288,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack17 = interfaceinvoke $stack13.<java.util.List: int size()>(), 288)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(), 341)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341)))

List(Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,jolietConfig = interfaceinvoke $stack86.<java.util.List: java.util.Iterator iterator()>(),330,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, jolietConfig = interfaceinvoke $stack86.<java.util.List: java.util.Iterator iterator()>(), 330)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack91 = interfaceinvoke jolietConfig.<java.util.Iterator: java.lang.Object next()>(),338,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack91 = interfaceinvoke jolietConfig.<java.util.Iterator: java.lang.Object next()>(), 338)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,fp = (com.github.stephenc.javaisotools.maven.FilePermission) $stack91,338,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, fp = (com.github.stephenc.javaisotools.maven.FilePermission) $stack91, 338)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(),332,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(), 341)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341)))

List(Node(<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>,$stack3 = virtualinvoke $stack2.<java.lang.Integer: int intValue()>(),46,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(),332,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(), 341)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341)))

List(Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(),332,SourceNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack93 = virtualinvoke fp.<com.github.stephenc.javaisotools.maven.FilePermission: int getPermissionAsInt()>(), 332)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17), 288) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack39 = virtualinvoke $stack38.<java.lang.Integer: int intValue()>(), 315)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,$stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, $stack75 = virtualinvoke $stack74.<java.lang.Integer: int intValue()>(), 341)) => Node(<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>,virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75),341,SinkNode, path: (<com.github.stephenc.javaisotools.maven.PackageMojo: void execute()>, virtualinvoke jolietConfig#11.<com.github.stephenc.javaisotools.joliet.impl.JolietConfig: void setMaxCharsInFilename(int)>($stack75), 341)))

