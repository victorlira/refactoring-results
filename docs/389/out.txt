List(Node(<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>,if line == null goto $stack12 = new java.lang.IllegalArgumentException,24,SourceNode, path: ) => Node(<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>,if $stack13 == 0 goto $stack14 = new java.util.ArrayList,25,SimpleNode, path: ) => Node(<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>,$stack14 = new java.util.ArrayList,28,SinkNode, path: (<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>, specialinvoke $stack14.<java.util.ArrayList: void <init>()>(), 28)))

List(Node(<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>,if line == null goto $stack12 = new java.lang.IllegalArgumentException,24,SourceNode, path: ) => Node(<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>,if $stack13 == 0 goto $stack14 = new java.util.ArrayList,25,SimpleNode, path: ) => Node(<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>,$stack15 = new java.util.ArrayList,29,SinkNode, path: (<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>, specialinvoke $stack15.<java.util.ArrayList: void <init>()>(), 29)) => Node(<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>,specialinvoke $stack15.<java.util.ArrayList: void <init>()>(),29,SinkNode, path: (<org.tomitribe.crest.cli.impl.CommandParser: org.tomitribe.crest.cli.impl.CommandParser$Command[] toArgs(java.lang.String)>, specialinvoke $stack15.<java.util.ArrayList: void <init>()>(), 29)))

