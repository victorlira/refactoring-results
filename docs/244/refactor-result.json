[
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "82"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "81"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "79"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "78"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "77"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "76"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "75"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "74"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "73"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "71"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 70,
      "endLine": 85,
      "startColumn": 5,
      "endColumn": 6,
      "codeElementType": "WHILE_STATEMENT",
      "description": "split conditional",
      "codeElement": "while(chars.length > i + numberLen)"
    },
    "line": "70"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "82"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "81"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "79"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "78"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "77"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "76"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "75"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "74"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "73"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 71,
      "endLine": 83,
      "startColumn": 6,
      "endColumn": 7,
      "codeElementType": "IF_STATEMENT",
      "description": "split conditional",
      "codeElement": "if(isDigitOrDecimalSeparator(chars[i + numberLen]))"
    },
    "line": "71"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "82"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "81"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "79"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "78"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "77"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "76"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "75"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "74"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "73"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "71"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "70"
  },
  {
    "branch": "R",
    "class": "de.congrace.exp4j.Tokenizer",
    "tool": "RefactoringMiner",
    "refactoringInfo": "Split Conditional\twhile(chars.length > i + numberLen && isDigitOrDecimalSeparator(chars[i + numberLen])) to [while(chars.length > i + numberLen), if(isDigitOrDecimalSeparator(chars[i + numberLen]))] in method package getTokens(expression String) : List<Token> from class de.congrace.exp4j.Tokenizer",
    "description": {
      "filePath": "src/main/java/de/congrace/exp4j/Tokenizer.java",
      "startLine": 55,
      "endLine": 141,
      "startColumn": 2,
      "endColumn": 3,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with split conditional",
      "codeElement": "package getTokens(expression String) : List<Token>"
    },
    "line": "69"
  }
]