Running soot scenario rabbitmq-flume-plugin;com.aweber.flume.source.rabbitmq.Consumer;buildHeaders(AMQP.BasicProperties);ed70b2c5c33b52017f2528a587894c01be750ed7
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/rabbitmq-flume-plugin/ed70b2c5c33b52017f2528a587894c01be750ed7/original-without-dependencies/rabbitmq-flume-plugin-1.0.3-customheaders-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,42300
Time to perform Confluence 1 Inter 0,61300
Configure Soot Confluence 2 Inter 0,18800
Time to perform Confluence 2 Inter 0,19000
Visited methods: 26
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timestamp", $stack54),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('timestamp', $stack54), 289))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0.<java.lang.Class: java.lang.String name> = $stack2,642,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, l0.<java.lang.Class: java.lang.String name> = $stack2, 642)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0.<java.lang.Class: java.lang.String name> = $stack2,642,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, l0.<java.lang.Class: java.lang.String name> = $stack2, 642)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,specialinvoke l0.<java.lang.Object: void <init>()>(),609,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 609))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,specialinvoke l0.<java.lang.Object: void <init>()>(),609,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 609)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timestamp", $stack54),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('timestamp', $stack54), 289))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0.<java.lang.String: char[] value> = l1,611,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, l0.<java.lang.String: char[] value> = l1, 611))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0.<java.lang.String: char[] value> = l1,611,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, l0.<java.lang.String: char[] value> = l1, 611)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0.<java.lang.Class: java.lang.String name> = $stack2,642,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, l0.<java.lang.Class: java.lang.String name> = $stack2, 642)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timestamp", $stack54),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('timestamp', $stack54), 289))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,specialinvoke l0.<java.lang.Object: void <init>()>(),609,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 609))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,specialinvoke l0.<java.lang.Object: void <init>()>(),609,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 609)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.Long: java.lang.String toString(long)>,specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1),399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.Long: java.lang.String toString(long)>,specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1),399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,specialinvoke l0.<java.lang.Object: void <init>()>(),609,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 609))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,specialinvoke l0.<java.lang.Object: void <init>()>(),609,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 609)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.Long: java.lang.String toString(long)>,specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1),399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.Long: java.lang.String toString(long)>,specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1),399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.Long: java.lang.String toString(long)>,specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1),399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.Long: java.lang.String toString(long)>,specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1),399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0.<java.lang.String: char[] value> = l1,611,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, l0.<java.lang.String: char[] value> = l1, 611))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0.<java.lang.String: char[] value> = l1,611,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, l0.<java.lang.String: char[] value> = l1, 611)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)), SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0.<java.lang.String: char[] value> = l1,611,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, l0.<java.lang.String: char[] value> = l1, 611))
SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0.<java.lang.String: char[] value> = l1,611,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, l0.<java.lang.String: char[] value> = l1, 611))]
Confluence interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Confluence flows from execution of lines 298 and 301 to line 274, defined in userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>() and l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>() and used in $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode)
Caused by line 298 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)
Caused by line 301 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)
Caused by line 274 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)
Confluence interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Confluence flows from execution of lines 304 and 304 to line 274, defined in $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key) and $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key) and used in $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode)
Caused by line 304 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)
Caused by line 304 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)
Caused by line 274 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)
Confluence interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Confluence flows from execution of lines 301 and 298 to line 274, defined in l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>() and userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>() and used in $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode)
Caused by line 301 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)
Caused by line 298 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)
Caused by line 274 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236)
Confluence interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Confluence flows from execution of lines 298 and 301 to line 289, defined in userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>() and l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>() and used in $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53)
Caused by line 298 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)
Caused by line 301 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)
Caused by line 289 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)
 Analysis results
----------------------------
 Number of conflicts: 40
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/rabbitmq-flume-plugin/ed70b2c5c33b52017f2528a587894c01be750ed7/original-without-dependencies/rabbitmq-flume-plugin-1.0.3-customheaders-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,57800
Runtime: 0.015s
Time to perform OA Inter 0,67600
OA Inter Visited methods: 31
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/rabbitmq-flume-plugin/ed70b2c5c33b52017f2528a587894c01be750ed7/original-without-dependencies/rabbitmq-flume-plugin-1.0.3-customheaders-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,41900
Time to perform DFP Inter 0,54100
Depth limit: 5
CONFLICTS: DF interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Data flows from execution of line 298 to 307, defined in userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>() and propagated in interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, "")
Caused by line 298 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)
Caused by line 307 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ''), 307)
DF interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Data flows from execution of line 301 to 307, defined in $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>() and propagated in interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, "")
Caused by line 301 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)
Caused by line 307 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ''), 307)
DF interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Data flows from execution of line 301 to 302, defined in $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>() and propagated in value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)
Caused by line 301 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)
Caused by line 302 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)
DF interference in <com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>
Data flows from execution of line 298 to 302, defined in userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>() and propagated in value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)
Caused by line 298 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)
Caused by line 302 flow: path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)
[List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),302,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if value == null goto interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),303,SinkNode, path: )), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),302,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302))), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),302,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302))), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),302,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if value == null goto interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),303,SinkNode, path: )), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),307,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ''), 307))), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),307,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ''), 307)))]
Visited methods: 13
 Analysis results
----------------------------
 Number of conflicts: 6
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/rabbitmq-flume-plugin/ed70b2c5c33b52017f2528a587894c01be750ed7/original-without-dependencies/rabbitmq-flume-plugin-1.0.3-customheaders-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,58000
Time to perform DFP Inter 0,54100
Depth limit: 5
CONFLICTS: []
Visited methods: 13
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/rabbitmq-flume-plugin/ed70b2c5c33b52017f2528a587894c01be750ed7/original-without-dependencies/rabbitmq-flume-plugin-1.0.3-customheaders-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,44800
Time to perform PDG 0,61700
CONFLICTS: [List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if userHeaders == null goto return headers,300,SourceNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if $stack33 <= 0 goto return headers,312,SimpleNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),302,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if value == null goto interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),303,SinkNode, path: )), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if userHeaders == null goto return headers,300,SourceNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if $stack33 <= 0 goto return headers,312,SimpleNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),302,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if value == null goto interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),303,SinkNode, path: )), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if $stack37 == 0 goto return headers,301,SourceNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if value == null goto interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),303,SinkNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),307,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ''), 307))), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if userHeaders == null goto return headers,300,SourceNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if $stack33 <= 0 goto return headers,312,SimpleNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),302,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302))), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if userHeaders == null goto return headers,300,SourceNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if $stack33 <= 0 goto return headers,312,SimpleNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),307,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ''), 307))), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if $stack37 == 0 goto return headers,301,SourceNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if value == null goto interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),303,SinkNode, path: )), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if $stack37 == 0 goto return headers,301,SourceNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),302,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302))), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if userHeaders == null goto return headers,300,SourceNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if $stack33 <= 0 goto return headers,312,SimpleNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ""),307,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ''), 307))), List(Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if userHeaders == null goto return headers,300,SourceNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,if $stack33 <= 0 goto return headers,312,SimpleNode, path: ) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),302,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)))]
 Analysis results
----------------------------
 Number of conflicts: 9
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/rabbitmq-flume-plugin/ed70b2c5c33b52017f2528a587894c01be750ed7/original-without-dependencies/rabbitmq-flume-plugin-1.0.3-customheaders-0.1.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,56700
Time to perform PDG 0,46000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
