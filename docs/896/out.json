[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4),233,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": 233
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": 233
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
					"line": 233
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,specialinvoke l0.<java.lang.Object: void <init>()>(),609,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 609)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,specialinvoke l0.<java.lang.Object: void <init>()>(),609,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 609))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": 609
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 304
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": 609
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke l0.<java.lang.Object: void <init>()>()",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],boolean)>",
					"line": 609
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.Long: java.lang.String toString(long)>,specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1),399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.Long: java.lang.String toString(long)>,specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1),399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 304
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1)",
				"location": {
					"file": "",
					"class": "java.lang.Long",
					"method": "<java.lang.Long: java.lang.String toString(long)>",
					"line": 399
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3),315,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3), 315))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 315
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 315
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "staticinvoke <java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>(l0, l1, l4, 0, l3)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 315
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack1 = new java.lang.StringBuilder,236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>(), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@"),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('@'), 236)) => Node(<java.lang.Object: java.lang.String toString()>,$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 236))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = new java.lang.StringBuilder",
				"location": {
					"file": "",
					"class": "java.lang.Object",
					"method": "<java.lang.Object: java.lang.String toString()>",
					"line": 236
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0.<java.lang.Class: java.lang.String name> = $stack2,642,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236) => (<java.lang.Class: java.lang.String getName()>, l0.<java.lang.Class: java.lang.String name> = $stack2, 642))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>()",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 642
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String valueOf(long)>",
	"line": 3113
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String valueOf(long)>",
	"line": 3113
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String valueOf(long)>",
					"line": 3113
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 304
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack9 = $stack8 / l1",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 312
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1),318,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 318
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 318
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 318
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 304
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 304
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l4 = newarray (char)[l3]",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 313
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timestamp", $stack54),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('timestamp', $stack54), 289)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: java.lang.String valueOf(long)>,$stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0),3113,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53),289,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 304
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String valueOf(long)>",
	"line": 3113
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 289
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String valueOf(long)>",
	"line": 3113
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 289
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 289
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('timestamp', $stack54)",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 289
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 304
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
					"line": 311
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(),298,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack2 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>(), 236))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 298
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 298
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 304
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1 = l0.<java.lang.Class: java.lang.String name>",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 640
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0.<java.lang.String: char[] value> = l1,611,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, l0.<java.lang.String: char[] value> = l1, 611)) SINK=>BASE: Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(),301,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,key = (java.lang.String) $stack38,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)) => Node(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>,$stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key),304,SourceNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack42 = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 304)) => Node(<java.lang.Object: java.lang.String toString()>,l0 := @this: java.lang.Object,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994)) => Node(<java.lang.Object: java.lang.String toString()>,$stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(),236,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack6 = virtualinvoke l0.<java.lang.Object: int hashCode()>(), 236)) => Node(<java.lang.Integer: java.lang.String toHexString(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0),311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack6 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(l0), 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l2 = 32 - $stack6,311,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l2 = 32 - $stack6, 311)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack8 = l2 + $stack7,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack8 = l2 + $stack7, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,$stack9 = $stack8 / l1,312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, $stack9 = $stack8 / l1, 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1),312,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l3 = staticinvoke <java.lang.Math: int max(int,int)>($stack9, 1), 312)) => Node(<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>,l4 = newarray (char)[l3],313,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, l4 = newarray (char)[l3], 313)) => Node(<java.lang.String: void <init>(char[],boolean)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.Long: java.lang.String toString(long)>,$stack7 = new java.lang.String,399,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack71 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(deliveryMode), 274) => (<java.lang.String: java.lang.String valueOf(java.lang.Object)>, $stack1 = virtualinvoke l0.<java.lang.Object: java.lang.String toString()>(), 2994) => (<java.lang.Object: java.lang.String toString()>, $stack7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($stack6), 236) => (<java.lang.Integer: java.lang.String toHexString(int)>, $stack1 = staticinvoke <java.lang.Integer: java.lang.String toUnsignedString0(int,int)>(l0, 4), 233) => (<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>, specialinvoke $stack12.<java.lang.String: void <init>(char[],boolean)>(l4, 1), 318)) => Node(<java.lang.String: void <init>(char[],boolean)>,l0.<java.lang.String: char[] value> = l1,611,SinkNode, path: (<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($stack53), 289) => (<java.lang.String: java.lang.String valueOf(long)>, $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0), 3113) => (<java.lang.Long: java.lang.String toString(long)>, specialinvoke $stack7.<java.lang.String: void <init>(char[],boolean)>(l3, 1), 399) => (<java.lang.String: void <init>(char[],boolean)>, l0.<java.lang.String: char[] value> = l1, 611))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": 611
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
				"location": {
					"file": "",
					"class": "com.aweber.flume.source.rabbitmq.Consumer",
					"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
					"line": 301
				},
				"stackTrace": [{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 301
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 312
},{
	"class": "com.aweber.flume.source.rabbitmq.Consumer",
	"method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
	"line": 304
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Object",
	"method": "<java.lang.Object: java.lang.String toString()>",
	"line": 236
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toHexString(int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 311
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 312
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>",
	"line": 313
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.Long",
	"method": "<java.lang.Long: java.lang.String toString(long)>",
	"line": 399
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],boolean)>",
	"line": 611
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.String: char[] value> = l1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],boolean)>",
					"line": 611
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "key = (java.lang.String) $stack38",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "302"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "298"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "key = (java.lang.String) $stack38",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "302"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "298"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "key = (java.lang.String) $stack38",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "302"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if value == null goto interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, '')",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "303"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "key = (java.lang.String) $stack38",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, '')",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "307"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ''), 307)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "298"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, userHeaders = virtualinvoke props.<com.rabbitmq.client.AMQP$BasicProperties: java.util.Map getHeaders()>(), 298)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "key = (java.lang.String) $stack38",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, '')",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "307"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, ''), 307)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack35 = interfaceinvoke userHeaders.<java.util.Map: java.util.Set keySet()>(), 301)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "301"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, l16 = interfaceinvoke $stack35.<java.util.Set: java.util.Iterator iterator()>(), 301)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>()",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, $stack38 = interfaceinvoke l16.<java.util.Iterator: java.lang.Object next()>(), 312)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "key = (java.lang.String) $stack38",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "312"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, key = (java.lang.String) $stack38, 312)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key)",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "302"
},
"stackTrace": ["(<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>, value = interfaceinvoke userHeaders.<java.util.Map: java.lang.Object get(java.lang.Object)>(key), 302)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if value == null goto interfaceinvoke headers.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, '')",
"location": {
  "file": "",
  "class": "com.aweber.flume.source.rabbitmq.Consumer",
  "method": "<com.aweber.flume.source.rabbitmq.Consumer: java.util.Map buildHeaders(com.rabbitmq.client.AMQP$BasicProperties)>",
  "line": "303"
},
"stackTrace": [""]
}]
}
}

]
