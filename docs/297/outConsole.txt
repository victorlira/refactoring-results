Running soot scenario cglib;net.sf.cglib.proxy.Enhancer;wrapCachedClass(Class);e734a97d4a6ab4c04f82ba79996bf27b12f5156a
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cglib/e734a97d4a6ab4c04f82ba79996bf27b12f5156a/original-without-dependencies/benchmarks.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 2,08400
Time to perform Confluence 1 Inter 1,94500
Configure Soot Confluence 2 Inter 1,22700
Time to perform Confluence 2 Inter 0,84100
Visited methods: 46
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l0.<java.lang.Class: java.lang.String name> = $stack2,642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, l0.<java.lang.Class: java.lang.String name> = $stack2, 642))
SINK=>BASE: Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,$stack30 := @caughtexception,720,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,callbackFilterField#5 = $stack30,721,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)), SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->"),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->'), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack2 = new java.lang.StringBuilder,25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->"),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->'), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)), SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->"),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->'), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,$stack30 := @caughtexception,720,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,callbackFilterField#5 = $stack30,721,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->"),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->'), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)), SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130))
SINK=>BASE: Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,$stack30 := @caughtexception,720,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,callbackFilterField#5 = $stack30,721,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)), SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l0.<java.lang.Class: java.lang.String name> = $stack2,642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, l0.<java.lang.Class: java.lang.String name> = $stack2, 642))
SINK=>BASE: Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)), SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130))
SINK=>BASE: Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)), SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25))
SINK=>BASE: Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,$stack30 := @caughtexception,720,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,callbackFilterField#5 = $stack30,721,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25))]
Confluence interference in <net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>
Confluence flows from execution of lines 709 and 721 to line 709, defined in specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7) and callbackFilterField#5 = $stack30 and used in specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)
Caused by line 721 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)
Confluence interference in <net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>
Confluence flows from execution of lines 709 and 709 to line 709, defined in specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7) and specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7) and used in specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)
 Analysis results
----------------------------
 Number of conflicts: 7
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cglib/e734a97d4a6ab4c04f82ba79996bf27b12f5156a/original-without-dependencies/benchmarks.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 2,16400
Runtime: 0.172s
OA interference in class Enhancer, method java.lang.Object wrapCachedClass(java.lang.Class), execution of line 709 overrides 720, assigning to variable CodeGenerationException.<net.sf.cglib.core.CodeGenerationException: java.lang.Throwable cause>, 
Caused by line 709 flow:
at net.sf.cglib.proxy.Enhancer.wrapCachedClass(Enhancer.java:709)
at net.sf.cglib.proxy.Enhancer$EnhancerFactoryData.<init>(Enhancer$EnhancerFactoryData.java:420)
at net.sf.cglib.core.ReflectUtils.getConstructor(ReflectUtils.java:269)
And line 720 flow:
at net.sf.cglib.proxy.Enhancer.wrapCachedClass(Enhancer.java:720)
 
Time to perform OA Inter 3,68200
OA Inter Visited methods: 183
 Analysis results
----------------------------
 Number of conflicts: 10
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cglib/e734a97d4a6ab4c04f82ba79996bf27b12f5156a/original-without-dependencies/benchmarks.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 2,08100
Time to perform DFP Inter 1,86400
Depth limit: 5
CONFLICTS: DF interference in <net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>
Data flows from execution of line 709 to 709, defined in e = $stack7 and propagated in specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, e = $stack7, 422)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)
DF interference in <net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>
Data flows from execution of line 709 to 709, defined in $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->") and propagated in specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->'), 25)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)
DF interference in <net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>
Data flows from execution of line 709 to 709, defined in $stack5 = new net.sf.cglib.core.CodeGenerationException and propagated in specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)
DF interference in <net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>
Data flows from execution of line 709 to 709, defined in $stack8 = new net.sf.cglib.core.CodeGenerationException and propagated in specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, specialinvoke $stack8.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(e), 423)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)
DF interference in <net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>
Data flows from execution of line 709 to 709, defined in constructor#2 = $stack4 and propagated in specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)
[List(Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,$stack5 = new net.sf.cglib.core.CodeGenerationException,269,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,this := @this: net.sf.cglib.core.CodeGenerationException,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9),25,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25))), List(Node(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>,e = $stack7,422,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, e = $stack7, 422)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack2 = new java.lang.StringBuilder,25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(),25,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25))), List(Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->"),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->'), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9),25,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25))), List(Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack2 = new java.lang.StringBuilder,25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(),25,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25))), List(Node(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>,$stack8 = new net.sf.cglib.core.CodeGenerationException,423,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, specialinvoke $stack8.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(e), 423)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,this := @this: net.sf.cglib.core.CodeGenerationException,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9),25,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)))]
Visited methods: 23
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cglib/e734a97d4a6ab4c04f82ba79996bf27b12f5156a/original-without-dependencies/benchmarks.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 1,83100
Time to perform DFP Inter 1,63200
Depth limit: 5
CONFLICTS: DF interference in <net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>
Data flows from execution of line 720 to 709, defined in $stack31 = new net.sf.cglib.core.CodeGenerationException and propagated in specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9)
Caused by line 720 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack31.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(callbackFilterField#5), 720)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)
DF interference in <net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>
Data flows from execution of line 709 to 709, defined in $stack2 = new java.lang.StringBuilder and propagated in specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)
Caused by line 709 flow: path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)
[List(Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,$stack31 = new net.sf.cglib.core.CodeGenerationException,720,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack31.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(callbackFilterField#5), 720)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,this := @this: net.sf.cglib.core.CodeGenerationException,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9),25,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25))), List(Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack2 = new java.lang.StringBuilder,25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(),25,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)))]
Visited methods: 23
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cglib/e734a97d4a6ab4c04f82ba79996bf27b12f5156a/original-without-dependencies/benchmarks.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 1,84200
Time to perform PDG 1,75900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/cglib/e734a97d4a6ab4c04f82ba79996bf27b12f5156a/original-without-dependencies/benchmarks.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 1,76700
Time to perform PDG 1,42300
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
