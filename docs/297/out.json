[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->"),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->'), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) SINK=>BASE: Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,$stack30 := @caughtexception,720,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,callbackFilterField#5 = $stack30,721,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->"),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->'), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 25)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack30 := @caughtexception",
				"location": {
					"file": "",
					"class": "net.sf.cglib.proxy.Enhancer",
					"method": "<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>",
					"line": 720
				},
				"stackTrace": [{
	"class": "net.sf.cglib.proxy.Enhancer",
	"method": "<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>",
	"line": 720
},{
	"class": "net.sf.cglib.proxy.Enhancer",
	"method": "<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>",
	"line": 721
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String getMessage()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String getMessage()>",
	"line": 377
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": 62
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "constructor#2 = $stack4",
				"location": {
					"file": "",
					"class": "net.sf.cglib.core.ReflectUtils",
					"method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
					"line": 268
				},
				"stackTrace": [{
	"class": "net.sf.cglib.core.ReflectUtils",
	"method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
	"line": 268
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.RuntimeException",
	"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
	"line": 62
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1)",
				"location": {
					"file": "",
					"class": "java.lang.RuntimeException",
					"method": "<java.lang.RuntimeException: void <init>(java.lang.String)>",
					"line": 62
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l0.<java.lang.Class: java.lang.String name> = $stack2,642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, l0.<java.lang.Class: java.lang.String name> = $stack2, 642)) SINK=>BASE: Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>()",
				"location": {
					"file": "",
					"class": "net.sf.cglib.core.CodeGenerationException",
					"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
					"line": 25
				},
				"stackTrace": [{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "constructor#2 = $stack4",
				"location": {
					"file": "",
					"class": "net.sf.cglib.core.ReflectUtils",
					"method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
					"line": 268
				},
				"stackTrace": [{
	"class": "net.sf.cglib.core.ReflectUtils",
	"method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
	"line": 268
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Class: java.lang.String name> = $stack2",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 642
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) SINK=>BASE: Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(),25,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63) => (<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809) => (<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>()",
				"location": {
					"file": "",
					"class": "net.sf.cglib.core.CodeGenerationException",
					"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
					"line": 25
				},
				"stackTrace": [{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "constructor#2 = $stack4",
				"location": {
					"file": "",
					"class": "net.sf.cglib.core.ReflectUtils",
					"method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
					"line": 268
				},
				"stackTrace": [{
	"class": "net.sf.cglib.core.ReflectUtils",
	"method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
	"line": 268
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": 25
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1 = l0.<java.lang.Class: java.lang.String name>",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 640
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>,constructor#2 = $stack4,268,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) SINK=>BASE: Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,$stack30 := @caughtexception,720,SourceNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>,callbackFilterField#5 = $stack30,721,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, callbackFilterField#5 = $stack30, 721)) => Node(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>,cause := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709) => (<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420) => (<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269) => (<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>(), 25))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack30 := @caughtexception",
				"location": {
					"file": "",
					"class": "net.sf.cglib.proxy.Enhancer",
					"method": "<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>",
					"line": 720
				},
				"stackTrace": [{
	"class": "net.sf.cglib.proxy.Enhancer",
	"method": "<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>",
	"line": 720
},{
	"class": "net.sf.cglib.proxy.Enhancer",
	"method": "<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>",
	"line": 721
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String getMessage()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String getMessage()>",
	"line": 377
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "constructor#2 = $stack4",
				"location": {
					"file": "",
					"class": "net.sf.cglib.core.ReflectUtils",
					"method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
					"line": 268
				},
				"stackTrace": [{
	"class": "net.sf.cglib.core.ReflectUtils",
	"method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
	"line": 268
},{
	"class": "net.sf.cglib.core.CodeGenerationException",
	"method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String getMessage()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String getMessage()>",
	"line": 377
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: java.lang.String getMessage()>",
					"line": 377
				}
			}
		]
	}
}

,

{
	"type": "OAINTER",
	"label": "OA conflict",
	"body": {
		"description": "CodeGenerationException.<net.sf.cglib.core.CodeGenerationException: java.lang.Throwable cause> - CodeGenerationException.<net.sf.cglib.core.CodeGenerationException: java.lang.Throwable cause>",
		"interference": [
			{
				"type": "declaration",
				"branch": "L",
				"text": "CodeGenerationException.<net.sf.cglib.core.CodeGenerationException: java.lang.Throwable cause> = null",
				"location": {
					"file": "",
					"class": "net.sf.cglib.core.CodeGenerationException",
					"method": "<init>",
					"line": -1
				},
				"stackTrace": [{
	"class": "net.sf.cglib.proxy.Enhancer",
	"method": "wrapCachedClass",
	"line": 709
},{
	"class": "net.sf.cglib.proxy.Enhancer$EnhancerFactoryData",
	"method": "<init>",
	"line": 420
},{
	"class": "net.sf.cglib.core.ReflectUtils",
	"method": "getConstructor",
	"line": 269
}]
			},
			{
				"type": "override",
				"branch": "R",
				"text": "CodeGenerationException.<net.sf.cglib.core.CodeGenerationException: java.lang.Throwable cause> = null",
				"location": {
					"file": "",
					"class": "net.sf.cglib.core.CodeGenerationException",
					"method": "<init>",
					"line": -1
				},
				"stackTrace": [{
	"class": "net.sf.cglib.proxy.Enhancer",
	"method": "wrapCachedClass",
	"line": 720
}]
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "e = $stack7",
"location": {
  "file": "",
  "class": "net.sf.cglib.proxy.Enhancer$EnhancerFactoryData",
  "method": "<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>",
  "line": "422"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, e = $stack7, 422)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "cause := @parameter0: java.lang.Throwable",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "-1"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>()",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0 := @this: java.lang.Class",
"location": {
  "file": "",
  "class": "java.lang.Class",
  "method": "<java.lang.Class: java.lang.String getName()>",
  "line": "-1"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414)","(<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63)","(<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809)","(<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 = l0.<java.lang.Class: java.lang.String name>",
"location": {
  "file": "",
  "class": "java.lang.Class",
  "method": "<java.lang.Class: java.lang.String getName()>",
  "line": "640"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414)","(<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63)","(<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809)","(<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack8 = new net.sf.cglib.core.CodeGenerationException",
"location": {
  "file": "",
  "class": "net.sf.cglib.proxy.Enhancer$EnhancerFactoryData",
  "method": "<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>",
  "line": "423"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, specialinvoke $stack8.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(e), 423)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: net.sf.cglib.core.CodeGenerationException",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "-1"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->')",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('-->'), 25)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7), 25)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 25)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = new net.sf.cglib.core.CodeGenerationException",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.ReflectUtils",
  "method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
  "line": "269"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: net.sf.cglib.core.CodeGenerationException",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "-1"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "constructor#2 = $stack4",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.ReflectUtils",
  "method": "<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>",
  "line": "268"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, constructor#2 = $stack4, 268)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "cause := @parameter0: java.lang.Throwable",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "-1"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>()",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack3 = virtualinvoke cause.<java.lang.Object: java.lang.Class getClass()>(), 25)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0 := @this: java.lang.Class",
"location": {
  "file": "",
  "class": "java.lang.Class",
  "method": "<java.lang.Class: java.lang.String getName()>",
  "line": "-1"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414)","(<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63)","(<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809)","(<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 = l0.<java.lang.Class: java.lang.String name>",
"location": {
  "file": "",
  "class": "java.lang.Class",
  "method": "<java.lang.Class: java.lang.String getName()>",
  "line": "640"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack5 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>(generatedClass, 'CGLIB$SET_THREAD_CALLBACKS'), 414)","(<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method access$000(java.lang.Class,java.lang.String)>, $stack2 = staticinvoke <net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>(x0, x1), 63)","(<net.sf.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)>, $stack3 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, $stack2), 809)","(<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>, $stack10 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2130)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 25)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack2 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack31 = new net.sf.cglib.core.CodeGenerationException",
"location": {
  "file": "",
  "class": "net.sf.cglib.proxy.Enhancer",
  "method": "<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>",
  "line": "720"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack31.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(callbackFilterField#5), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: net.sf.cglib.core.CodeGenerationException",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "-1"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9), 25)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = new java.lang.StringBuilder",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()",
"location": {
  "file": "",
  "class": "net.sf.cglib.core.CodeGenerationException",
  "method": "<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>",
  "line": "25"
},
"stackTrace": ["(<net.sf.cglib.proxy.Enhancer: java.lang.Object wrapCachedClass(java.lang.Class)>, specialinvoke $stack6.<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>(klass, argumentTypes, $stack7), 709)","(<net.sf.cglib.proxy.Enhancer$EnhancerFactoryData: void <init>(java.lang.Class,java.lang.Class[],boolean)>, $stack6 = staticinvoke <net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(generatedClass, primaryConstructorArgTypes), 420)","(<net.sf.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>, specialinvoke $stack5.<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>(constructor#2), 269)","(<net.sf.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>, specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>(), 25)"]
}]
}
}

]
