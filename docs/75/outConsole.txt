Running soot scenario jira-client;net.rcarz.jiraclient.Field;toJson(String, Object, JSONObject);ae6e7fd9c5d3ab805026c00491f9e6265694a36e
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/ae6e7fd9c5d3ab805026c00491f9e6265694a36e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,71600
Time to perform Confluence 1 Inter 0,93700
Configure Soot Confluence 2 Inter 0,18000
Time to perform Confluence 2 Inter 0,50100
Visited methods: 46
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("number"),731,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>('number'), 731))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 714)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 714)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>("timetracking"),726,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack74 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>('timetracking'), 726)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack74 == 0 goto $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SinkNode, path: )
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 714)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,726,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 714)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 714)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 714)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack8 = l0.<java.lang.String: char[] value>,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack8 = l0.<java.lang.String: char[] value>, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = lengthof $stack8,982,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, l3 = lengthof $stack8, 982)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l3 = l3 + -1,987,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack12 = l3,987,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack12 = l3, 987)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SinkNode, path: )
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,715,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack68 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>("securitylevel"),715,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack69 = virtualinvoke $stack68.<java.lang.String: boolean equals(java.lang.Object)>('securitylevel'), 715)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack69 != 0 goto (branch),715,SinkNode, path: ), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 714))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 714)), SOURCE=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack34 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 692)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,701,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,731,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack79 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,740,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack79 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 740)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack78 = new java.lang.StringBuilder,740,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, specialinvoke $stack78.<java.lang.StringBuilder: void <init>()>(), 740))
SINK=>BASE: Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,714,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack71 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 714)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack79 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,740,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack79 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 740))]
Confluence interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Confluence flows from execution of lines 689 and 713 to line 731, defined in $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and used in $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>
Caused by line 689 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)
Caused by line 713 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)
Caused by line 731 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack75 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 731)
Confluence interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Confluence flows from execution of lines 689 and 713 to line 663, defined in $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and used in $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>("array")
Caused by line 689 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)
Caused by line 713 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)
Caused by line 663 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>('array'), 663) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988)
Confluence interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Confluence flows from execution of lines 689 and 713 to line 726, defined in $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and used in $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>
Caused by line 689 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)
Caused by line 713 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)
Caused by line 726 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack73 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 726)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/ae6e7fd9c5d3ab805026c00491f9e6265694a36e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,56900
Runtime: 0.018s
Time to perform OA Inter 0,65500
OA Inter Visited methods: 27
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/ae6e7fd9c5d3ab805026c00491f9e6265694a36e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,60700
Time to perform DFP Inter 0,85700
Depth limit: 5
CONFLICTS: DF interference in <net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>
Data flows from execution of line 689 to 713, defined in $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type> and propagated in $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("string")
Caused by line 689 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)
Caused by line 713 flow: path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('string'), 713)
[List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack32 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,713,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>, 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("string"),713,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('string'), 713)))]
Visited methods: 23
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/ae6e7fd9c5d3ab805026c00491f9e6265694a36e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,43000
Time to perform DFP Inter 0,88800
Depth limit: 5
CONFLICTS: []
Visited methods: 23
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/ae6e7fd9c5d3ab805026c00491f9e6265694a36e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,45300
Time to perform PDG 0,72700
CONFLICTS: [List(Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("user"),689,SourceNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>('user'), 689)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack33 != 0 goto $stack16 = new net.sf.json.JSONObject,689,SourceNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack35 != 0 goto $stack16 = new net.sf.json.JSONObject,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack37 == 0 goto $stack38 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,692,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>("project"),701,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack39 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>('project'), 701)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack39 != 0 goto $stack40 = new net.sf.json.JSONObject,701,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("issuelink"),705,SimpleNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>('issuelink'), 705)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack54 == 0 goto $stack55 = m.<net.rcarz.jiraclient.Field$Meta: java.lang.String type>,705,SimpleNode, path: ) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,$stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("string"),713,SinkNode, path: (<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>, $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>('string'), 713)) => Node(<net.rcarz.jiraclient.Field: java.lang.Object toJson(java.lang.String,java.lang.Object,net.sf.json.JSONObject)>,if $stack56 != 0 goto (branch),713,SinkNode, path: ))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jira-client/ae6e7fd9c5d3ab805026c00491f9e6265694a36e/original-without-dependencies/jira-client-0.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,44000
Time to perform PDG 0,68000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
