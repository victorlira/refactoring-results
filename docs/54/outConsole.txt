Running soot scenario coverity-plugin;jenkins.plugins.coverity.CoverityTool.CoverityToolHandler;perform(AbstractBuild<?,?>, Launcher, BuildListener, CoverityPublisher);834a107594f7484029ebc2b3e6bc3e44986a2ef7
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/834a107594f7484029ebc2b3e6bc3e44986a2ef7/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,67800
Time to perform Confluence 1 Inter 10,07800
Configure Soot Confluence 2 Inter 0,22900
Time to perform Confluence 2 Inter 7,14300
Visited methods: 290
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/834a107594f7484029ebc2b3e6bc3e44986a2ef7/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,66700
Runtime: 2.114s
Time to perform OA Inter 3,08800
OA Inter Visited methods: 2266
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/834a107594f7484029ebc2b3e6bc3e44986a2ef7/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,83100
Time to perform DFP Inter 5,12300
Depth limit: 5
CONFLICTS: []
Visited methods: 145
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/834a107594f7484029ebc2b3e6bc3e44986a2ef7/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,63000
Time to perform DFP Inter 4,83700
Depth limit: 5
CONFLICTS: []
Visited methods: 132
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/834a107594f7484029ebc2b3e6bc3e44986a2ef7/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,50100
Time to perform PDG 1,48300
CONFLICTS: [List(Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,covBuildScriptCommand = $stack41,79,SourceNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, covBuildScriptCommand = $stack41, 79)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = virtualinvoke covBuildScriptCommand.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),80,SourceNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = virtualinvoke covBuildScriptCommand.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 80)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack43 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,82,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack49 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,98,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = virtualinvoke covBuildScriptCommand#62.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),112,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = virtualinvoke covBuildScriptCommand#62.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 112)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack55 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,114,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack61 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack63 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),139,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack63 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 139)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,covBuildScriptCommand#70 = interfaceinvoke $stack63.<java.util.List: java.util.Iterator iterator()>(),139,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, covBuildScriptCommand#70 = interfaceinvoke $stack63.<java.util.List: java.util.Iterator iterator()>(), 139)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = interfaceinvoke covBuildScriptCommand#70.<java.util.Iterator: boolean hasNext()>(),139,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = interfaceinvoke covBuildScriptCommand#70.<java.util.Iterator: boolean hasNext()>(), 139)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,139,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack70 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,165,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack74 = new jenkins.plugins.coverity.CoverityTool.CovAnalyzeCommand,178,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack74.<jenkins.plugins.coverity.CoverityTool.CovAnalyzeCommand: void <init>(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.TaskListener,jenkins.plugins.coverity.CoverityPublisher,java.lang.String,hudson.EnvVars)>(build, launcher, listener, publisher, home, envVars), 178)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,covBuildScriptCommand#79 = $stack74,178,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, covBuildScriptCommand#79 = $stack74, 178)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = virtualinvoke covBuildScriptCommand#79.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),179,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = virtualinvoke covBuildScriptCommand#79.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 179)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack76 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,181,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack80 = new jenkins.plugins.coverity.CoverityTool.PostCovAnalyzeCommand,194,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack80.<jenkins.plugins.coverity.CoverityTool.PostCovAnalyzeCommand: void <init>(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.TaskListener,jenkins.plugins.coverity.CoverityPublisher,hudson.EnvVars)>(build, launcher, listener, publisher, envVars), 194)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,covBuildScriptCommand#82 = $stack80,194,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, covBuildScriptCommand#82 = $stack80, 194)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = virtualinvoke covBuildScriptCommand#82.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),195,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = virtualinvoke covBuildScriptCommand#82.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 195)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack82 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,197,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack85 = virtualinvoke temp.<jenkins.plugins.coverity.CoverityTempDir: hudson.FilePath getTempDir()>(),209,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack85 = virtualinvoke temp.<jenkins.plugins.coverity.CoverityTempDir: hudson.FilePath getTempDir()>(), 209)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack86 = virtualinvoke $stack85.<hudson.FilePath: java.lang.String getRemote()>(),209,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack86 = virtualinvoke $stack85.<hudson.FilePath: java.lang.String getRemote()>(), 209)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,covBuildScriptCommand#85 = virtualinvoke this.<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: java.io.File[] findMsvscaOutputFiles(java.lang.String)>($stack86),209,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, covBuildScriptCommand#85 = virtualinvoke this.<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: java.io.File[] findMsvscaOutputFiles(java.lang.String)>($stack86), 209)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack133 = lengthof covBuildScriptCommand#85,241,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack133 = lengthof covBuildScriptCommand#85, 241)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack133 != 0 goto $stack134 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,241,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#86 = $stack136,215,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#86 = $stack136, 215)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cim#87 = virtualinvoke result#86.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),216,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cim#87 = virtualinvoke result#86.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 216)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cim#87 == 0 goto $stack138 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,218,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack91 == 0 goto $stack92 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isKeepIntDir()>(),230,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack92 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isKeepIntDir()>(),248,SinkNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack92 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isKeepIntDir()>(), 248))), List(Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = virtualinvoke covBuildScriptCommand.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),80,SourceNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = virtualinvoke covBuildScriptCommand.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 80)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack43 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,82,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack49 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,98,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = virtualinvoke covBuildScriptCommand#62.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),112,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = virtualinvoke covBuildScriptCommand#62.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 112)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack55 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,114,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack61 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,129,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack63 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),139,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack63 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 139)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,covBuildScriptCommand#70 = interfaceinvoke $stack63.<java.util.List: java.util.Iterator iterator()>(),139,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, covBuildScriptCommand#70 = interfaceinvoke $stack63.<java.util.List: java.util.Iterator iterator()>(), 139)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = interfaceinvoke covBuildScriptCommand#70.<java.util.Iterator: boolean hasNext()>(),139,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = interfaceinvoke covBuildScriptCommand#70.<java.util.Iterator: boolean hasNext()>(), 139)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,139,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack70 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,165,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack74 = new jenkins.plugins.coverity.CoverityTool.CovAnalyzeCommand,178,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack74.<jenkins.plugins.coverity.CoverityTool.CovAnalyzeCommand: void <init>(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.TaskListener,jenkins.plugins.coverity.CoverityPublisher,java.lang.String,hudson.EnvVars)>(build, launcher, listener, publisher, home, envVars), 178)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,covBuildScriptCommand#79 = $stack74,178,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, covBuildScriptCommand#79 = $stack74, 178)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = virtualinvoke covBuildScriptCommand#79.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),179,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = virtualinvoke covBuildScriptCommand#79.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 179)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack76 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,181,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack80 = new jenkins.plugins.coverity.CoverityTool.PostCovAnalyzeCommand,194,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack80.<jenkins.plugins.coverity.CoverityTool.PostCovAnalyzeCommand: void <init>(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.TaskListener,jenkins.plugins.coverity.CoverityPublisher,hudson.EnvVars)>(build, launcher, listener, publisher, envVars), 194)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,covBuildScriptCommand#82 = $stack80,194,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, covBuildScriptCommand#82 = $stack80, 194)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = virtualinvoke covBuildScriptCommand#82.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),195,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = virtualinvoke covBuildScriptCommand#82.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 195)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result == 0 goto $stack82 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,197,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack85 = virtualinvoke temp.<jenkins.plugins.coverity.CoverityTempDir: hudson.FilePath getTempDir()>(),209,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack85 = virtualinvoke temp.<jenkins.plugins.coverity.CoverityTempDir: hudson.FilePath getTempDir()>(), 209)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack86 = virtualinvoke $stack85.<hudson.FilePath: java.lang.String getRemote()>(),209,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack86 = virtualinvoke $stack85.<hudson.FilePath: java.lang.String getRemote()>(), 209)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,covBuildScriptCommand#85 = virtualinvoke this.<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: java.io.File[] findMsvscaOutputFiles(java.lang.String)>($stack86),209,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, covBuildScriptCommand#85 = virtualinvoke this.<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: java.io.File[] findMsvscaOutputFiles(java.lang.String)>($stack86), 209)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack133 = lengthof covBuildScriptCommand#85,241,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack133 = lengthof covBuildScriptCommand#85, 241)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack133 != 0 goto $stack134 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,241,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#86 = $stack136,215,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#86 = $stack136, 215)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cim#87 = virtualinvoke result#86.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(),216,SimpleNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cim#87 = virtualinvoke result#86.<jenkins.plugins.coverity.CoverityTool.Command: int runCommand()>(), 216)) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cim#87 == 0 goto $stack138 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal CoverityPostBuildAction>,218,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack91 == 0 goto $stack92 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isKeepIntDir()>(),230,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack92 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isKeepIntDir()>(),248,SinkNode, path: (<jenkins.plugins.coverity.CoverityTool.CoverityToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack92 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isKeepIntDir()>(), 248)))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/834a107594f7484029ebc2b3e6bc3e44986a2ef7/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,54100
Time to perform PDG 1,45600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
