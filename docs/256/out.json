[
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack3",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = this.<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: com.nuodb.migrator.jdbc.metadata.Identifier identifier>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack2 = this.<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: com.nuodb.migrator.jdbc.metadata.Identifier identifier>, 76)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: com.nuodb.migrator.jdbc.metadata.Identifier",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack1",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack3",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": [""]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack13 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>(tableName), 81)","(<com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source), 47)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: int length()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack13 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>(tableName), 81)","(<com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source), 47)","(<com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: int length()>(), 43)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 := @parameter0: char[]",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: void <init>(char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, specialinvoke $stack13.<java.lang.String: void <init>(char[])>(buffer), 134)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2)",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: void <init>(char[])>",
  "line": "166"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, specialinvoke $stack13.<java.lang.String: void <init>(char[])>(buffer), 134)","(<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = new java.lang.String",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "134"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "64"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47), 64)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "64"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47), 64)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 := @parameter0: char[]",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: void <init>(char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, specialinvoke $stack13.<java.lang.String: void <init>(char[])>(buffer), 134)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2)",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: void <init>(char[])>",
  "line": "166"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, specialinvoke $stack13.<java.lang.String: void <init>(char[])>(buffer), 134)","(<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = new java.lang.String",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "134"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "121"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>(source, null)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "115"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(column#3)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "77"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(column#3), 77)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "121"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>(source, null)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "115"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "84"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "75"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31), 75)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 111)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<java.lang.String: java.lang.String toUpperCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "86"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "ch := @parameter0: char",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(ch)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "96"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tableName)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "62"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tableName), 62)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "120"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack7 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source), 120)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack13 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>(tableName), 81)","(<com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source), 47)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: int length()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack13 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>(tableName), 81)","(<com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source), 47)","(<com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: int length()>(), 43)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack3",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "121"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>(source, null)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "115"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "121"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "121"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>(source, null)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "115"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "75"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31), 75)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "ch := @parameter0: char",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(ch)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "96"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "127"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(column#3)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "77"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(column#3), 77)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "ch := @parameter0: char",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(ch)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "96"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "127"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "70"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34), 70)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "82"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>(buffer), 82)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "88"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>(), 88)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 111)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<java.lang.String: java.lang.String toUpperCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "86"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return column#3",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "90"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 111)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<java.lang.String: java.lang.String toUpperCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "86"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack45)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "63"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack45), 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 111)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<java.lang.String: java.lang.String toUpperCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "86"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return column#3",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "90"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "72"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>(buffer), 82)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>",
  "line": "107"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>(buffer), 82)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 107)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack13 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>(tableName), 81)","(<com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source), 47)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: int length()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack13 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>(tableName), 81)","(<com.nuodb.migrator.utils.StringUtils: boolean isLowerCase(java.lang.CharSequence)>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source), 47)","(<com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: int length()>(), 43)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tableName)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "62"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tableName), 62)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "120"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack7 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source), 120)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "75"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31), 75)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack3",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack45)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "63"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack45), 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "70"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34), 70)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 111)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<java.lang.String: java.lang.String toUpperCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "86"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>(buffer), 82)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>",
  "line": "107"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>(buffer), 82)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 107)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "121"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "ch := @parameter0: char",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(ch)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "96"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>(buffer), 82)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>",
  "line": "107"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>(buffer), 82)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String lowerCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 107)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 111)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = virtualinvoke $stack1.<java.lang.String: java.lang.String toUpperCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "86"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return column#3",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "90"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 111)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = lengthof buffer",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "125"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack12 = lengthof buffer, 125)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "88"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>(), 88)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 111)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "72"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "ch := @parameter0: char",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(ch)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "96"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "127"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "ch := @parameter0: char",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(ch)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>",
  "line": "96"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack14 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isDelimiter(char,char[])>(ch, delimiters), 127)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack45)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "63"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack45), 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 := @parameter0: char[]",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: void <init>(char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, specialinvoke $stack13.<java.lang.String: void <init>(char[])>(buffer), 134)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2)",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: void <init>(char[])>",
  "line": "166"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, specialinvoke $stack13.<java.lang.String: void <init>(char[])>(buffer), 134)","(<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = new java.lang.String",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "134"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "70"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34), 70)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0 := @parameter0: char",
"location": {
  "file": "",
  "class": "java.lang.Character",
  "method": "<java.lang.Character: char toTitleCase(char)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = staticinvoke <java.lang.Character: int toTitleCase(int)>(l0)",
"location": {
  "file": "",
  "class": "java.lang.Character",
  "method": "<java.lang.Character: char toTitleCase(char)>",
  "line": "6430"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)","(<java.lang.Character: char toTitleCase(char)>, $stack1 = staticinvoke <java.lang.Character: int toTitleCase(int)>(l0), 6430)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack2 = (char) $stack1",
"location": {
  "file": "",
  "class": "java.lang.Character",
  "method": "<java.lang.Character: char toTitleCase(char)>",
  "line": "6430"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "130"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "72"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25), 72)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = lengthof buffer",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "125"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack12 = lengthof buffer, 125)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0 := @parameter0: char",
"location": {
  "file": "",
  "class": "java.lang.Character",
  "method": "<java.lang.Character: char toTitleCase(char)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = staticinvoke <java.lang.Character: int toTitleCase(int)>(l0)",
"location": {
  "file": "",
  "class": "java.lang.Character",
  "method": "<java.lang.Character: char toTitleCase(char)>",
  "line": "6430"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)","(<java.lang.Character: char toTitleCase(char)>, $stack1 = staticinvoke <java.lang.Character: int toTitleCase(int)>(l0), 6430)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack2 = (char) $stack1",
"location": {
  "file": "",
  "class": "java.lang.Character",
  "method": "<java.lang.Character: char toTitleCase(char)>",
  "line": "6430"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "130"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "121"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>(source, null)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "115"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "84"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "ch = buffer[i]",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "126"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, ch = buffer[i], 126)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0 := @parameter0: char",
"location": {
  "file": "",
  "class": "java.lang.Character",
  "method": "<java.lang.Character: char toTitleCase(char)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = staticinvoke <java.lang.Character: int toTitleCase(int)>(l0)",
"location": {
  "file": "",
  "class": "java.lang.Character",
  "method": "<java.lang.Character: char toTitleCase(char)>",
  "line": "6430"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)","(<java.lang.Character: char toTitleCase(char)>, $stack1 = staticinvoke <java.lang.Character: int toTitleCase(int)>(l0), 6430)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack2 = (char) $stack1",
"location": {
  "file": "",
  "class": "java.lang.Character",
  "method": "<java.lang.Character: char toTitleCase(char)>",
  "line": "6430"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "130"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack17 = staticinvoke <java.lang.Character: char toTitleCase(char)>(ch), 130)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "64"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47), 64)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "121"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>(source, null)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "115"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "84"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>",
  "line": "111"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>(buffer), 86)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String upperCase(java.lang.CharSequence)>, $stack1 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 111)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value>",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.Identifier",
  "method": "<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>",
  "line": "43"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)","(<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>, $stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>(), 76)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<com.nuodb.migrator.jdbc.metadata.Identifier: java.lang.String value()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack8 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "121"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tableName)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "62"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tableName), 62)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(column#3)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "77"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(column#3), 77)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "column#3 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "88"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>(), 88)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = null",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.IdentifiableBase",
  "method": "<com.nuodb.migrator.jdbc.metadata.IdentifiableBase: java.lang.String getName()>",
  "line": "76"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source)",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "120"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack7 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isEmpty(java.lang.CharSequence)>(source), 120)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "66"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = virtualinvoke sequence.<com.nuodb.migrator.jdbc.metadata.Sequence: java.lang.String getName()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = $stack8",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy",
  "method": "<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>",
  "line": "56"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, buffer = $stack8, 56)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, column#3 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence)>(buffer), 84)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "source := @parameter0: java.lang.CharSequence",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "-1"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack9 = interfaceinvoke source.<java.lang.CharSequence: java.lang.String toString()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>()",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "123"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, buffer = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>(), 123)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = lengthof buffer",
"location": {
  "file": "",
  "class": "com.nuodb.migrator.utils.StringUtils",
  "method": "<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>",
  "line": "125"
},
"stackTrace": ["(<com.nuodb.migrator.jdbc.metadata.generator.SequenceQualifyNamingStrategy: java.lang.String getNonPrefixedName(com.nuodb.migrator.jdbc.metadata.Sequence,com.nuodb.migrator.jdbc.metadata.generator.ScriptGeneratorManager)>, $stack15 = staticinvoke <com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>(tableName, $stack14), 83)","(<com.nuodb.migrator.utils.StringUtils: boolean isCapitalizedCase(java.lang.CharSequence,char[])>, $stack4 = staticinvoke <com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>($stack3, delimiters), 75)","(<com.nuodb.migrator.utils.StringUtils: java.lang.String capitalizedCase(java.lang.CharSequence,char[])>, $stack12 = lengthof buffer, 125)"]
}]
}
}

]
