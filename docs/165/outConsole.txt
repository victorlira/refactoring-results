Running soot scenario spark;spark.route.SimpleRouteMatcher;parseValidateAddRoute(String, Object);0de6842695fde634bdff38d3eab77b7802c8ffb3
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/0de6842695fde634bdff38d3eab77b7802c8ffb3/original-without-dependencies/spark-core-0.9.9.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,39000
Time to perform Confluence 1 Inter 0,81600
Configure Soot Confluence 2 Inter 0,13600
Time to perform Confluence 2 Inter 0,32700
Visited methods: 66
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,$stack6 = new spark.route.SimpleRouteMatcher$RouteEntry,238,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke $stack6.<spark.route.SimpleRouteMatcher$RouteEntry: void <init>(spark.route.SimpleRouteMatcher$1)>(null), 238)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,entry = $stack6,238,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, entry = $stack6, 238)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url),240,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240))
SINK=>BASE: Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack14 = virtualinvoke route.<java.lang.String: int length()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack14 = virtualinvoke route.<java.lang.String: int length()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,url := @parameter1: java.lang.String,-1,SimpleNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url),240,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240))]
Confluence interference in <spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>
Confluence flows from execution of lines 230 and 216 to line 230, defined in specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target) and $stack14 = virtualinvoke route.<java.lang.String: int length()>() and used in specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target)
Caused by line 230 flow: path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke $stack6.<spark.route.SimpleRouteMatcher$RouteEntry: void <init>(spark.route.SimpleRouteMatcher$1)>(null), 238)
Caused by line 216 flow: path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack14 = virtualinvoke route.<java.lang.String: int length()>(), 216)
Caused by line 230 flow: path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240)
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/0de6842695fde634bdff38d3eab77b7802c8ffb3/original-without-dependencies/spark-core-0.9.9.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,72500
Runtime: 0.013s
Time to perform OA Inter 0,80800
OA Inter Visited methods: 16
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/0de6842695fde634bdff38d3eab77b7802c8ffb3/original-without-dependencies/spark-core-0.9.9.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,43600
Time to perform DFP Inter 0,59600
Depth limit: 5
CONFLICTS: []
Visited methods: 33
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/0de6842695fde634bdff38d3eab77b7802c8ffb3/original-without-dependencies/spark-core-0.9.9.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,46000
Time to perform DFP Inter 0,67500
Depth limit: 5
CONFLICTS: DF interference in <spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>
Data flows from execution of line 216 to 230, defined in $stack15 = $stack14 - 1 and propagated in staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url)
Caused by line 216 flow: path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)
Caused by line 230 flow: path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240)
DF interference in <spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>
Data flows from execution of line 216 to 230, defined in $stack15 = $stack14 - 1 and propagated in specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target)
Caused by line 216 flow: path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)
Caused by line 230 flow: path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)
DF interference in <spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>
Data flows from execution of line 216 to 230, defined in $stack15 = $stack14 - 1 and propagated in x0.<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String path> = x1
Caused by line 216 flow: path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)
Caused by line 230 flow: path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240) => (<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>, x0.<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String path> = x1, 39)
[List(Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target),230,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230))), List(Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,url := @parameter1: java.lang.String,-1,SimpleNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url),240,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240))), List(Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,url := @parameter1: java.lang.String,-1,SimpleNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)) => Node(<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>,x1 := @parameter1: java.lang.String,-1,SimpleNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240)) => Node(<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>,x0.<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String path> = x1,39,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240) => (<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>, x0.<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String path> = x1, 39)))]
Visited methods: 33
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/0de6842695fde634bdff38d3eab77b7802c8ffb3/original-without-dependencies/spark-core-0.9.9.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,38200
Time to perform PDG 0,33000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/spark/0de6842695fde634bdff38d3eab77b7802c8ffb3/original-without-dependencies/spark-core-0.9.9.7-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,39600
Time to perform PDG 0,33500
CONFLICTS: [List(Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target),230,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
