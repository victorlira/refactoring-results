SOURCE=>BASE: Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,$stack6 = new spark.route.SimpleRouteMatcher$RouteEntry,238,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke $stack6.<spark.route.SimpleRouteMatcher$RouteEntry: void <init>(spark.route.SimpleRouteMatcher$1)>(null), 238)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,entry = $stack6,238,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, entry = $stack6, 238)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url),240,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240))
SINK=>BASE: Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack14 = virtualinvoke route.<java.lang.String: int length()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack14 = virtualinvoke route.<java.lang.String: int length()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,url := @parameter1: java.lang.String,-1,SimpleNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url),240,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240))

List(Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target),230,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)))

List(Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,url := @parameter1: java.lang.String,-1,SimpleNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url),240,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240)))

List(Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>,url := @parameter1: java.lang.String,-1,SimpleNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)) => Node(<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>,x1 := @parameter1: java.lang.String,-1,SimpleNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240)) => Node(<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>,x0.<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String path> = x1,39,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230) => (<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>, staticinvoke <spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>(entry, url), 240) => (<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String access$202(spark.route.SimpleRouteMatcher$RouteEntry,java.lang.String)>, x0.<spark.route.SimpleRouteMatcher$RouteEntry: java.lang.String path> = x1, 39)))

List(Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack15 = $stack14 - 1,216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack15 = $stack14 - 1, 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,$stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, $stack16 = virtualinvoke route.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(),216,SourceNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, url = virtualinvoke $stack16.<java.lang.String: java.lang.String trim()>(), 216)) => Node(<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>,specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target),230,SinkNode, path: (<spark.route.SimpleRouteMatcher: void parseValidateAddRoute(java.lang.String,java.lang.String,java.lang.Object)>, specialinvoke this.<spark.route.SimpleRouteMatcher: void addRoute(spark.route.HttpMethod,java.lang.String,java.lang.String,java.lang.Object)>(method, url, acceptType, target), 230)))

