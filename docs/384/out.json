[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack62 = $stack61 + 1,787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack62 = $stack61 + 1, 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,optValue := @parameter2: java.lang.String,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = optValue,839,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = optValue, 839)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value),855,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value), 855)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(),855,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(), 855)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value),868,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value), 868)) SINK=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opts = $stack32,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opts = $stack32, 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(),811,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(), 811)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(),817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(), 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opt = (java.lang.String) $stack37,817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opt = (java.lang.String) $stack37, 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,optName := @parameter1: java.lang.String,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = optName,838,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = optName, 838)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack52 = interfaceinvoke $stack51.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack52 = interfaceinvoke $stack51.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack53 = (org.tomitribe.crest.cmds.processors.OptionParam) $stack52,844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack53 = (org.tomitribe.crest.cmds.processors.OptionParam) $stack52, 844)) => Node(<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>,this := @this: org.tomitribe.crest.cmds.processors.OptionParam,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>,$stack1 = this.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String name>,111,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(),844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value),868,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value), 868))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack32 = new java.util.HashSet",
				"location": {
					"file": "",
					"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
					"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
					"line": 806
				},
				"stackTrace": [{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 806
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 806
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 811
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 817
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 817
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": -1
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 838
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 844
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 844
},{
	"class": "org.tomitribe.crest.cmds.processors.OptionParam",
	"method": "<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>",
	"line": -1
},{
	"class": "org.tomitribe.crest.cmds.processors.OptionParam",
	"method": "<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>",
	"line": 111
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 844
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 868
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61)",
				"location": {
					"file": "",
					"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
					"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
					"line": 787
				},
				"stackTrace": [{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 787
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 787
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 787
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": -1
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 839
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 855
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 855
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 868
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value)",
				"location": {
					"file": "",
					"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
					"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
					"line": 868
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack62 = $stack61 + 1,787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack62 = $stack61 + 1, 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated),812,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)) SINK=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opts = $stack32,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opts = $stack32, 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(),811,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(), 811)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(),817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(), 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opt = (java.lang.String) $stack37,817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opt = (java.lang.String) $stack37, 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated),812,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack32 = new java.util.HashSet",
				"location": {
					"file": "",
					"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
					"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
					"line": 806
				},
				"stackTrace": [{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 806
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 806
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 811
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 817
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 817
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 812
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61)",
				"location": {
					"file": "",
					"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
					"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
					"line": 787
				},
				"stackTrace": [{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 787
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 787
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 787
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 812
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated)",
				"location": {
					"file": "",
					"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
					"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
					"line": 812
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack62 = $stack61 + 1,787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack62 = $stack61 + 1, 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,optValue := @parameter2: java.lang.String,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = optValue,839,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = optValue, 839)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value),859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value), 859)) SINK=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opts = $stack32,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opts = $stack32, 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(),811,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(), 811)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(),817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(), 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opt = (java.lang.String) $stack37,817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opt = (java.lang.String) $stack37, 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,optName := @parameter1: java.lang.String,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = optName,838,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = optName, 838)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack52 = interfaceinvoke $stack51.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack52 = interfaceinvoke $stack51.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack53 = (org.tomitribe.crest.cmds.processors.OptionParam) $stack52,844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack53 = (org.tomitribe.crest.cmds.processors.OptionParam) $stack52, 844)) => Node(<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>,this := @this: org.tomitribe.crest.cmds.processors.OptionParam,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>,$stack1 = this.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String name>,111,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(),844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack20 = interfaceinvoke supplied.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),849,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack20 = interfaceinvoke supplied.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 849)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,existing = (java.lang.String) $stack20,849,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, existing = (java.lang.String) $stack20, 849)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack26 = new java.lang.StringBuilder,859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack26.<java.lang.StringBuilder: void <init>()>(), 859)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(existing),859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(existing), 859)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000"),859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\u0000'), 859)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value),859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value), 859))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack32 = new java.util.HashSet",
				"location": {
					"file": "",
					"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
					"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
					"line": 806
				},
				"stackTrace": [{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 806
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 806
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 811
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 817
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 817
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": -1
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 838
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 844
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 844
},{
	"class": "org.tomitribe.crest.cmds.processors.OptionParam",
	"method": "<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>",
	"line": -1
},{
	"class": "org.tomitribe.crest.cmds.processors.OptionParam",
	"method": "<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>",
	"line": 111
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 844
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 849
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 849
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 859
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 859
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 859
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 859
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61)",
				"location": {
					"file": "",
					"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
					"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
					"line": 787
				},
				"stackTrace": [{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 787
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 787
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 787
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": -1
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 839
},{
	"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
	"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
	"line": 859
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value)",
				"location": {
					"file": "",
					"class": "org.tomitribe.crest.cmds.CmdMethod$Arguments",
					"method": "<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>",
					"line": 859
				}
			}
		]
	}
}

]
