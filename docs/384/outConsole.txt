Running soot scenario crest;org.tomitribe.crest.cmds.CmdMethod;getCommand(String, String, Map<String,String>, Map<String,String>, List<String>, Set<String>);eaa8735a70f7f9a5fd6d805ebacc5bfaacc57ba9
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/crest/eaa8735a70f7f9a5fd6d805ebacc5bfaacc57ba9/original-without-dependencies/toolz-0.10-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 1,23400
Time to perform Confluence 1 Inter 1,07500
Configure Soot Confluence 2 Inter 0,66800
Time to perform Confluence 2 Inter 0,47800
Visited methods: 52
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack62 = $stack61 + 1,787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack62 = $stack61 + 1, 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,optValue := @parameter2: java.lang.String,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = optValue,839,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = optValue, 839)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value),855,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value), 855)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(),855,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>(), 855)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value),868,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value), 868))
SINK=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opts = $stack32,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opts = $stack32, 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(),811,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(), 811)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(),817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(), 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opt = (java.lang.String) $stack37,817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opt = (java.lang.String) $stack37, 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,optName := @parameter1: java.lang.String,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = optName,838,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = optName, 838)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack52 = interfaceinvoke $stack51.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack52 = interfaceinvoke $stack51.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack53 = (org.tomitribe.crest.cmds.processors.OptionParam) $stack52,844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack53 = (org.tomitribe.crest.cmds.processors.OptionParam) $stack52, 844)) => Node(<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>,this := @this: org.tomitribe.crest.cmds.processors.OptionParam,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>,$stack1 = this.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String name>,111,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(),844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value),868,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value), 868)), SOURCE=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack62 = $stack61 + 1,787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack62 = $stack61 + 1, 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated),812,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812))
SINK=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opts = $stack32,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opts = $stack32, 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(),811,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(), 811)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(),817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(), 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opt = (java.lang.String) $stack37,817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opt = (java.lang.String) $stack37, 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated),812,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)), SOURCE=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack62 = $stack61 + 1,787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack62 = $stack61 + 1, 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62),787,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack62), 787)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,optValue := @parameter2: java.lang.String,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,value = optValue,839,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, value = optValue, 839)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value),859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value), 859))
SINK=>BASE: Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opts = $stack32,806,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opts = $stack32, 806)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(),811,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, l11#31 = interfaceinvoke opts.<java.util.Set: java.util.Iterator iterator()>(), 811)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(),817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack37 = interfaceinvoke l11#31.<java.util.Iterator: java.lang.Object next()>(), 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,opt = (java.lang.String) $stack37,817,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, opt = (java.lang.String) $stack37, 817)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,optName := @parameter1: java.lang.String,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = optName,838,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = optName, 838)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack52 = interfaceinvoke $stack51.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack52 = interfaceinvoke $stack51.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack53 = (org.tomitribe.crest.cmds.processors.OptionParam) $stack52,844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack53 = (org.tomitribe.crest.cmds.processors.OptionParam) $stack52, 844)) => Node(<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>,this := @this: org.tomitribe.crest.cmds.processors.OptionParam,-1,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>,$stack1 = this.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String name>,111,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(),844,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke $stack53.<org.tomitribe.crest.cmds.processors.OptionParam: java.lang.String getName()>(), 844)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack20 = interfaceinvoke supplied.<java.util.Map: java.lang.Object get(java.lang.Object)>(name),849,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack20 = interfaceinvoke supplied.<java.util.Map: java.lang.Object get(java.lang.Object)>(name), 849)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,existing = (java.lang.String) $stack20,849,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, existing = (java.lang.String) $stack20, 849)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack26 = new java.lang.StringBuilder,859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack26.<java.lang.StringBuilder: void <init>()>(), 859)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(existing),859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(existing), 859)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000"),859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\u0000'), 859)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value),859,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value), 859))]
Confluence interference in <org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>
Confluence flows from execution of lines 787 and 806 to line 812, defined in $stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61) and specialinvoke $stack32.<java.util.HashSet: void <init>()>() and used in specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated)
Caused by line 787 flow: path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack61 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 787)
Caused by line 806 flow: path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806)
Caused by line 812 flow: path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke this.<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>(prefix, opt, value, defaults, supplied, invalid, repeated), 812) => (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void processOption(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, interfaceinvoke supplied.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value), 868)
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/crest/eaa8735a70f7f9a5fd6d805ebacc5bfaacc57ba9/original-without-dependencies/toolz-0.10-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 1,28900
Runtime: 0.019s
Time to perform OA Inter 1,38600
OA Inter Visited methods: 12
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/crest/eaa8735a70f7f9a5fd6d805ebacc5bfaacc57ba9/original-without-dependencies/toolz-0.10-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 1,17300
Time to perform DFP Inter 0,94600
Depth limit: 5
CONFLICTS: []
Visited methods: 26
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/crest/eaa8735a70f7f9a5fd6d805ebacc5bfaacc57ba9/original-without-dependencies/toolz-0.10-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 1,08700
Time to perform DFP Inter 0,93000
Depth limit: 5
CONFLICTS: []
Visited methods: 26
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/crest/eaa8735a70f7f9a5fd6d805ebacc5bfaacc57ba9/original-without-dependencies/toolz-0.10-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 1,26500
Time to perform PDG 0,69700
CONFLICTS: [List(Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack58 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61),782,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack58 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 782)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int,int)>($stack57, $stack58),782,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int,int)>($stack57, $stack58), 782)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack17),793,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack17), 793)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack42 = virtualinvoke name.<java.lang.String: int length()>(),807,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack42 = virtualinvoke name.<java.lang.String: int length()>(), 807)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,if $stack42 <= 1 goto $stack32 = new java.util.HashSet,807,SimpleNode, path: ) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806))), List(Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,if $stack31 <= -1 goto $stack32 = new java.util.HashSet,801,SourceNode, path: ) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack42 = virtualinvoke name.<java.lang.String: int length()>(),807,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack42 = virtualinvoke name.<java.lang.String: int length()>(), 807)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,if $stack42 <= 1 goto $stack32 = new java.util.HashSet,807,SimpleNode, path: ) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806))), List(Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack15 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61),781,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack15 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 781)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,if $stack15 <= 0 goto $stack16 = virtualinvoke arg.<java.lang.String: boolean startsWith(java.lang.String)>("--no-"),781,SourceNode, path: ) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack57 = $stack55 + $stack56,782,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack57 = $stack55 + $stack56, 782)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int,int)>($stack57, $stack58),782,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int,int)>($stack57, $stack58), 782)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack17),793,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack17), 793)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack42 = virtualinvoke name.<java.lang.String: int length()>(),807,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack42 = virtualinvoke name.<java.lang.String: int length()>(), 807)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,if $stack42 <= 1 goto $stack32 = new java.util.HashSet,807,SimpleNode, path: ) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806))), List(Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack73 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61),784,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack73 = virtualinvoke arg.<java.lang.String: int indexOf(int)>(61), 784)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int,int)>(0, $stack73),784,SourceNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int,int)>(0, $stack73), 784)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack17),793,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, name = virtualinvoke arg.<java.lang.String: java.lang.String substring(int)>($stack17), 793)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack42 = virtualinvoke name.<java.lang.String: int length()>(),807,SimpleNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, $stack42 = virtualinvoke name.<java.lang.String: int length()>(), 807)) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,if $stack42 <= 1 goto $stack32 = new java.util.HashSet,807,SimpleNode, path: ) => Node(<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>,$stack32 = new java.util.HashSet,806,SinkNode, path: (<org.tomitribe.crest.cmds.CmdMethod$Arguments: void getCommand(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,java.util.Set)>, specialinvoke $stack32.<java.util.HashSet: void <init>()>(), 806)))]
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/crest/eaa8735a70f7f9a5fd6d805ebacc5bfaacc57ba9/original-without-dependencies/toolz-0.10-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 1,43000
Time to perform PDG 0,71400
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
