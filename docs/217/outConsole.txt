Running soot scenario logit;com.stuartwarren.logit.log4j1.Layout;doFormat(LoggingEvent);eac908db9cf67867431c05991d8f9fe0865ce4d8
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/logit/eac908db9cf67867431c05991d8f9fe0865ce4d8/original-without-dependencies/logit-0.5.4-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,76700
Time to perform Confluence 1 Inter 1,18500
Configure Soot Confluence 2 Inter 0,30900
Time to perform Confluence 2 Inter 0,66000
Visited methods: 102
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/logit/eac908db9cf67867431c05991d8f9fe0865ce4d8/original-without-dependencies/logit-0.5.4-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,81800
Runtime: 0.012s
Time to perform OA Inter 0,90400
OA Inter Visited methods: 19
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/logit/eac908db9cf67867431c05991d8f9fe0865ce4d8/original-without-dependencies/logit-0.5.4-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,78400
Time to perform DFP Inter 0,96700
Depth limit: 5
CONFLICTS: DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in $stack3 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack3 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 234)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in $stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in $stack3 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack3 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 234)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 85, defined in $stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21)
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 85 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21), 85)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in $stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in this.<com.stuartwarren.logit.layout.Log: java.util.Map fields> = $stack12
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, this.<com.stuartwarren.logit.layout.Log: java.util.Map fields> = $stack12, 235)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in $stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18)
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 85, defined in log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21)
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 85 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21), 85)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in $stack5 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack5 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 244)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in this.<com.stuartwarren.logit.layout.Log: java.util.Map fields> = $stack12
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, this.<com.stuartwarren.logit.layout.Log: java.util.Map fields> = $stack12, 235)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18)
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in $stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in interfaceinvoke $stack10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack9)
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, interfaceinvoke $stack10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack9), 240)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in interfaceinvoke $stack10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack9)
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, interfaceinvoke $stack10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack9), 240)
DF interference in <com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>
Data flows from execution of line 66 to 80, defined in $stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>() and propagated in $stack5 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>
Caused by line 66 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)
Caused by line 80 flow: path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack5 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 244)
[List(Node(<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>,$stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),45,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>($stack26), 93)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,$stack10 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>,240,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack10 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 240)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,interfaceinvoke $stack10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack9),240,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, interfaceinvoke $stack10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack9), 240))), List(Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>($stack26), 93)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this.<com.stuartwarren.logit.layout.Log: java.util.Map fields> = $stack12,235,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, this.<com.stuartwarren.logit.layout.Log: java.util.Map fields> = $stack12, 235))), List(Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18),80,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80))), List(Node(<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>,$stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),45,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>($stack26), 93)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,$stack5 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>,244,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack5 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 244))), List(Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21),85,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21), 85))), List(Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>($stack26), 93)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,$stack5 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>,244,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack5 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 244))), List(Node(<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>,$stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),45,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21),85,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21), 85))), List(Node(<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>,$stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),45,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>($stack26), 93)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,$stack3 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>,234,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack3 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 234))), List(Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>($stack26), 93)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,$stack3 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>,234,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack3 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 234))), List(Node(<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>,$stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),45,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18),80,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80))), List(Node(<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>,$stack2 = virtualinvoke $stack1.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),45,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>($stack26), 93)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this.<com.stuartwarren.logit.layout.Log: java.util.Map fields> = $stack12,235,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, this.<com.stuartwarren.logit.layout.Log: java.util.Map fields> = $stack12, 235))), List(Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void setFields(java.lang.String)>($stack26), 93)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,this := @this: com.stuartwarren.logit.layout.Log,-1,SimpleNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,$stack10 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>,240,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, $stack10 = this.<com.stuartwarren.logit.layout.Log: java.util.Map fields>, 240)) => Node(<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>,interfaceinvoke $stack10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack9),240,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80) => (<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>, interfaceinvoke $stack10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack9), 240)))]
Visited methods: 51
 Analysis results
----------------------------
 Number of conflicts: 12
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/logit/eac908db9cf67867431c05991d8f9fe0865ce4d8/original-without-dependencies/logit-0.5.4-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,57500
Time to perform DFP Inter 0,94300
Depth limit: 5
CONFLICTS: []
Visited methods: 51
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/logit/eac908db9cf67867431c05991d8f9fe0865ce4d8/original-without-dependencies/logit-0.5.4-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,53900
Time to perform PDG 0,55200
CONFLICTS: [List(Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18),80,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack17, $stack18), 80))), List(Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(),66,SourceNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, log = virtualinvoke $stack5.<com.stuartwarren.logit.layout.LayoutFactory: com.stuartwarren.logit.layout.Log getLog()>(), 66)) => Node(<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>,virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21),85,SinkNode, path: (<com.stuartwarren.logit.log4j1.Layout: com.stuartwarren.logit.layout.Log doFormat(org.apache.log4j.spi.LoggingEvent)>, virtualinvoke log.<com.stuartwarren.logit.layout.Log: void addField(com.stuartwarren.logit.fields.IFieldName,java.lang.Object)>($stack20, $stack21), 85)))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/logit/eac908db9cf67867431c05991d8f9fe0865ce4d8/original-without-dependencies/logit-0.5.4-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,55300
Time to perform PDG 0,49000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
