[
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "36"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload), 36)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.ByteArrayOutputStream: void write(byte[])>(processedPayload)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "41"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, virtualinvoke output.<java.io.ByteArrayOutputStream: void write(byte[])>(processedPayload), 41)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "stockIconId := @parameter1: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "iconId := @parameter0: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png')",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = newarray (byte)[4096]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = new java.io.ByteArrayOutputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(), 29)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(), 29)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "stockIconId := @parameter1: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "iconId := @parameter0: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png')",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = (long) n",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack5",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = (long) n",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if -1 == $stack7 goto return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "stockIconId := @parameter1: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "iconId := @parameter0: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png')",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "data := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "77"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "36"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload), 36)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack5",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "data := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "encryptedData := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)","(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>, $stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1), 77)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke cipher.<javax.crypto.Cipher: byte[] doFinal(byte[])>(encryptedData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>",
  "line": "86"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)","(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>, $stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1), 77)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "data := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "encryptedData := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)","(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>, $stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1), 77)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke cipher.<javax.crypto.Cipher: byte[] doFinal(byte[])>(encryptedData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>",
  "line": "86"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)","(<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>, $stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1), 77)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "stockIconId := @parameter1: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "iconId := @parameter0: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png')",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if -1 == $stack7 goto return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = newarray (byte)[4096]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "buffer := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.Entry: int iconId>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Entry",
  "method": "<de.slackspace.openkeepass.domain.Entry: int getIconId()>",
  "line": "88"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "stockIconId := @parameter1: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "iconId := @parameter0: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png')",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = (long) n",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = newarray (byte)[4096]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "buffer := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if -1 == $stack7 goto return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "output := @parameter1: java.io.OutputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "data := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "77"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "34"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "data := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "77"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "36"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload), 36)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.ByteArrayOutputStream: void write(byte[])>(processedPayload)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "41"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, virtualinvoke output.<java.io.ByteArrayOutputStream: void write(byte[])>(processedPayload), 41)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "data := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] transformData(byte[],byte[],byte[],int)>(key, ivRaw, data, 1)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Aes",
  "method": "<de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>",
  "line": "77"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "34"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] encrypt(byte[],byte[],byte[])>(aesKey, $stack21, payload), 34)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.Entry: int iconId>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Entry",
  "method": "<de.slackspace.openkeepass.domain.Entry: int getIconId()>",
  "line": "88"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "stockIconId := @parameter1: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "iconId := @parameter0: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png')",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if -1 == $stack7 goto return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "36"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, processedPayload = staticinvoke <de.slackspace.openkeepass.crypto.Aes: byte[] decrypt(byte[],byte[],byte[])>(aesKey, $stack17, payload), 36)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = newarray (byte)[4096]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "buffer := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = (long) n",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = (long) n",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "count = 0L",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "35"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.Entry: int iconId>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Entry",
  "method": "<de.slackspace.openkeepass.domain.Entry: int getIconId()>",
  "line": "88"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "stockIconId := @parameter1: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "iconId := @parameter0: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png')",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.Entry: int iconId>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Entry",
  "method": "<de.slackspace.openkeepass.domain.Entry: int getIconId()>",
  "line": "88"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>(iconLibrary, group), 54)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: void enrichEntriesWithIcons(de.slackspace.openkeepass.domain.CustomIcons,de.slackspace.openkeepass.domain.Group)>, $stack21 = virtualinvoke entry.<de.slackspace.openkeepass.domain.Entry: int getIconId()>(), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "stockIconId := @parameter1: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "iconId := @parameter0: int",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(iconId), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png')",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('.png'), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 95)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>, inputStream = virtualinvoke $stack4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($stack9), 95)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if -1 == $stack7 goto return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": [""]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "52"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: de.slackspace.openkeepass.domain.Times getTimes()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "65"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack10 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: de.slackspace.openkeepass.domain.Times getTimes()>(), 65)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: de.slackspace.openkeepass.domain.Times times> = $stack10",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "65"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: de.slackspace.openkeepass.domain.Times times> = $stack10, 65)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>",
  "line": "193"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "209"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = newarray (byte)[4096]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getUuid()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack11 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getUuid()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: java.util.UUID uuid> = $stack11",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: java.util.UUID uuid> = $stack11, 66)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack2 = new java.io.ByteArrayOutputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(), 29)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, specialinvoke $stack2.<java.io.ByteArrayOutputStream: void <init>()>(), 29)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "64"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack9 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.lang.String getName()>(), 64)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getCustomIconUuid()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "68"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack13 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getCustomIconUuid()>(), 68)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: boolean isExpanded()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "63"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack7 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: boolean isExpanded()>(), 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>",
  "line": "233"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>",
  "line": "236"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack5",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: byte[] getIconData()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "67"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack12 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: byte[] getIconData()>(), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: byte[] iconData> = $stack12",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "67"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: byte[] iconData> = $stack12, 67)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if -1 == $stack7 goto return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>",
  "line": "233"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>",
  "line": "221"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "group := @parameter0: de.slackspace.openkeepass.domain.Group",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node> = group",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "207"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node> = group, 207)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "decompressed = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(gzipInputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.KeePassDatabase",
  "method": "<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>",
  "line": "345"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, decompressed = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(gzipInputStream), 345)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack50.<java.io.ByteArrayInputStream: void <init>(byte[])>(decompressed)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.KeePassDatabase",
  "method": "<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>",
  "line": "355"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack50.<java.io.ByteArrayInputStream: void <init>(byte[])>(decompressed), 355)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>",
  "line": "193"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "209"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.Group",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356)","(<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16)","(<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203)","(<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.Group: java.util.List groups>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356)","(<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16)","(<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203)","(<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = this.<de.slackspace.openkeepass.domain.GroupBuilder: java.util.List groups>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>",
  "line": "88"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, $stack6 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.KeePassFileBuilder: de.slackspace.openkeepass.domain.KeePassFileBuilder addTopGroups(de.slackspace.openkeepass.domain.Group[])>($stack5), 223)","(<de.slackspace.openkeepass.domain.KeePassFileBuilder: de.slackspace.openkeepass.domain.KeePassFileBuilder addTopGroups(de.slackspace.openkeepass.domain.Group[])>, virtualinvoke $stack6.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>(group), 68)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>, $stack2 = this.<de.slackspace.openkeepass.domain.GroupBuilder: java.util.List groups>, 88)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>",
  "line": "193"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "209"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.Group",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356)","(<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16)","(<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203)","(<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.Group: java.util.List groups>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356)","(<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16)","(<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203)","(<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getGroups()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "61"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack5 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getGroups()>(), 61)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: java.util.List groups> = $stack5",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "61"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: java.util.List groups> = $stack5, 61)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return $stack5",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack12 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: byte[] getIconData()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "67"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack12 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: byte[] getIconData()>(), 67)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: byte[] iconData> = $stack12",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "67"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: byte[] iconData> = $stack12, 67)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "inputStream = $stack13",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "28"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, inputStream = $stack13, 28)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if -1 == $stack7 goto return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = (long) n",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "group := @parameter0: de.slackspace.openkeepass.domain.Group",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node> = group",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "207"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node> = group, 207)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "62"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack6 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: int getIconId()>(), 62)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: int iconId> = $stack6",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "62"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: int iconId> = $stack6, 62)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack7 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: boolean isExpanded()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "63"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack7 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: boolean isExpanded()>(), 63)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack5 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getGroups()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "61"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack5 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getGroups()>(), 61)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: java.util.List groups> = $stack5",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "61"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: java.util.List groups> = $stack5, 61)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>",
  "line": "193"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "209"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.Group",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356)","(<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16)","(<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203)","(<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.Group: java.util.List groups>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356)","(<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16)","(<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203)","(<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack2 = this.<de.slackspace.openkeepass.domain.GroupBuilder: java.util.List groups>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>",
  "line": "88"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, $stack6 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.KeePassFileBuilder: de.slackspace.openkeepass.domain.KeePassFileBuilder addTopGroups(de.slackspace.openkeepass.domain.Group[])>($stack5), 223)","(<de.slackspace.openkeepass.domain.KeePassFileBuilder: de.slackspace.openkeepass.domain.KeePassFileBuilder addTopGroups(de.slackspace.openkeepass.domain.Group[])>, virtualinvoke $stack6.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>(group), 68)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder addGroup(de.slackspace.openkeepass.domain.Group)>, $stack2 = this.<de.slackspace.openkeepass.domain.GroupBuilder: java.util.List groups>, 88)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>",
  "line": "193"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getEntries()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "60"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack4 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getEntries()>(), 60)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "103"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>",
  "line": "193"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] protectedStreamKey>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.KeePassHeader",
  "method": "<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>",
  "line": "354"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack22 = virtualinvoke $stack21.<de.slackspace.openkeepass.domain.KeePassHeader: int getHeaderSize()>(), 321)","(<de.slackspace.openkeepass.domain.KeePassHeader: int getHeaderSize()>, value = virtualinvoke this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getValue(int)>(i), 340)","(<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getValue(int)>, $stack4 = virtualinvoke this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(), 223)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack48 = virtualinvoke $stack47.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.KeePassDatabase",
  "method": "<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>",
  "line": "350"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack48 = virtualinvoke $stack47.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(), 350)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "gzipInputStream#4 = staticinvoke <de.slackspace.openkeepass.crypto.Salsa20: de.slackspace.openkeepass.crypto.Salsa20 createInstance(byte[])>($stack48)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.KeePassDatabase",
  "method": "<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>",
  "line": "350"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, gzipInputStream#4 = staticinvoke <de.slackspace.openkeepass.crypto.Salsa20: de.slackspace.openkeepass.crypto.Salsa20 createInstance(byte[])>($stack48), 350)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack54.<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>(gzipInputStream#4)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.KeePassDatabase",
  "method": "<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>",
  "line": "356"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack54.<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>(gzipInputStream#4), 356)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>",
  "line": "233"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getCustomIconUuid()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "68"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack13 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getCustomIconUuid()>(), 68)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] protectedStreamKey>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.KeePassHeader",
  "method": "<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>",
  "line": "354"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack22 = virtualinvoke $stack21.<de.slackspace.openkeepass.domain.KeePassHeader: int getHeaderSize()>(), 321)","(<de.slackspace.openkeepass.domain.KeePassHeader: int getHeaderSize()>, value = virtualinvoke this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getValue(int)>(i), 340)","(<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getValue(int)>, $stack4 = virtualinvoke this.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(), 223)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack48 = virtualinvoke $stack47.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.KeePassDatabase",
  "method": "<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>",
  "line": "350"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack48 = virtualinvoke $stack47.<de.slackspace.openkeepass.domain.KeePassHeader: byte[] getProtectedStreamKey()>(), 350)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "gzipInputStream#4 = staticinvoke <de.slackspace.openkeepass.crypto.Salsa20: de.slackspace.openkeepass.crypto.Salsa20 createInstance(byte[])>($stack48)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.KeePassDatabase",
  "method": "<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>",
  "line": "350"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, gzipInputStream#4 = staticinvoke <de.slackspace.openkeepass.crypto.Salsa20: de.slackspace.openkeepass.crypto.Salsa20 createInstance(byte[])>($stack48), 350)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "crypto := @parameter0: de.slackspace.openkeepass.crypto.ProtectedStringCrypto",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.processor.DecryptionStrategy",
  "method": "<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack54.<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>(gzipInputStream#4), 356)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.processor.DecryptionStrategy: de.slackspace.openkeepass.crypto.ProtectedStringCrypto crypto> = crypto",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.processor.DecryptionStrategy",
  "method": "<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>",
  "line": "10"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack54.<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>(gzipInputStream#4), 356)","(<de.slackspace.openkeepass.processor.DecryptionStrategy: void <init>(de.slackspace.openkeepass.crypto.ProtectedStringCrypto)>, this.<de.slackspace.openkeepass.processor.DecryptionStrategy: de.slackspace.openkeepass.crypto.ProtectedStringCrypto crypto> = crypto, 10)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = newarray (byte)[4096]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "buffer := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "if -1 == $stack7 goto return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack6 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: int getIconId()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "62"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack6 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: int getIconId()>(), 62)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: int iconId> = $stack6",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "62"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: int iconId> = $stack6, 62)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>",
  "line": "193"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "209"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.Group",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356)","(<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16)","(<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203)","(<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.Group: java.util.List groups>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>",
  "line": "95"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, virtualinvoke $stack53.<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>($stack54, unprocessedKeepassFile), 356)","(<de.slackspace.openkeepass.processor.ProtectedValueProcessor: void processProtectedValues(de.slackspace.openkeepass.processor.ProtectionStrategy,de.slackspace.openkeepass.domain.KeePassFile)>, entries = virtualinvoke keePassFile.<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>(), 16)","(<de.slackspace.openkeepass.domain.KeePassFile: java.util.List getEntries()>, specialinvoke this.<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>($stack4, allEntries), 203)","(<de.slackspace.openkeepass.domain.KeePassFile: void getEntries(de.slackspace.openkeepass.domain.Group,java.util.List)>, groups = virtualinvoke parentGroup.<de.slackspace.openkeepass.domain.Group: java.util.List getGroups()>(), 247)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: de.slackspace.openkeepass.domain.Times getTimes()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "65"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack10 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: de.slackspace.openkeepass.domain.Times getTimes()>(), 65)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: de.slackspace.openkeepass.domain.Times times> = $stack10",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "65"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: de.slackspace.openkeepass.domain.Times times> = $stack10, 65)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getUuid()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack11 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.UUID getUuid()>(), 66)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "this.<de.slackspace.openkeepass.domain.Group: java.util.UUID uuid> = $stack11",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "66"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, this.<de.slackspace.openkeepass.domain.Group: java.util.UUID uuid> = $stack11, 66)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack9 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.lang.String getName()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "64"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack9 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.lang.String getName()>(), 64)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "output := @parameter1: java.io.OutputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>",
  "line": "233"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack3 = virtualinvoke $stack2.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>",
  "line": "236"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>",
  "line": "233"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack8 = (long) n",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "groupContract := @parameter0: de.slackspace.openkeepass.domain.GroupContract",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getEntries()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.Group",
  "method": "<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>",
  "line": "60"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)","(<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>, $stack4 = interfaceinvoke groupContract.<de.slackspace.openkeepass.domain.GroupContract: java.util.List getEntries()>(), 60)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: de.slackspace.openkeepass.domain.GroupBuilder",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.GroupBuilder",
  "method": "<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>",
  "line": "103"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)","(<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>, specialinvoke $stack1.<de.slackspace.openkeepass.domain.Group: void <init>(de.slackspace.openkeepass.domain.GroupContract)>(this), 103)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = newarray (byte)[4096]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "buffer := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>",
  "line": "233"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>",
  "line": "221"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack13 = virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>(), 57)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.KeePassFile close()>, rootNode = virtualinvoke this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getRoot()>(), 221)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "inputStream = $stack13",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "28"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, inputStream = $stack13, 28)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "38"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, virtualinvoke output.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, n), 38)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "inputStream = $stack13",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "28"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, inputStream = $stack13, 28)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "decompressed = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(gzipInputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.KeePassDatabase",
  "method": "<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>",
  "line": "345"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, decompressed = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(gzipInputStream), 345)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack50.<java.io.ByteArrayInputStream: void <init>(byte[])>(decompressed)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.KeePassDatabase",
  "method": "<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>",
  "line": "355"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, specialinvoke $stack50.<java.io.ByteArrayInputStream: void <init>(byte[])>(decompressed), 355)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack1 = this.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group node>",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>",
  "line": "193"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.zipper.GroupZipper",
  "method": "<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>",
  "line": "209"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)","(<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>, $stack4 = virtualinvoke $stack3.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.Group getNode()>(), 209)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "inputStream = $stack13",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.crypto.Decrypter",
  "method": "<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>",
  "line": "28"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, inputStream = $stack13, 28)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "input := @parameter0: java.io.InputStream",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = (long) n",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack3 = newarray (byte)[4096]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "30"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "buffer := @parameter2: byte[]",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "-1"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack7 = virtualinvoke input.<java.io.InputStream: int read(byte[])>(buffer), 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "n = $stack7",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "37"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, n = $stack7, 37)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack8 = (long) n",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, $stack8 = (long) n, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "count = 0L",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "35"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "count = count + $stack8",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "39"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, staticinvoke <de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>(input, output, $stack3), 30)","(<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>, count = count + $stack8, 39)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "return count",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,byte[])>",
  "line": "41"
},
"stackTrace": [""]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "output = $stack2",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "29"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)","(<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>, output = $stack2, 29)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack5 = virtualinvoke output.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.util.StreamUtils",
  "method": "<de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>",
  "line": "31"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, aesDecryptedDbFile = virtualinvoke $stack24.<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(key, cryptoInformation, $stack23), 322)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] decryptDatabase(byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, $stack6 = specialinvoke this.<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>(0, database, cryptoInformation, aesKey), 16)","(<de.slackspace.openkeepass.crypto.Decrypter: byte[] processDatabaseEncryption(boolean,byte[],de.slackspace.openkeepass.crypto.CryptoInformation,byte[])>, payload = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream), 31)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = staticinvoke <de.slackspace.openkeepass.util.StreamUtils: byte[] toByteArray(java.io.InputStream)>(inputStream)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>",
  "line": "101"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId), 84)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getStockIconData(int)>(stockIconId)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>",
  "line": "84"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "50"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, iconData = specialinvoke this.<de.slackspace.openkeepass.domain.enricher.IconEnricher: byte[] getIconData(java.util.UUID,int,de.slackspace.openkeepass.domain.CustomIcons)>($stack15, $stack16, iconLibrary), 50)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, $stack19 = virtualinvoke $stack18.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.GroupBuilder iconData(byte[])>(iconData), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>()",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "51"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, groupWithIcon = virtualinvoke $stack19.<de.slackspace.openkeepass.domain.GroupBuilder: de.slackspace.openkeepass.domain.Group build()>(), 51)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon)",
"location": {
  "file": "",
  "class": "de.slackspace.openkeepass.domain.enricher.IconEnricher",
  "method": "<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>",
  "line": "52"
},
"stackTrace": ["(<de.slackspace.openkeepass.KeePassDatabase: de.slackspace.openkeepass.domain.KeePassFile decryptAndParseDatabase(byte[])>, $stack56 = virtualinvoke $stack55.<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>(unprocessedKeepassFile), 357)","(<de.slackspace.openkeepass.domain.enricher.IconEnricher: de.slackspace.openkeepass.domain.KeePassFile enrichNodesWithIconData(de.slackspace.openkeepass.domain.KeePassFile)>, virtualinvoke zipper.<de.slackspace.openkeepass.domain.zipper.GroupZipper: de.slackspace.openkeepass.domain.zipper.GroupZipper replace(de.slackspace.openkeepass.domain.Group)>(groupWithIcon), 52)"]
}]
}
}

]
